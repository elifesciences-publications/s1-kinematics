!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/619a6fac/
A	lib/TrialData/util/dpca/dpca.m	/^            A = Xmargs{i};$/;"	v
A	lib/circ-toolbox/CircStat/circ_otest.m	/^  A = pi*sqrt(n) \/ 2 \/ (n-2*m);$/;"	v
A	lib/circ-toolbox/CircStat/circ_wwtest.m	/^A = sum(pr.*pn) - r*n;$/;"	v
AsteriskIndices	lib/TrialData/util/openNEV_td.m	/^            AsteriskIndices   = find(DigiValues == '*');$/;"	v
B	lib/TrialData/util/dpca/dpca.m	/^            B = P(:,uu)*D(uu,:)*X;$/;"	v
B	lib/circ-toolbox/CircStat/circ_wwtest.m	/^B = n - sum(pr.*pn);$/;"	v
BasicHeader	lib/TrialData/util/openNEV_td.m	/^BasicHeader               = fread(FID, 336, '*uint8');$/;"	v
BasicHeader	lib/TrialData/util/openNSx_td.m	/^    BasicHeader                = fread(FID, 306, '*uint8');$/;"	v
C	lib/TrialData/util/dpca/dpca.m	/^        C = Xmargs{i}*X'\/(X*X' + options.Cnoise + (totalVar*thisLambda)^2*eye(size(X,1)));$/;"	v
C	lib/TrialData/util/gpfa/postprocess.m	/^    C               = ws.estParams.C;$/;"	v
C	lib/circ-toolbox/CircStat/circ_vmpdf.m	/^C = 1\/(2*pi*besseli(0,kappa));$/;"	v
CI_append	lib/NeuronTable/getPDsFromWeights.m	/^    CI_append = zeros(height(pdTable),2);$/;"	v
CI_thresh	lib/NeuronTable/comparePDClouds.m	/^CI_thresh = pi\/4; % threshold for what's considered a tuned neuron in filtering$/;"	v
CIpercentile	lib/NeuronTable/getTuningHull.m	/^CIpercentile = 95; % percent confidence interval$/;"	v
ChannelCount	lib/TrialData/util/openNSx_td.m	/^    ChannelCount               = double(fread(FID, 1       , 'uint32=>double'));$/;"	v
ChannelCount	lib/TrialData/util/openNSx_td.m	/^    ChannelCount               = double(typecast(BasicHeader(303:306), 'uint32'));$/;"	v
D	lib/TrialData/util/dpca/dpca.m	/^    D = U'*C;$/;"	v
DataBegTimestamp	lib/TrialData/util/openNEV_td.m	/^            DataBegTimestamp = digserTimestamp(AsteriskIndices);$/;"	v
DataLength	lib/TrialData/util/openNSx_td.m	/^    DataLength = EndPacket - StartPacket + 1;$/;"	v
DigiValues	lib/TrialData/util/openNEV_td.m	/^            DigiValues = char(DigiValues);$/;"	v
DigiValues	lib/TrialData/util/openNEV_td.m	/^DigiValues                 = tempDigiVals(digserIndices);$/;"	v
EZZ	lib/TrialData/util/gpfa/fastfa.m	/^    EZZ     = I - beta * L + beta * cX_beta;$/;"	v
Elec	lib/TrialData/util/openNSx_td.m	/^            Elec = str2num(inputArgument(3:end)); %#ok<ST2NM>$/;"	v
ElectrodeID	lib/TrialData/util/openNEV_td.m	/^            ElectrodeID                       = typecast(ExtendedHeader(9:10), 'uint16');$/;"	v
EndPacket	lib/TrialData/util/openNSx_td.m	/^	EndPacket = EndPacket - 1;$/;"	v
EndPacket	lib/TrialData/util/openNSx_td.m	/^            EndPacket = EndPacket * NSx.MetaTags.SamplingFreq * 3600;$/;"	v
EndPacket	lib/TrialData/util/openNSx_td.m	/^            EndPacket = EndPacket * NSx.MetaTags.SamplingFreq * 60;$/;"	v
EndPacket	lib/TrialData/util/openNSx_td.m	/^            EndPacket = EndPacket * NSx.MetaTags.SamplingFreq;$/;"	v
EndPacket	lib/TrialData/util/openNSx_td.m	/^        EndPacket = NSx.MetaTags.DataPoints - 1;$/;"	v
EndPacket	lib/TrialData/util/openNSx_td.m	/^        EndPacket = NSx.MetaTags.DataPoints;$/;"	v
EndPacket	lib/TrialData/util/openNSx_td.m	/^        EndPacket = inputArgument(end);$/;"	v
ExtHeaderLength	lib/TrialData/util/openNSx_td.m	/^ExtHeaderLength = 66;$/;"	v
ExtendedHeader	lib/TrialData/util/openNEV_td.m	/^    ExtendedHeader = fread(FID, 32, '*uint8');$/;"	v
ExtendedHeader	lib/TrialData/util/openNSx_td.m	/^    ExtendedHeader             = fread(FID, readSize, '*uint8');$/;"	v
F	lib/circ-toolbox/CircStat/circ_wwtest.m	/^F = beta * (n-s) * A \/ (s-1) \/ B;$/;"	v
F1	lib/circ-toolbox/CircStat/circ_hktest.m	/^  F1 = beta * ms_1 \/ ms_r;$/;"	v
F2	lib/circ-toolbox/CircStat/circ_hktest.m	/^  F2 = beta * ms_2 \/ ms_r;$/;"	v
FI	lib/circ-toolbox/CircStat/circ_hktest.m	/^    FI = [];$/;"	v
FI	lib/circ-toolbox/CircStat/circ_hktest.m	/^    FI = ms_i \/ ms_r;$/;"	v
FID	lib/TrialData/util/openNEV_td.m	/^FID                       = fopen(fileFullPath, 'r', 'ieee-le');$/;"	v
FID	lib/TrialData/util/openNSx_td.m	/^FID                       = fopen([path fname], 'r', 'ieee-le');$/;"	v
FR	lib/TrialData/Tools/addFiringRates.m	/^            FR = spikes\/bin_size;$/;"	v
Flags	lib/TrialData/util/openNEV_td.m	/^Flags = struct;$/;"	v
G	lib/circ-toolbox/CircKSDensity/circ_ksdensity.m	/^G = (exp( -((ti - mu).^2).\/ (2*sigma^2) ))';$/;"	v
HPF_cutoff	lib/TrialData/DataProcessing/parseFileByTrial.m	/^HPF_cutoff  =  10; % for EMG butterworth filter$/;"	v
HPF_cutoff	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^HPF_cutoff      = 750; % in Hz$/;"	v
HeaderBytes	lib/TrialData/util/openNSx_td.m	/^    HeaderBytes                = double(typecast(BasicHeader(3:6), 'uint32'));$/;"	v
I	lib/TrialData/util/gpfa/fastfa.m	/^  I     = eye(zDim);$/;"	v
ID	lib/NeuronTable/comparePDClouds.m	/^    ID = pdTable1(:,{'monkey','date','signalID'});$/;"	v
ID	lib/NeuronTable/getTuningHull.m	/^    ID = tuningTable(:,meta_header_idx);$/;"	v
ID	lib/NeuronTable/plotWeightClouds.m	/^    ID = tuningTable(:,{'monkey','date','signalID'});$/;"	v
ID	lib/plotMWTuningCloud.m	/^        ID = tuningHull(:,{'monkey','date','signalID'});$/;"	v
Inputs	lib/TrialData/util/openNEV_td.m	/^            Inputs                     = {'Digital'; 'AnCh1'; 'AnCh2'; 'AnCh3'; 'AnCh4'; 'AnCh5'/;"	v
Intercr	lib/TrialData/util/compute_pseudo_R2.m	/^  Intercr = sum(Y.*log(eps+Ymean) - Ymean);$/;"	v
J_dl	lib/get_alpha_potent.m	/^    J_dl = J_dl';$/;"	v
J_dl	lib/get_alpha_potent.m	/^    J_dl = J_dl([3;1],:);$/;"	v
J_dl	lib/get_alpha_potent.m	/^    J_dl = muscVel_dl\\handVel_dl;$/;"	v
J_pm	lib/get_alpha_potent.m	/^    J_pm = J_pm';$/;"	v
J_pm	lib/get_alpha_potent.m	/^    J_pm = J_pm([3;1],:);$/;"	v
J_pm	lib/get_alpha_potent.m	/^    J_pm = muscVel_pm\\handVel_pm;$/;"	v
K	lib/circ-toolbox/CircStat/circ_kuipertest.m	/^K = K * sqrt(n*m*(n+m));$/;"	v
K	lib/circ-toolbox/CircStat/circ_kuipertest.m	/^K = ktable(row,idx+1);$/;"	v
Ktilde	lib/TrialData/util/dpca/dpca_explainedVariance.m	/^    Ktilde = mean(reshape(options.numOfTrials, size(options.numOfTrials,1),[]),2);$/;"	v
L	lib/TrialData/util/dpca/dpca.m	/^        L = numComps;$/;"	v
L	lib/TrialData/util/dpca/dpca.m	/^        L = sum(numComps);$/;"	v
L	lib/TrialData/util/dpca/dpca_plot.m	/^        L = length(options.explainedVar.totalMarginalizedVar);$/;"	v
L	lib/TrialData/util/dpca/dpca_plot.m	/^        L = length(unique(options.whichMarg));$/;"	v
L	lib/TrialData/util/dpca/dpca_plot.m	/^L = length(options.marginalizationColours);$/;"	v
L	lib/TrialData/util/gpfa/fastfa.m	/^    L  = cX_beta \/ EZZ;$/;"	v
L	lib/TrialData/util/gpfa/fastfa.m	/^  L     = randn(xDim,zDim)*sqrt(scale\/zDim);$/;"	v
L	lib/TrialData/util/gpfa/postprocess.m	/^    L               = ws.kern(k).estParams.L;$/;"	v
L	lib/TrialData/util/moving_average.m	/^        L = filter(ones(2*bins+1,1)\/(2*bins+1),1,[data(:,i); zeros(bins,1)]);$/;"	v
L0	lib/TrialData/util/compute_pseudo_R2.m	/^    L0 = (k-1)*length(Y)*log(eps+Ymean) - length(Y)*Ymean\/theta;$/;"	v
L0	lib/TrialData/util/compute_pseudo_R2.m	/^  L0 = 2*length(Y)*sum(Y.*log((Yhat_null==0)+Yhat_null).\/mean(Yhat) + (1-Y).*log((Yhat_null==1)/;"	v
L1	lib/TrialData/util/compute_pseudo_R2.m	/^    L1 = (k-1)*sum(log(eps+Yhat)) - sum(Yhat)\/theta;$/;"	v
L1	lib/TrialData/util/compute_pseudo_R2.m	/^  L1 = 2*length(Y)*sum(Y.*log((Yhat==0)+Yhat).\/mean(Yhat) + (1-Y).*log((Yhat==1)+1-Yhat).\/(1-m/;"	v
LL	lib/TrialData/util/gpfa/fastfa.m	/^    LL = [LL LLi];    $/;"	v
LL	lib/TrialData/util/gpfa/fastfa.m	/^  LL    = [];$/;"	v
LLbase	lib/TrialData/util/gpfa/fastfa.m	/^      LLbase = LLi;$/;"	v
LLi	lib/TrialData/util/gpfa/fastfa.m	/^    LLi   = N*const + N*ldM - 0.5*N*sum(sum(MM .* cX)); $/;"	v
LLi	lib/TrialData/util/gpfa/fastfa.m	/^  LLi   = 0; $/;"	v
LLold	lib/TrialData/util/gpfa/fastfa.m	/^    LLold = LLi;    $/;"	v
LPF_cutoff	lib/TrialData/DataProcessing/parseFileByTrial.m	/^LPF_cutoff  =  20; % for EMG butterworth filter$/;"	v
Lorth	lib/TrialData/util/orthogonalize.m	/^    Lorth = L \/ mag;$/;"	v
Lorth	lib/TrialData/util/orthogonalize.m	/^    Lorth = UU(:, 1:xDim);$/;"	v
Lsat	lib/TrialData/util/compute_pseudo_R2.m	/^    Lsat = (k-1)*sum(log(eps+Y)) - sum(Y)\/theta;$/;"	v
Lsat	lib/TrialData/util/compute_pseudo_R2.m	/^  Lsat = 2*length(Y)*sum(Y.*log((Y==0)+Y).\/mean(Y) + (1-Y).*log((Y==1)+1-Y).\/(1-mean(Y)));$/;"	v
M	lib/TrialData/util/dpca/dpca.m	/^    M = C*X;$/;"	v
M	lib/circ-toolbox/CircStat/circ_cmtest.m	/^M = sum(m);$/;"	v
M	lib/circ-toolbox/CircStat/circ_median.m	/^M = size(alpha);$/;"	v
METATAGS	lib/TrialData/util/openNEV_td.m	/^        METATAGS = textread([fileFullPath(1:end-8) '.sif'], '%s');$/;"	v
MM	lib/TrialData/util/gpfa/fastfa.m	/^    MM   = iPh - iPhL \/ (I + L' * iPhL) * iPhL';$/;"	v
Mapfile	lib/TrialData/util/openNSx_td.m	/^            Mapfile = KTUEAMapFile;$/;"	v
Mode	lib/TrialData/util/openNEV_td.m	/^            Mode                    = ExtendedHeader(25);$/;"	v
Model1r	lib/TrialData/util/compute_rel_pseudo_R2.m	/^  Model1r = sum(Y.*log(eps+Yhat1) - Yhat1);$/;"	v
Model2r	lib/TrialData/util/compute_rel_pseudo_R2.m	/^  Model2r = sum(Y.*log(eps+Yhat2) - Yhat2);$/;"	v
Modelr	lib/TrialData/util/compute_pseudo_R2.m	/^  Modelr = sum(Y.*log(eps+Yhat) - Yhat);$/;"	v
N	lib/TrialData/util/dpca/dpca_plot.m	/^N = size(X, 1);$/;"	v
N	lib/TrialData/util/gpfa/neuralTraj_td.m	/^N    = length(seq);$/;"	v
N	lib/circ-toolbox/CircStat/circ_cmtest.m	/^N = length(idx);$/;"	v
N	lib/circ-toolbox/CircStat/circ_kappa.m	/^N = length(alpha);$/;"	v
NEV	lib/TrialData/DataProcessing/processNEV.m	/^            NEV = remove_spike_artifacts(NEV,rejection_num_chans,rejection_window,true);$/;"	v
NEV	lib/TrialData/DataProcessing/processNEV.m	/^        NEV = openNEV_td(filename);$/;"	v
NEV	lib/TrialData/DataProcessing/processNEV.m	/^        NEV = openNEV_td(filename,'nosave');$/;"	v
NEV	lib/TrialData/util/openNEV_td.m	/^NEV = struct('MetaTags',[], 'ElectrodesInfo', [], 'Data', []);$/;"	v
NSx	lib/TrialData/DataProcessing/processNSx.m	/^NSx = openNSx_td(filename,'read');$/;"	v
NSx	lib/TrialData/util/openNSx_td.m	/^NSx          = struct('MetaTags',[],'Data',[], 'RawData', []);$/;"	v
P	lib/TrialData/util/dpca/dpca.m	/^    P = U;$/;"	v
P	lib/circ-toolbox/CircStat/circ_cmtest.m	/^P = (N^2\/(M*(N-M))) * sum(m.^2 .\/ n) - N*M\/(N-M);$/;"	v
PCAparams	data_testing/testCoordFrameLinearity.m	/^    PCAparams = struct('signals',{{'opensim',find(contains(td(1).opensim_names,'_len'))}}, 'do_p/;"	v
PCAparams	lib/coordCorr.m	/^            PCAparams = struct('signals',{{'opensim',find(contains(td(1).opensim_names,'_len'))}/;"	v
PCAparams	lib/mwEncoders.m	/^            PCAparams = struct('signals',{{'opensim',find(contains(td(1).opensim_names,'_len'))}/;"	v
PCAparams_vel	data_testing/testCoordFrameLinearity.m	/^    PCAparams_vel = struct('signals',{{'opensim',find(contains(td(1).opensim_names,'_muscVel'))}/;"	v
PCAparams_vel	lib/coordCorr.m	/^            PCAparams_vel = struct('signals',{{'opensim',find(contains(td(1).opensim_names,'_mus/;"	v
PCAparams_vel	lib/get_alpha_potent.m	/^    PCAparams_vel = struct('signals',{{'opensim',find(contains(td_pm(1).opensim_names,'_muscVel'/;"	v
PCAparams_vel	lib/mwEncoders.m	/^            PCAparams_vel = struct('signals',{{'opensim',find(contains(td(1).opensim_names,'_mus/;"	v
PD	lib/NeuronTable/getTDClassicalPDs.m	/^    PD = zeros(num_out_signals,1);$/;"	v
PDCI	lib/NeuronTable/getTDClassicalPDs.m	/^    PDCI = zeros(num_out_signals,2);$/;"	v
PDCI_append	lib/NeuronTable/getPDsFromWeights.m	/^    PDCI_append = zeros(height(pdTable),2);$/;"	v
PD_append	lib/NeuronTable/getPDsFromWeights.m	/^    PD_append = zeros(height(pdTable),1);$/;"	v
PacketID	lib/TrialData/util/openNEV_td.m	/^    PacketID = char(ExtendedHeader(1:8)');$/;"	v
PacketIDs	lib/TrialData/util/openNEV_td.m	/^    PacketIDs = tRawData(5:6,Trackers.readPackets(1):Trackers.readPackets(2));$/;"	v
PacketIDs	lib/TrialData/util/openNEV_td.m	/^    PacketIDs = typecast(PacketIDs(:), 'uint16').';$/;"	v
PacketIDs	lib/TrialData/util/openNEV_td.m	/^PacketIDs = [];$/;"	v
Ph	lib/TrialData/util/gpfa/fastfa.m	/^      Ph = max(varFloor, Ph);$/;"	v
Ph	lib/TrialData/util/gpfa/fastfa.m	/^      Ph = mean(Ph) * ones(xDim, 1);$/;"	v
Ph	lib/TrialData/util/gpfa/fastfa.m	/^    Ph = diag(cX) - sum(cX_beta .* L, 2);$/;"	v
Ph	lib/TrialData/util/gpfa/fastfa.m	/^  Ph    = diag(cX);$/;"	v
Q	lib/TrialData/util/dpca/dpca_explainedVariance.m	/^    Q = size(Xfull,3);$/;"	v
R	lib/circ-toolbox/CircStat/circ_confmean.m	/^R = n.*r;$/;"	v
R	lib/circ-toolbox/CircStat/circ_kappa.m	/^  R = alpha;$/;"	v
R	lib/circ-toolbox/CircStat/circ_kappa.m	/^  R = circ_r(alpha,w);$/;"	v
R	lib/circ-toolbox/CircStat/circ_kurtosis.m	/^R = circ_r(alpha,w,[],dim);$/;"	v
R	lib/circ-toolbox/CircStat/circ_rtest.m	/^R = n*r;$/;"	v
R	lib/circ-toolbox/CircStat/circ_skewness.m	/^R = circ_r(alpha,w,[],dim);$/;"	v
R	lib/circ-toolbox/CircStat/circ_vtest.m	/^R = n * r;$/;"	v
R1	lib/circ-toolbox/CircStat/circ_ktest.m	/^R1 = n1*circ_r(alpha1);$/;"	v
R2	lib/TrialData/util/compute_pseudo_R2.m	/^    R2 = (1-(Lsat - L1).\/(Lsat-L0));$/;"	v
R2	lib/TrialData/util/compute_pseudo_R2.m	/^  R2 = (1-(Sat_r-Modelr).\/(Sat_r-Intercr))';$/;"	v
R2	lib/TrialData/util/compute_pseudo_R2.m	/^  R2 = 1 - L1\/L0;$/;"	v
R2	lib/TrialData/util/compute_rel_pseudo_R2.m	/^  R2 = (1-(Sat_r-Model2r).\/(Sat_r-Model1r))';$/;"	v
R2	lib/circ-toolbox/CircStat/circ_ktest.m	/^R2 = n2*circ_r(alpha2);$/;"	v
R_alpha	lib/circ-toolbox/CircStat/examples/example1.m	/^R_alpha = circ_r(alpha_rad);$/;"	v
R_beta	lib/circ-toolbox/CircStat/examples/example1.m	/^R_beta = circ_r(beta_rad);$/;"	v
ReadData	lib/TrialData/util/openNSx_td.m	/^        ReadData = inputArgument;$/;"	v
Report	lib/TrialData/util/openNSx_td.m	/^        Report = inputArgument;$/;"	v
S	lib/TrialData/util/dpca/dpca_explainedVariance.m	/^    S = size(Xfull,2);$/;"	v
S	lib/TrialData/util/dpca/dpca_explainedVariance.m	/^S = S(1:size(W,2));$/;"	v
S	lib/TrialData/util/dpca/dpca_explainedVariance.m	/^S = diag(S);$/;"	v
S	lib/circ-toolbox/CircStat/circ_var.m	/^S = 1 - r;$/;"	v
SS	lib/TrialData/util/compute_vaf.m	/^    SS = sum((Y-Yhat).^2,1);$/;"	v
SS	lib/TrialData/util/compute_vaf.m	/^    SS = sum((Y-repmat(meanY,size(Y,1),1)).^2);$/;"	v
SSE	lib/TrialData/util/compute_vaf.m	/^    SSE = sum((Y-Yhat).^2,1);$/;"	v
SSE	lib/TrialData/util/compute_vaf.m	/^    SSE = sum((Y-Yhat2).^2,1);$/;"	v
SSE	lib/coordCorr.m	/^    SSE = sum(sum((Y-Y_hat).^2,1),2);$/;"	v
SST	lib/coordCorr.m	/^    SST = sum(sum((Y-Y_bar).^2,1),2);$/;"	v
SS_total	lib/mwDecoders.m	/^            SS_total = square_sum(elbow_true-elbow_mean);$/;"	v
S_alpha	lib/circ-toolbox/CircStat/examples/example1.m	/^S_alpha = circ_var(alpha_rad);$/;"	v
S_beta	lib/circ-toolbox/CircStat/examples/example1.m	/^S_beta = circ_var(beta_rad);$/;"	v
Sat_r	lib/TrialData/util/compute_pseudo_R2.m	/^  Sat_r = sum(Y.*log(eps+Y) - Y);$/;"	v
Sat_r	lib/TrialData/util/compute_rel_pseudo_R2.m	/^  Sat_r = sum(Y.*log(eps+Y) - Y);$/;"	v
StartPacket	lib/TrialData/util/openNSx_td.m	/^            StartPacket = StartPacket * NSx.MetaTags.SamplingFreq * 3600;$/;"	v
StartPacket	lib/TrialData/util/openNSx_td.m	/^            StartPacket = StartPacket * NSx.MetaTags.SamplingFreq * 60;$/;"	v
StartPacket	lib/TrialData/util/openNSx_td.m	/^            StartPacket = double(StartPacket) * NSx.MetaTags.SamplingFreq;$/;"	v
StartPacket	lib/TrialData/util/openNSx_td.m	/^        StartPacket = inputArgument(1);$/;"	v
T	lib/TrialData/Analysis/getDPCA.m	/^T = size(trial_data(1).(signals{1,1}),1);$/;"	v
T	lib/TrialData/util/dpca/dpca_explainedVariance.m	/^    T = size(Xfull,4);$/;"	v
T	lib/TrialData/util/gpfa/getSeq_td.m	/^    T    = floor(size(dat(n).spikes, 2) \/ (binWidth\/dataBinWidth));$/;"	v
T	lib/TrialData/util/gpfa/plot3D_td.m	/^    T   = seq(n).T;$/;"	v
T	lib/circ-toolbox/CircKSDensity/circ_ksdensity.m	/^                    T = T(idx);$/;"	v
T	lib/circ-toolbox/CircKSDensity/circ_ksdensity.m	/^        T = circ_axial(circ_ang2rad(T));$/;"	v
TT	lib/TrialData/util/orthogonalize.m	/^    TT = diag(diag(DD)) * VV';$/;"	v
Tf	lib/circ-toolbox/CircKSDensity/circ_ksdensity.m	/^Tf = Tf';$/;"	v
Tf	lib/circ-toolbox/CircKSDensity/circ_ksdensity.m	/^Tf = hist(T,ti);$/;"	v
TimeScale	lib/TrialData/util/openNSx_td.m	/^        TimeScale = inputArgument;$/;"	v
Timestamp	lib/TrialData/util/openNEV_td.m	/^    Timestamp = tRawData(1:4,:);$/;"	v
Timestamp	lib/TrialData/util/openNEV_td.m	/^    Timestamp = typecast(Timestamp(:), 'uint32').';$/;"	v
Timestamp	lib/TrialData/util/openNEV_td.m	/^Timestamp = [];$/;"	v
Tp	lib/circ-toolbox/CircKSDensity/circ_ksdensity.m	/^Tp = [Tf(t2+1:tn); Tf; Tf(1:t2)];$/;"	v
U	lib/circ-toolbox/CircStat/circ_raotest.m	/^    U = U + abs(ti - lambda);$/;"	v
U	lib/circ-toolbox/CircStat/circ_raotest.m	/^U = (1\/2)*U;$/;"	v
U	lib/circ-toolbox/CircStat/circ_raotest.m	/^U = 0;$/;"	v
U	lib/circ-toolbox/CircStat/circ_raotest.m	/^U = U + abs(tn-lambda);$/;"	v
UC	lib/circ-toolbox/CircStat/circ_raotest.m	/^  UC = table(ridx,cidx+1);$/;"	v
UC	lib/circ-toolbox/CircStat/circ_raotest.m	/^  UC = table(ridx,end-1);$/;"	v
V	lib/TrialData/Analysis/getDPCA.m	/^V = [];$/;"	v
V	lib/TrialData/util/dpca/dpca.m	/^    V = V(:, order(1:L));$/;"	v
V	lib/TrialData/util/dpca/dpca.m	/^    V = V(:, toKeep);$/;"	v
V	lib/TrialData/util/dpca/dpca.m	/^V = encoder;$/;"	v
VAF	lib/TrialData/util/compute_vaf.m	/^VAF = 1-SSE.\/SS;$/;"	v
V_null	lib/TrialData/Analysis/getPotentSpace.m	/^        V_null                      = V(size(y,2)+1:end,:)';$/;"	v
V_null	lib/TrialData/Analysis/getPotentSpace.m	/^        V_null = [];$/;"	v
V_potent	lib/TrialData/Analysis/getPotentSpace.m	/^    V_potent                    = V(1:size(y,2),:)';$/;"	v
W	lib/TrialData/Analysis/getDPCA.m	/^W = [];$/;"	v
W	lib/TrialData/Analysis/getPotentSpace.m	/^    W = zeros( size(y,2), size(x,2) );$/;"	v
W	lib/TrialData/util/dpca/dpca.m	/^    W = W(:, order(1:L));$/;"	v
W	lib/TrialData/util/dpca/dpca.m	/^    W = W(:, toKeep);$/;"	v
W	lib/TrialData/util/dpca/dpca.m	/^W = decoder';$/;"	v
WSVARS	lib/TrialData/util/gpfa/twoStageEngine_td.m	/^WSVARS = vars(~ismember(vars, {'X', 'Y', 'LL', 'estParams',...$/;"	v
X	lib/TrialData/util/dpca/dpca.m	/^X = Xfull(:,:);$/;"	v
X	lib/TrialData/util/dpca/dpca.m	/^X = bsxfun(@minus, X, mean(X,2));$/;"	v
X	lib/TrialData/util/dpca/dpca_explainedVariance.m	/^X = Xfull(:,:);$/;"	v
X	lib/TrialData/util/dpca/dpca_explainedVariance.m	/^X = bsxfun(@minus, X, mean(X,2));$/;"	v
X	lib/TrialData/util/dpca/dpca_marginalize.m	/^X = bsxfun(@minus, X, mean(X(:,:),2));$/;"	v
X	lib/TrialData/util/dpca/dpca_marginalize.m	/^X = ipermute(X, [dimrest dimlist]);$/;"	v
X	lib/TrialData/util/dpca/dpca_marginalize.m	/^X = nanmean(X, length(size(X)));$/;"	v
X	lib/TrialData/util/dpca/dpca_marginalize.m	/^X = permute(X, [dimrest dimlist]);$/;"	v
X	lib/TrialData/util/dpca/dpca_marginalize.m	/^X = reshape(X, [dims(dimrest) prod(dims(dimlist))]);$/;"	v
X	lib/TrialData/util/dpca/dpca_plot.m	/^X = Xfull(:,:)';$/;"	v
X	lib/TrialData/util/gpfa/postprocess.m	/^      X              = [ws.seqTest.xsm];$/;"	v
X	lib/TrialData/util/gpfa/postprocess.m	/^      X              = fastfa_estep(Y, ws.kern(k).estParams);$/;"	v
X	lib/TrialData/util/gpfa/postprocess.m	/^    X               = [ws.kern(k).seqTrain.xpost];$/;"	v
X	lib/TrialData/util/gpfa/postprocess.m	/^    X               = [ws.seqTrain.xsm];    $/;"	v
X	lib/TrialData/util/gpfa/twoStageEngine_td.m	/^        X               = fastfa_estep(Y, estParams);$/;"	v
XF	lib/TrialData/util/dpca/dpca_plot.m	/^    XF = options.X_extra(:,:)';$/;"	v
XFcen	lib/TrialData/util/dpca/dpca_plot.m	/^    XFcen = bsxfun(@minus, XF, mean(X));$/;"	v
Xcen	lib/TrialData/util/dpca/dpca_plot.m	/^Xcen = bsxfun(@minus, X, mean(X));$/;"	v
Xfull	lib/TrialData/util/dpca/dpca_explainedVariance.m	/^Xfull = bsxfun(@minus, Xfull, mean(X,2));$/;"	v
XfullCen	lib/TrialData/util/dpca/dpca.m	/^XfullCen = reshape(X, size(Xfull));$/;"	v
XfullCen	lib/TrialData/util/dpca/dpca_plot.m	/^XfullCen = bsxfun(@minus, Xfull, mean(X)');$/;"	v
XfullNN	lib/TrialData/util/dpca/dpca_explainedVariance.m	/^    XfullNN = bsxfun(@times, ones(dims(1:end-1)), options.numOfTrials);$/;"	v
Xmargs	lib/TrialData/util/dpca/dpca_explainedVariance.m	/^Xmargs = dpca_marginalize(Xfull, 'combinedParams', options.combinedParams, 'ifFlat', 'yes');$/;"	v
XmargsNoise	lib/TrialData/util/dpca/dpca_explainedVariance.m	/^    XmargsNoise = dpca_marginalize(XnoiseFull, 'combinedParams', options.combinedParams);$/;"	v
Xnoise	lib/TrialData/util/dpca/dpca_explainedVariance.m	/^    Xnoise = XnoiseFull(:,:);$/;"	v
Xnoise	lib/TrialData/util/dpca/dpca_explainedVariance.m	/^    Xnoise = bsxfun(@minus, Xnoise, mean(Xnoise,2));$/;"	v
XnoiseFull	lib/TrialData/util/dpca/dpca_explainedVariance.m	/^    XnoiseFull = bsxfun(@minus, XnoiseFull, mean(Xnoise,2));$/;"	v
XnoiseFull	lib/TrialData/util/dpca/dpca_explainedVariance.m	/^    XnoiseFull = reshape(dif, dims(1:end-1));$/;"	v
Xorth	lib/TrialData/util/gpfa/postprocess.m	/^      Xorth   = estParams.Corth' * bsxfun(@minus, Y, estParams.d);$/;"	v
Xorth	lib/TrialData/util/orthogonalize.m	/^    Xorth = TT * X;$/;"	v
Xorth	lib/TrialData/util/orthogonalize.m	/^    Xorth = mag * X;    $/;"	v
Y	lib/TrialData/util/dpca/dpca_marginalize.m	/^    Y = X;$/;"	v
Y	lib/TrialData/util/dpca/dpca_marginalize.m	/^Y = X;$/;"	v
Y	lib/TrialData/util/gpfa/postprocess.m	/^      Y              = [ws.kern(k).seqTest.y];$/;"	v
Y	lib/TrialData/util/gpfa/postprocess.m	/^      Y       = [ws.kern(k).seqTest.y];$/;"	v
Y	lib/TrialData/util/gpfa/twoStageEngine_td.m	/^        Y = [kern(k).seqTest.y];$/;"	v
Y	lib/TrialData/util/gpfa/twoStageEngine_td.m	/^    Y = [kern(k).seqTrain.y];$/;"	v
Y	lib/coordCorr.m	/^    Y = getSig(td_test,model_params.out_signals);$/;"	v
YY	lib/TrialData/util/dpca/dpca_marginalize.m	/^    YY = YYY;$/;"	v
YY	lib/TrialData/util/dpca/dpca_marginalize.m	/^    YY = ZZ;$/;"	v
Y_bar	lib/coordCorr.m	/^    Y_bar = repmat(mean(Y),size(Y,1),1);$/;"	v
Y_hat	lib/coordCorr.m	/^    Y_hat = getSig(td_test,strcat(model_params.model_type,'_',model_params.model_name));$/;"	v
Ycs	lib/TrialData/util/gpfa/twoStageEngine_td.m	/^            Ycs             = cosmoother_fa(Y, kern(k).estParams);$/;"	v
Ycs	lib/TrialData/util/gpfa/twoStageEngine_td.m	/^            Ycs             = cosmoother_pca(Y, kern(k).estParams);$/;"	v
YtestRaw	lib/TrialData/util/gpfa/twoStageEngine_td.m	/^    YtestRaw  = [seqTest.y];$/;"	v
YtrainRaw	lib/TrialData/util/gpfa/twoStageEngine_td.m	/^    YtrainRaw = [seqTrain.y];$/;"	v
Z	lib/TrialData/util/dpca/dpca.m	/^        Z = W(:,components)'*X;$/;"	v
Z	lib/TrialData/util/dpca/dpca.m	/^        Z = X - V(:,i)*(W(:,i)'*X);$/;"	v
Z	lib/TrialData/util/dpca/dpca_explainedVariance.m	/^Z = W'*X;$/;"	v
Z	lib/TrialData/util/dpca/dpca_plot.m	/^Z = Xcen * W;$/;"	v
ZF	lib/TrialData/util/dpca/dpca_plot.m	/^    ZF = XFcen * W;$/;"	v
ZZ	lib/TrialData/util/dpca/dpca_explainedVariance.m	/^        ZZ = Xmargs{j} - V(:,i)*(W(:,i)'*Xmargs{j});$/;"	v
ZZ	lib/TrialData/util/dpca/dpca_marginalize.m	/^    ZZ = {};$/;"	v
Zfull	lib/TrialData/util/dpca/dpca_plot.m	/^    Zfull = reshape(ZF(:,componentsToPlot)', [length(componentsToPlot) dataDimFull(2:end)]);$/;"	v
Zfull	lib/TrialData/util/dpca/dpca_plot.m	/^Zfull = reshape(Z(:,componentsToPlot)', [length(componentsToPlot) dataDim(2:end)]);$/;"	v
a	lib/TrialData/util/angleDiff.m	/^    a = 180;$/;"	v
a	lib/TrialData/util/angleDiff.m	/^    a = pi;$/;"	v
a	lib/TrialData/util/dpca/dpca_plot.m	/^a = corr(Z(:,1:numCompToShow));$/;"	v
a	lib/circ-toolbox/CircStat/circ_plot.m	/^a = gca;$/;"	v
a	lib/circ-toolbox/CircStat/circ_vmrnd.m	/^a = 1 + sqrt((1+4*kappa.^2));$/;"	v
absref	lib/TrialData/util/makeBasis_PostSpike.m	/^    absref = 0;$/;"	v
absref	lib/TrialData/util/makeBasis_PostSpike.m	/^    absref = ihprs.absref;$/;"	v
actual_signals	lib/TrialData/Tools/getNoiseCovar.m	/^actual_signals  =  {};$/;"	v
actual_signals	lib/TrialData/Tools/getNoiseCovar.m	/^actual_signals = check_signals(trial_data(1),actual_signals);$/;"	v
actual_spikes	lib/TrialData/util/remove_spike_artifacts.m	/^        actual_spikes = actual_spikes(~ismember(actual_spikes,artifacts));$/;"	v
actual_spikes	lib/TrialData/util/remove_spike_artifacts.m	/^        actual_spikes = find(ismember(in_bin,bins_to_keep));$/;"	v
actual_spikes	lib/TrialData/util/remove_spike_artifacts.m	/^        actual_spikes = reshape(actual_spikes,[],1);$/;"	v
actual_spikes	lib/TrialData/util/remove_spike_artifacts.m	/^        actual_spikes = unique([actual_spikes;new_spikes]);$/;"	v
actual_spikes	lib/TrialData/util/remove_spike_artifacts.m	/^actual_spikes = [];$/;"	v
addCoordPoint2TD	lib/TrialData/Tools/addCoordPoint2TD.m	/^function trial_data = addCoordPoint2TD(trial_data,params)$/;"	f
addCorrelatedNoise	lib/TrialData/Tools/addCorrelatedNoise.m	/^function [td] = addCorrelatedNoise(trial_data,params)$/;"	f
addFiringRates	lib/TrialData/Tools/addFiringRates.m	/^function td = addFiringRates(trial_data,params)$/;"	f
addProcessedSignal	lib/TrialData/Tools/addProcessedSignal.m	/^function trial_data = addProcessedSignal(trial_data,params)$/;"	f
add_pred_to_td	lib/TrialData/Analysis/getModel.m	/^add_pred_to_td       =  true;        % whether to add predictions to trial_data$/;"	v
add_proj_to_td	lib/TrialData/Analysis/getPotentSpace.m	/^add_proj_to_td     =  true;   % add projections to trial data$/;"	v
add_proj_to_td	lib/TrialData/Tools/dimReduce.m	/^add_proj_to_td   = true;  % whether to add projections$/;"	v
add_shift	lib/mwDecoders.m	/^    add_shift = true;$/;"	v
add_spike_times	lib/TrialData/DataProcessing/convertDataToTD.m	/^add_spike_times = false; % (not implemented) add unbinned spike times$/;"	v
add_std	lib/TrialData/Tools/trialAverage.m	/^add_std     =  false;$/;"	v
adiff	lib/TrialData/util/angleDiff.m	/^    adiff = abs(adiff);$/;"	v
adiff	lib/TrialData/util/angleDiff.m	/^adiff = angle2 - angle1;$/;"	v
algorithm	lib/TrialData/Analysis/getPotentSpace.m	/^algorithm          =  'pca';$/;"	v
algorithm	lib/TrialData/Tools/dimReduce.m	/^algorithm       = 'pca';$/;"	v
alias	lib/TrialData/Tools/getDifferential.m	/^    alias = cell(size(signals,1),1);$/;"	v
alias	lib/TrialData/Tools/getDifferential.m	/^    alias = {alias};$/;"	v
alias	lib/TrialData/Tools/getDifferential.m	/^alias    = ''; % what to call the differentiated field$/;"	v
alias_idx	lib/TrialData/DataProcessing/parseFileByTrial.m	/^                alias_idx = find(strcmpi(event_alias(:,1),event_list{e}));$/;"	v
allExtraDataPacketIndices	lib/TrialData/util/openNEV_td.m	/^    allExtraDataPacketIndices  = [commentIndices, ...$/;"	v
allMonkeyShifts_model	makePlotsTRT.m	/^        allMonkeyShifts_model = vertcat(monkey_shifts{:,modelnum});$/;"	v
allMonkeyShifts_real	makePlotsTRT.m	/^    allMonkeyShifts_real = vertcat(monkey_shifts{:,end});$/;"	v
all_conds	lib/TrialData/Tools/trialAverage.m	/^    all_conds = combvec(temp{:})';$/;"	v
all_conds	lib/TrialData/Tools/trialAverage.m	/^    all_conds = {'all'};$/;"	v
all_events	lib/TrialData/DataProcessing/parseFileByTrial.m	/^    all_events = trials.(event_list{e});$/;"	v
all_points	lib/TrialData/DataProcessing/parseFileByTrial.m	/^all_points     =  false;$/;"	v
all_spikes	lib/TrialData/Tools/removeBadNeurons.m	/^        all_spikes = cat(1,td.([array '_spikes']));$/;"	v
all_spikes	lib/TrialData/Tools/removeBadNeurons.m	/^        all_spikes = cat(1,trial_data(use_trials).([array '_spikes']));$/;"	v
all_trials	lib/TrialData/Analysis/getDPCA.m	/^            all_trials = intersect(all_trials,varargin{i});$/;"	v
all_trials	lib/TrialData/Analysis/getDPCA.m	/^        all_trials = varargin{1};$/;"	v
alpha	lib/TrialData/Analysis/estimateDimensionality.m	/^alpha         =  0.95; % what fraction of non-noise variance$/;"	v
alpha	lib/TrialData/Tools/softNormalize.m	/^alpha    =  5;$/;"	v
alpha	lib/circ-toolbox/CircStat/circ_ang2rad.m	/^alpha = alpha * pi \/180;/;"	v
alpha	lib/circ-toolbox/CircStat/circ_axial.m	/^alpha = mod(alpha*p,2*pi);$/;"	v
alpha	lib/circ-toolbox/CircStat/circ_clust.m	/^    alpha = 2*pi*rand(n,1)-pi;$/;"	v
alpha	lib/circ-toolbox/CircStat/circ_cmtest.m	/^  alpha = [alpha1; alpha2];$/;"	v
alpha	lib/circ-toolbox/CircStat/circ_cmtest.m	/^  alpha = varargin{1}(:);$/;"	v
alpha	lib/circ-toolbox/CircStat/circ_corrcl.m	/^	alpha = alpha';$/;"	v
alpha	lib/circ-toolbox/CircStat/circ_hktest.m	/^alpha = alpha(:); idp = idp(:); idq = idq(:);$/;"	v
alpha	lib/circ-toolbox/CircStat/circ_kappa.m	/^alpha = alpha(:);$/;"	v
alpha	lib/circ-toolbox/CircStat/circ_kuipertest.m	/^alpha = [.10, .05, .02, .01, .005, .002, .001];$/;"	v
alpha	lib/circ-toolbox/CircStat/circ_medtest.m	/^	alpha = alpha';$/;"	v
alpha	lib/circ-toolbox/CircStat/circ_moment.m	/^  alpha = circ_dist(alpha,repmat(theta,v));$/;"	v
alpha	lib/circ-toolbox/CircStat/circ_mtest.m	/^	alpha = alpha';$/;"	v
alpha	lib/circ-toolbox/CircStat/circ_otest.m	/^	alpha = alpha';$/;"	v
alpha	lib/circ-toolbox/CircStat/circ_otest.m	/^alpha = mod(alpha,2*pi);$/;"	v
alpha	lib/circ-toolbox/CircStat/circ_rad2ang.m	/^alpha = alpha \/ pi *180;/;"	v
alpha	lib/circ-toolbox/CircStat/circ_raotest.m	/^alpha = [0.001, .01, .05, .10];$/;"	v
alpha	lib/circ-toolbox/CircStat/circ_raotest.m	/^alpha = alpha(:);$/;"	v
alpha	lib/circ-toolbox/CircStat/circ_raotest.m	/^alpha = circ_rad2ang(alpha);$/;"	v
alpha	lib/circ-toolbox/CircStat/circ_raotest.m	/^alpha = sort(alpha);$/;"	v
alpha	lib/circ-toolbox/CircStat/circ_rtest.m	/^	alpha = alpha';$/;"	v
alpha	lib/circ-toolbox/CircStat/circ_stats.m	/^alpha = alpha(:);$/;"	v
alpha	lib/circ-toolbox/CircStat/circ_symtest.m	/^	alpha = alpha';$/;"	v
alpha	lib/circ-toolbox/CircStat/circ_vmpar.m	/^alpha = alpha(:);$/;"	v
alpha	lib/circ-toolbox/CircStat/circ_vmpdf.m	/^    alpha = alpha(1:end-1);$/;"	v
alpha	lib/circ-toolbox/CircStat/circ_vmpdf.m	/^    alpha = linspace(0, 2*pi, 101)';$/;"	v
alpha	lib/circ-toolbox/CircStat/circ_vmpdf.m	/^alpha = alpha(:);$/;"	v
alpha	lib/circ-toolbox/CircStat/circ_vmrnd.m	/^    alpha = 2*pi*rand(n,1);$/;"	v
alpha	lib/circ-toolbox/CircStat/circ_vmrnd.m	/^  alpha = reshape(alpha,m(1),m(2));$/;"	v
alpha	lib/circ-toolbox/CircStat/circ_vmrnd.m	/^alpha = zeros(n,1);$/;"	v
alpha	lib/circ-toolbox/CircStat/circ_vtest.m	/^	alpha = alpha';$/;"	v
alpha	lib/circ-toolbox/CircStat/circ_wwtest.m	/^    alpha = [alpha1; alpha2];$/;"	v
alpha	lib/circ-toolbox/CircStat/circ_wwtest.m	/^    alpha = varargin{1}(:);$/;"	v
alpha	lib/circ-toolbox/CircStat/examples/example2.m	/^    alpha = [ori ori];$/;"	v
alpha	lib/circ-toolbox/CircStat/examples/example2.m	/^alpha = [ori ori ori];$/;"	v
alpha	lib/plotEncoderPR2.m	/^    alpha = 0.05;$/;"	v
alpha	lib/stattestPDShiftErr.m	/^alpha = 0.05\/bonferroni_factor;$/;"	v
alpha1	lib/circ-toolbox/CircStat/circ_cmtest.m	/^  alpha1 = varargin{1}(:);$/;"	v
alpha1	lib/circ-toolbox/CircStat/circ_corrcc.m	/^	alpha1 = alpha1';$/;"	v
alpha1	lib/circ-toolbox/CircStat/circ_ktest.m	/^alpha1 = alpha1(:);$/;"	v
alpha1	lib/circ-toolbox/CircStat/circ_wwtest.m	/^    alpha1 = varargin{1}(:);$/;"	v
alpha1_bar	lib/circ-toolbox/CircStat/circ_corrcc.m	/^alpha1_bar = circ_mean(alpha1);$/;"	v
alpha2	lib/circ-toolbox/CircStat/circ_cmtest.m	/^  alpha2 = varargin{2}(:);$/;"	v
alpha2	lib/circ-toolbox/CircStat/circ_corrcc.m	/^	alpha2 = alpha2';$/;"	v
alpha2	lib/circ-toolbox/CircStat/circ_ktest.m	/^alpha2 = alpha2(:);$/;"	v
alpha2	lib/circ-toolbox/CircStat/circ_wwtest.m	/^    alpha2 = varargin{2}(:);$/;"	v
alpha2_bar	lib/circ-toolbox/CircStat/circ_corrcc.m	/^alpha2_bar = circ_mean(alpha2);$/;"	v
alpha_bar	lib/circ-toolbox/CircStat/examples/example1.m	/^alpha_bar = circ_mean(alpha_rad);$/;"	v
alpha_cutoff	lib/NeuronTable/getTDClassicalPDs.m	/^alpha_cutoff = 0.05;$/;"	v
alpha_deg	lib/circ-toolbox/CircStat/examples/example1.m	/^alpha_deg = [13 15 21 26 28 30 35 36 41 60 92 103 165 199 210 ...$/;"	v
alpha_hat	lib/circ-toolbox/CircStat/examples/example1.m	/^alpha_hat = circ_median(alpha_rad);$/;"	v
alpha_null	lib/get_alpha_potent.m	/^    alpha_null = null( pinv(J_dl')-pinv(J_pm') );$/;"	v
alpha_potent	lib/get_alpha_potent.m	/^    alpha_potent = orth( pinv(J_dl')'-pinv(J_pm')' );$/;"	v
alpha_rad	lib/circ-toolbox/CircStat/examples/example1.m	/^alpha_rad = circ_ang2rad(alpha_deg);       % convert to radians$/;"	v
alphalow	lib/plotEncoderPR2.m	/^    alphalow = alpha\/2;$/;"	v
alphaup	lib/plotEncoderPR2.m	/^    alphaup = 1-alpha\/2;$/;"	v
alreadyProcessed	lib/TrialData/util/dpca/dpca_marginalize.m	/^alreadyProcessed = containers.Map;$/;"	v
analyzeFold	lib/analyzeTRT.m	/^function [foldEval,foldTuning] = analyzeFold(td_train,td_test,params)$/;"	f
analyzeTRT	lib/analyzeTRT.m	/^function [crossEval, crossTuning] = analyzeTRT(trial_data,params)$/;"	f
angleDiff	lib/TrialData/util/angleDiff.m	/^function adiff = angleDiff(angle1,angle2,useRad,preserveSign)$/;"	f
angsDL	lib/NeuronTable/irisPlot.m	/^angsDL = DL_pdData.velPD;$/;"	v
angsDL	lib/dnaPlot.m	/^angsDL = DL_pdData.velPD;$/;"	v
angsPM	lib/NeuronTable/irisPlot.m	/^angsPM = PM_pdData.velPD;$/;"	v
angsPM	lib/dnaPlot.m	/^angsPM = PM_pdData.velPD;$/;"	v
appendTDs	lib/TrialData/Tools/appendTDs.m	/^function combined = appendTDs(varargin)$/;"	f
args	lib/circ-toolbox/CircStat/examples/formatSubplot.m	/^args = parseVarArgs(args,varargin{:});$/;"	v
arr_append	lib/NeuronTable/makeNeuronTableStarter.m	/^        arr_append = repmat(metafield,tab_height,1);$/;"	v
array	lib/TrialData/Analysis/getNeuronTuning.m	/^array      =  params.array;$/;"	v
array	lib/TrialData/Tools/addFiringRates.m	/^array = '';$/;"	v
array	lib/TrialData/Tools/getCommonUnits.m	/^    array = arrays{idx_array};$/;"	v
array	lib/TrialData/Tools/removeBadNeurons.m	/^    array = arrays{a};$/;"	v
array_alias	lib/TrialData/DataProcessing/parseFileByTrial.m	/^array_alias    =  {};$/;"	v
arrayname	calculateEncoders.m	/^arrayname = 'S1';$/;"	v
arrayname	lib/mwEncoders.m	/^    arrayname = 'S1';$/;"	v
arrays	lib/TrialData/DataProcessing/parseFileByTrial.m	/^    arrays = strsplit(cds.meta.array,', ');$/;"	v
arrays	lib/TrialData/Plotting/visData.m	/^arrays = fn(cellfun(@(x) ~isempty(regexp(x,'_spikes','ONCE')),fn));$/;"	v
arrays	lib/TrialData/Tools/getCommonUnits.m	/^arrays = getTDfields(trial_data,'arrays');$/;"	v
arrays	lib/TrialData/Tools/getTDfields.m	/^        arrays = getTDfields(trial_data,'arrays');$/;"	v
arrays	lib/TrialData/Tools/removeBadNeurons.m	/^    arrays = getTDfields(trial_data,'spikes');$/;"	v
arrays	lib/TrialData/Tools/removeBadNeurons.m	/^arrays          =  [];$/;"	v
arrays	lib/TrialData/subspace_demo.m	/^arrays = strrep(spiking_inputs,'_spikes','');$/;"	v
artifacts	lib/TrialData/util/remove_spike_artifacts.m	/^        artifacts = unique([artifacts; find(ismember(in_bin,bins_to_reject))]);$/;"	v
artifacts	lib/TrialData/util/remove_spike_artifacts.m	/^artifacts = [];$/;"	v
assignParams	lib/TrialData/util/assignParams.m	/^function assignParams(opts,params)$/;"	f
aux_smoothed_FR	lib/TrialData/util/smooth_data.m	/^    aux_smoothed_FR     = conv(kernel',data(:,i)) .\/ nm;$/;"	v
av_pR2_x	lib/plotEncoderPR2.m	/^    av_pR2_x = avgEval.(sprintf('glm_%s_model_eval',x_model));$/;"	v
av_pR2_y	lib/plotEncoderPR2.m	/^    av_pR2_y = avgEval.(sprintf('glm_%s_model_eval',y_model));$/;"	v
avgEval	lib/plotEncoderPR2.m	/^    avgEval = neuronAverage(encoderResults.crossEval,contains(encoderResults.crossEval.Propertie/;"	v
avgEval	makePlotsTRT.m	/^        avgEval = neuronAverage(encoderResults.crossEval,contains(encoderResults.crossEval.Prope/;"	v
avgTable	lib/NeuronTable/neuronAverage.m	/^avgTable = horzcat(keyTable,vertcat(tab_append{:}));$/;"	v
avgTable	lib/getCurvesFromCrossval.m	/^avgTable = neuronAverage(crossvalTable,key_cols);$/;"	v
avg_data	lib/TrialData/Tools/trialAverage.m	/^avg_data = reorderTDfields(avg_data);$/;"	v
avg_data	lib/TrialData/Tools/trialAverage.m	/^avg_data = repmat(struct(),1,num_conds);$/;"	v
avg_flag	lib/TrialData/Tools/trialAverage.m	/^avg_flag = true; % will add a flag field saying it's trial-averaged$/;"	v
avg_pR2	makePlotsTRT.m	/^        avg_pR2 = zeros(height(avgEval),length(models_to_plot));$/;"	v
axBar	lib/TrialData/util/dpca/dpca_plot.m	/^    axBar = subplot(4,4,9);$/;"	v
axColormap	lib/TrialData/util/dpca/dpca_plot.m	/^axColormap = subplot(4,4,13);$/;"	v
axCum	lib/TrialData/util/dpca/dpca_plot.m	/^    axCum = subplot(4,4,5);$/;"	v
ax_pos	lib/plotMWTuningSurfaces.m	/^    ax_pos = zeros(1,num_models);$/;"	v
ax_vel	lib/plotMWTuningSurfaces.m	/^    ax_vel = zeros(1,num_models);$/;"	v
b	lib/TrialData/Analysis/getModel.m	/^            b = net;$/;"	v
b	lib/TrialData/Analysis/getModel.m	/^    b = zeros(size(x,2)+1,size(y,2));$/;"	v
b	lib/TrialData/Analysis/getModel.m	/^b                    =  [];          % b and s identify if model_info was$/;"	v
b	lib/TrialData/Analysis/getPotentSpace.m	/^    b = zeros(size(x,2),size(y,2));$/;"	v
b	lib/TrialData/util/dpca/dpca_plot.m	/^    b = bar(options.explainedVar.margVar(:,1:numCompToShow)' , 'stacked', 'BarWidth', 0.75);$/;"	v
b	lib/TrialData/util/dpca/dpca_plot.m	/^b = V(:,1:numCompToShow)'*V(:,1:numCompToShow);$/;"	v
b	lib/TrialData/util/dpca/dpca_plot.m	/^b = [103 0 31]\/256;      %# start$/;"	v
b	lib/TrialData/util/makeBasis_PostSpike.m	/^b = ihprs.b;$/;"	v
b	lib/circ-toolbox/CircStat/circ_skewness.m	/^b = sum(w.*(sin(2*(circ_dist(alpha,theta2)))),dim).\/sum(w,dim);$/;"	v
b	lib/circ-toolbox/CircStat/circ_vmrnd.m	/^b = (a - sqrt(2*a))\/(2*kappa);$/;"	v
b0	lib/circ-toolbox/CircStat/circ_skewness.m	/^b0 = rho2.*sin(circ_dist(mu2,2*theta)).\/(1-R).^(3\/2);    % (formula 2.29)$/;"	v
b_alpha	lib/circ-toolbox/CircStat/examples/example1.m	/^b_alpha = circ_skewness(alpha_rad);$/;"	v
b_beta	lib/circ-toolbox/CircStat/examples/example1.m	/^b_beta = circ_skewness(beta_rad);$/;"	v
b_pc	lib/TrialData/Analysis/getPotentSpace.m	/^        b_pc = x\\y(:,i);$/;"	v
badUnits	lib/TrialData/util/checkUnitGuides.m	/^        badUnits = [badUnits; setxor(temp1,temp2,'rows')];$/;"	v
badUnits	lib/TrialData/util/checkUnitGuides.m	/^badUnits = [];$/;"	v
badUnits	lib/TrialData/util/checkUnitGuides.m	/^badUnits = unique(badUnits,'rows');$/;"	v
bad_idx	lib/TrialData/Tools/getCommonUnits.m	/^        bad_idx = checkUnitGuides(master_sg,trial_data(i).([array '_unit_guide']));$/;"	v
bad_idx	lib/TrialData/Tools/getTDfields.m	/^            bad_idx = bad_idx | ismember(fn,fn_idx) | ismember(fn,fn_ug) | ismember(fn,meta_vars/;"	v
bad_idx	lib/TrialData/Tools/removeBadTrials.m	/^bad_idx = false(1,length(trial_data));$/;"	v
bad_trials	lib/TrialData/Tools/getRWMovements.m	/^    bad_trials = cellfun(@(x) ~any(isnan(x)),{trial_data.(go_cue_name)});$/;"	v
bad_trials	lib/TrialData/Tools/removeBadTrials.m	/^bad_trials = trial_data(bad_idx);$/;"	v
bad_units	lib/TrialData/Tools/removeBadNeurons.m	/^        bad_units = [];$/;"	v
bad_units	lib/TrialData/Tools/removeBadNeurons.m	/^        bad_units = bad_units | mean(all_spikes.\/bin_size,1) < min_fr;$/;"	v
bad_units	lib/TrialData/Tools/removeBadNeurons.m	/^        bad_units = find(bad_units);$/;"	v
bad_units	lib/TrialData/Tools/removeBadNeurons.m	/^    bad_units = zeros(1,size(all_spikes,2));$/;"	v
barfig	makePlotsTRT.m	/^    barfig = figure('defaultaxesfontsize',18);$/;"	v
barwidth	makePlotsTRT.m	/^    barwidth = 0.4;$/;"	v
baseline_cols	lib/NeuronTable/getPDsFromWeights.m	/^baseline_cols = contains(weightTable.Properties.VariableNames,'baseline');$/;"	v
baseline_cols_idx	lib/NeuronTable/getPDsFromWeights.m	/^baseline_cols_idx = find(baseline_cols);$/;"	v
beta	lib/TrialData/util/gpfa/fastfa.m	/^    beta = L' * MM; % zDim x xDim$/;"	v
beta	lib/circ-toolbox/CircStat/circ_hktest.m	/^    beta = 1;$/;"	v
beta	lib/circ-toolbox/CircStat/circ_hktest.m	/^    beta = 1\/(1-1\/(5*kk)-1\/(10*(kk^2)));    $/;"	v
beta	lib/circ-toolbox/CircStat/circ_median.m	/^    beta = alpha(:,i);$/;"	v
beta	lib/circ-toolbox/CircStat/circ_median.m	/^    beta = alpha(i,:)';$/;"	v
beta	lib/circ-toolbox/CircStat/circ_median.m	/^  beta = mod(beta,2*pi);$/;"	v
beta	lib/circ-toolbox/CircStat/circ_wwtest.m	/^beta = 1+3\/(8*kk);    % correction factor$/;"	v
beta_bar	lib/circ-toolbox/CircStat/examples/example1.m	/^beta_bar = circ_mean(beta_rad);$/;"	v
beta_deg	lib/circ-toolbox/CircStat/examples/example1.m	/^beta_deg = [1 13 41 56 67 71 81 85 99 110 119 131 145 177 199 220 ...$/;"	v
beta_hat	lib/circ-toolbox/CircStat/examples/example1.m	/^beta_hat = circ_median(beta_rad);$/;"	v
beta_rad	lib/circ-toolbox/CircStat/examples/example1.m	/^beta_rad = circ_ang2rad(beta_deg);         % convert to radians$/;"	v
binTD	lib/TrialData/Tools/binTD.m	/^function trial_data = binTD(trial_data,num_bins)$/;"	f
binWidth	lib/TrialData/util/gpfa/gpfaEngine_td.m	/^binWidth      = 20; % in msec$/;"	v
binWidth	lib/TrialData/util/gpfa/neuralTraj_td.m	/^binWidth      = 20; % in msec$/;"	v
binWidth	lib/TrialData/util/gpfa/twoStageEngine_td.m	/^binWidth      = 20; % in msec$/;"	v
bin_angles	lib/TrialData/util/bin_angles.m	/^function theta = bin_angles(theta,angle_bin_size)$/;"	f
bin_cols	lib/getCurvesFromCrossval.m	/^bin_cols = endsWith(avgTable.Properties.VariableNames,'bins');$/;"	v
bin_events	lib/TrialData/DataProcessing/convertDataToTD.m	/^function binned_events = bin_events(data,t_bin)$/;"	f
bin_events	lib/TrialData/DataProcessing/parseFileByTrial.m	/^function out = bin_events(trials,event_list,t_bin)$/;"	f
bin_size	lib/TrialData/Analysis/getNeuronTuning.m	/^bin_size = trial_data(1).bin_size;$/;"	v
bin_size	lib/TrialData/DataProcessing/convertDataToTD.m	/^bin_size        =  0.01;$/;"	v
bin_size	lib/TrialData/DataProcessing/convertDataToTD.m	/^bin_size       =  0.01;    % start at 10ms bins by default$/;"	v
bin_size	lib/TrialData/DataProcessing/parseFileByTrial.m	/^    bin_size = .01;$/;"	v
bin_size	lib/TrialData/DataProcessing/parseFileByTrial.m	/^    bin_size = round(1000*mode(diff(cds.kin.t)))\/1000;$/;"	v
bin_size	lib/TrialData/Tools/addFiringRates.m	/^            bin_size = trial_data(trial_idx).bin_size;$/;"	v
bin_size	lib/TrialData/Tools/convBasisFunc.m	/^bin_size = trial_data(1).bin_size;$/;"	v
bin_size	lib/TrialData/Tools/removeBadNeurons.m	/^bin_size        =  trial_data(1).bin_size;$/;"	v
bin_size	lib/TrialData/Tools/smoothSignals.m	/^bin_size = trial_data(1).bin_size;$/;"	v
bin_spacing	lib/NeuronTable/getTuningCurves.m	/^bin_spacing = mean(unique(diff(bins)));$/;"	v
bin_spikes	lib/TrialData/DataProcessing/convertDataToTD.m	/^function binned_spikes = bin_spikes(units,unit_idx,t_bin)$/;"	f
bin_spikes	lib/TrialData/DataProcessing/parseFileByTrial.m	/^function [binned_spikes,sg] = bin_spikes(units,unit_idx,t_bin)$/;"	f
bin_w	lib/TrialData/Analysis/runGPFA.m	/^bin_w       =  0.02;$/;"	v
binned_emg	lib/TrialData/DataProcessing/convertDataToTD.m	/^binned_emg = zeros(ceil(size(data,1)\/round(bin_size*samprate)),size(data,2));$/;"	v
binned_events	lib/TrialData/DataProcessing/convertDataToTD.m	/^        binned_events = binned_events';$/;"	v
binned_events	lib/TrialData/DataProcessing/convertDataToTD.m	/^binned_events = zeros(length(data),length(t_bin));$/;"	v
binned_spikes	lib/TrialData/DataProcessing/convertDataToTD.m	/^binned_spikes = binned_spikes';$/;"	v
binned_spikes	lib/TrialData/DataProcessing/convertDataToTD.m	/^binned_spikes = zeros(size(unit_idx,1),length(t_bin));$/;"	v
binned_spikes	lib/TrialData/DataProcessing/parseFileByTrial.m	/^            binned_spikes = cds_bin.([arrays{array} '_spikes']);$/;"	v
binned_spikes	lib/TrialData/DataProcessing/parseFileByTrial.m	/^binned_spikes = binned_spikes';$/;"	v
binned_spikes	lib/TrialData/DataProcessing/parseFileByTrial.m	/^binned_spikes = zeros(size(unit_idx,1),length(t_bin));$/;"	v
bins	lib/NeuronTable/getTuningCurves.m	/^bins = bins(2:end);$/;"	v
bins	lib/NeuronTable/getTuningCurves.m	/^bins = linspace(-pi,pi,num_bins+1);$/;"	v
bins	lib/NeuronTable/plotFlatTuning.m	/^    bins = curve.bins;$/;"	v
bins	lib/NeuronTable/plotTuning.m	/^    bins = curve.bins;$/;"	v
bins	lib/TrialData/util/remove_spike_artifacts.m	/^        bins = i + (0:rejection_samples:last_timestamp+rejection_samples);$/;"	v
bins_to_combine	lib/TrialData/BBDemoScript.m	/^bins_to_combine = 5;$/;"	v
bins_to_keep	lib/TrialData/util/remove_spike_artifacts.m	/^        bins_to_keep = find(spike_count_in_bin<rejection_num_chans);$/;"	v
bins_to_reject	lib/TrialData/util/remove_spike_artifacts.m	/^        bins_to_reject = find(spike_count_in_bin>=rejection_num_chans);$/;"	v
binvec	makePlotsTRT.m	/^        binvec = (1:size(true_pos,1)) + last_trial_end;$/;"	v
bl_idx	lib/TrialData/Analysis/getLearningMetrics.m	/^                    bl_idx = getTDidx(trial_data,'epoch','bl','target_direction',utheta(iDir));$/;"	v
bl_idx	lib/TrialData/Analysis/getLearningMetrics.m	/^                bl_idx = getTDidx(trial_data,'epoch','bl','target_direction',utheta(iDir));$/;"	v
bl_idx	lib/TrialData/Analysis/getLearningMetrics.m	/^            bl_idx = getTDidx(trial_data,'epoch','bl','target_direction',utheta(iDir));$/;"	v
bl_metric	lib/TrialData/Analysis/getLearningMetrics.m	/^                bl_metric = lm_bl.predict(usincos);$/;"	v
bl_metric	lib/TrialData/Analysis/getLearningMetrics.m	/^        bl_metric = zeros(length(utheta),1);$/;"	v
bl_metric	lib/TrialData/Analysis/getLearningMetrics.m	/^        bl_metric = zeros(length(utheta),corr_samples,2);$/;"	v
bl_temp	lib/TrialData/Analysis/getLearningMetrics.m	/^            bl_temp = zeros(length(bl_idx),2,corr_samples);$/;"	v
block_trials	lib/TrialData/Analysis/evalModel.m	/^block_trials     =  false;$/;"	v
bonferroni_factor	lib/stattestPDShiftErr.m	/^bonferroni_factor = size(modelcompare,1);$/;"	v
bootForTuning	lib/NeuronTable/getTDClassicalPDs.m	/^bootForTuning = true;$/;"	v
bootForTuning	lib/NeuronTable/getTDPDs.m	/^    bootForTuning = false;$/;"	v
bootForTuning	lib/NeuronTable/getTDPDs.m	/^bootForTuning = true;$/;"	v
bootPD	lib/NeuronTable/getTDClassicalPDs.m	/^        bootPD = zeros(num_boots,1);$/;"	v
boot_coef	lib/NeuronTable/getTDPDs.m	/^        boot_coef = bootfunc(data_arr);$/;"	v
boot_coef	lib/NeuronTable/getTDPDs.m	/^        boot_coef = bootstrp(num_boots,@(data) bootfunc(data),data_arr);$/;"	v
boot_mean	lib/NeuronTable/getTDClassicalPDs.m	/^            boot_mean = circ_mean(bootPD);$/;"	v
boot_r	lib/NeuronTable/getTDClassicalPDs.m	/^        boot_r = zeros(num_boots,1);$/;"	v
bootfunc	lib/NeuronTable/getTDPDs.m	/^bootfunc = @(data) transpose(glmfit(data(:,2:end),data(:,1),distribution));$/;"	v
bottom	lib/TrialData/util/dpca/dpca_plot.m	/^bottom = pos(2);$/;"	v
bounds	lib/NeuronTable/getNTidx.m	/^        bounds = fliplr(bounds);$/;"	v
bounds	lib/NeuronTable/getNTidx.m	/^    bounds = fv{idx};$/;"	v
bounds	lib/TrialData/Tools/getTDidx.m	/^            bounds = fliplr(bounds);$/;"	v
bounds	lib/TrialData/Tools/getTDidx.m	/^    bounds = fv{idx};$/;"	v
brighten	lib/matlab-linspecer/linspecer.m	/^function varIn = brighten(varIn,varargin) % increase the brightness$/;"	f
bs	lib/TrialData/Analysis/evalModel.m	/^    bs = 1:length(y_test);$/;"	v
bs	lib/TrialData/Analysis/evalModel.m	/^    bs = randi(length(y_test),length(y_test),num_bootstraps);$/;"	v
c	lib/TrialData/Analysis/pairwiseCorr.m	/^c = cluster(linkage(pdist(rho),'average'),'cutoff',1);$/;"	v
c	lib/TrialData/util/openNEV_td.m	/^                c = num2cell(DataBegTimestamp); [NEV.Data.SerialDigitalIO(1:length(NEV.Data.Seri/;"	v
c	lib/TrialData/util/openNEV_td.m	/^                c = num2cell(DataBegTimestamp\/NEV.MetaTags.SampleRes); [NEV.Data.SerialDigitalI/;"	v
c	lib/TrialData/util/openNEV_td.m	/^                c = {Inputs{NEV.Data.SerialDigitalIO.InsertionReason(AsteriskIndices)}}; [NEV.Da/;"	v
c	lib/circ-toolbox/CircStat/circ_r.m	/^  c = d\/2\/sin(d\/2);$/;"	v
c	lib/circ-toolbox/CircStat/circ_vmrnd.m	/^      c = kappa*(r-f);$/;"	v
c1	lib/TrialData/util/dpca/dpca_plot.m	/^c1 = zeros(128,3);$/;"	v
c2	lib/TrialData/util/dpca/dpca_plot.m	/^c2 = zeros(128,3);$/;"	v
c2	lib/circ-toolbox/CircStat/circ_confmean.m	/^c2 = chi2inv((1-xi),1);$/;"	v
cX	lib/TrialData/util/gpfa/fastfa.m	/^  cX    = cov(X', 1);$/;"	v
cX_beta	lib/TrialData/util/gpfa/fastfa.m	/^    cX_beta = cX * beta'; % xDim x zDim$/;"	v
calc_CIs	lib/NeuronTable/getTuningCurves.m	/^calc_CIs = true;$/;"	v
calc_rate	lib/TrialData/Tools/smoothSignals.m	/^calc_rate       =  false;$/;"	v
calculateEncoderPDShiftErr	lib/calculateEncoderPDShiftErr.m	/^function err = calculateEncoderPDShiftErr(encoderResults,params)$/;"	f
calculatePDShiftTables	lib/calculatePDShiftTables.m	/^function shift_tables = calculatePDShiftTables(encoderResults,model_names)$/;"	f
cart2pol_wrap	lib/TrialData/Tools/addCoordPoint2TD.m	/^function cyl = cart2pol_wrap(cart)$/;"	f
cart2sph_wrap	lib/TrialData/Tools/addCoordPoint2TD.m	/^function sph = cart2sph_wrap(cart)$/;"	f
cart_names	lib/TrialData/Tools/addCoordPoint2TD.m	/^    cart_names = repmat({'opensim'},length(coord_postfix),1);$/;"	v
cart_names	lib/TrialData/Tools/addCoordPoint2TD.m	/^    cart_names = {'markers','marker_vel','marker_acc'};$/;"	v
cart_postfix	lib/TrialData/Tools/addCoordPoint2TD.m	/^    cart_postfix = strcat('_', point, {'Pos','Vel','Acc'});$/;"	v
cart_prefix	lib/TrialData/Tools/addCoordPoint2TD.m	/^    cart_prefix = {'X','Y','Z'};$/;"	v
catTDs	lib/TrialData/Tools/catTDs.m	/^function master_td = catTDs(varargin)$/;"	f
cb	lib/TrialData/util/dpca/dpca_plot.m	/^cb = colorbar('location', 'southoutside');$/;"	v
cbar	lib/circ-toolbox/CircStat/circ_moment.m	/^cbar = sum(cos(p*alpha).*w,dim)\/n;$/;"	v
cc	lib/TrialData/util/dpca/dpca_plot.m	/^    cc = componentsToPlot(c);$/;"	v
cdf	lib/circ-toolbox/CircStat/circ_samplecdf.m	/^cdf = zeros(1, length(phis));$/;"	v
cdf2	lib/circ-toolbox/CircStat/circ_samplecdf.m	/^cdf2 = [0 cdf(1:end-1)];$/;"	v
cdfplot	lib/circ-toolbox/CircStat/circ_samplecdf.m	/^cdfplot = [cdfplottable 1];$/;"	v
cdfplottable	lib/circ-toolbox/CircStat/circ_samplecdf.m	/^   cdfplottable = [cdfplottable cdf2(j) cdf(j)]; %#ok<AGROW>$/;"	v
cdfplottable	lib/circ-toolbox/CircStat/circ_samplecdf.m	/^cdfplottable = [];$/;"	v
cds_bin	lib/TrialData/DataProcessing/parseFileByTrial.m	/^cds_bin = struct();$/;"	v
cell_idx	lib/TrialData/Analysis/getDPCA.m	/^        cell_idx = find(cellfun(@iscell,varargin),1,'first');$/;"	v
cent	lib/circ-toolbox/CircStat/circ_moment.m	/^  cent = false;$/;"	v
centered_boot	lib/NeuronTable/getTDClassicalPDs.m	/^            centered_boot = minusPi2Pi(bootPD-boot_mean);$/;"	v
centered_clust	lib/NeuronTable/comparePDClouds.m	/^    centered_clust = centered_clust(inliers,:);$/;"	v
centered_clust	lib/NeuronTable/comparePDClouds.m	/^    centered_clust = minusPi2Pi(clust-repmat(means,size(clust,1),1));$/;"	v
centered_clust	lib/NeuronTable/getTuningHull.m	/^        centered_clust = centered_clust(inliers,:);$/;"	v
centered_clust	lib/NeuronTable/getTuningHull.m	/^        centered_clust = clust-repmat(means,size(clust,1),1);$/;"	v
centered_clust	lib/NeuronTable/plotWeightClouds.m	/^    centered_clust = centered_clust(inliers,:);$/;"	v
centered_clust	lib/NeuronTable/plotWeightClouds.m	/^    centered_clust = clust-repmat(means,size(clust,1),1);$/;"	v
chanNames	lib/TrialData/DataProcessing/parseFileByTrial.m	/^            chanNames = cds.units(~cellfun(@isempty,([strfind({cds.units.array},arrays{array})])/;"	v
chan_idx	lib/TrialData/DataProcessing/processNEV.m	/^            chan_idx = NEV.Data.Spikes.Electrode == spiking_chans(iElec);$/;"	v
channelIDToDelete	lib/TrialData/util/openNSx_td.m	/^channelIDToDelete = setdiff(1:ChannelCount, userRequestedChanRow);$/;"	v
channelThatWereRead	lib/TrialData/util/openNSx_td.m	/^channelThatWereRead = min(userRequestedChanRow):max(userRequestedChanRow);$/;"	v
checkAssumption	lib/circ-toolbox/CircStat/circ_wwtest.m	/^function checkAssumption(rw,n)$/;"	f
checkUnitGuides	lib/TrialData/util/checkUnitGuides.m	/^function [badUnits, varargout] = checkUnitGuides(varargin)$/;"	f
check_signals	lib/TrialData/util/subfcn/check_signals.m	/^function signals = check_signals(trial_data,signals)$/;"	f
chi1	lib/circ-toolbox/CircStat/circ_hktest.m	/^  chi1 = f * (sum(pr.^2.\/pn)- tr.^2\/n);$/;"	v
chi2	lib/circ-toolbox/CircStat/circ_hktest.m	/^  chi2 = f * (sum(qr.^2.\/qn)- tr.^2\/n);$/;"	v
chiI	lib/circ-toolbox/CircStat/circ_hktest.m	/^  chiI = f * (sum(sum(cr.^2 .\/ cn)) - sum(pr.^2.\/pn) ...$/;"	v
ci	lib/circ-toolbox/CircStat/circ_clust.m	/^   ci = (c == csmall(j));$/;"	v
ciHiArr	lib/NeuronTable/neuronAverage.m	/^    ciHiArr = prctile(dataTable{:,lin_cols},97.5,1);$/;"	v
ciHiTable	lib/NeuronTable/neuronAverage.m	/^    ciHiTable = meanTable_lin;$/;"	v
ciHi_cols	lib/getCurvesFromCrossval.m	/^ciHi_cols = endsWith(avgTable.Properties.VariableNames,'CurveCIHi');$/;"	v
ciLoArr	lib/NeuronTable/neuronAverage.m	/^    ciLoArr = prctile(dataTable{:,lin_cols},2.5,1);$/;"	v
ciLoTable	lib/NeuronTable/neuronAverage.m	/^    ciLoTable = meanTable_lin;$/;"	v
ciLo_cols	lib/getCurvesFromCrossval.m	/^ciLo_cols = endsWith(avgTable.Properties.VariableNames,'CurveCILo');$/;"	v
cid	lib/circ-toolbox/CircStat/circ_clust.m	/^cid = (1:n)';$/;"	v
cid2	lib/circ-toolbox/CircStat/circ_clust.m	/^cid2 = cid;$/;"	v
cidx	lib/circ-toolbox/CircStat/circ_raotest.m	/^cidx = find(table(ridx,2:end)<U,1);$/;"	v
circ_ang2rad	lib/circ-toolbox/CircStat/circ_ang2rad.m	/^function alpha = circ_ang2rad(alpha)$/;"	f
circ_axial	lib/circ-toolbox/CircStat/circ_axial.m	/^function alpha = circ_axial(alpha, p)$/;"	f
circ_axialmean	lib/circ-toolbox/CircStat/circ_axialmean.m	/^function [r mu] = circ_axialmean(alphas, m, dim)$/;"	f
circ_clust	lib/circ-toolbox/CircStat/circ_clust.m	/^function [cid, alpha, mu] = circ_clust(alpha, numclust, disp)$/;"	f
circ_cmtest	lib/circ-toolbox/CircStat/circ_cmtest.m	/^function [pval med P] = circ_cmtest(varargin)$/;"	f
circ_cols	lib/NeuronTable/neuronAverage.m	/^    circ_cols = contains(dataTable.Properties.VariableDescriptions,'circular');$/;"	v
circ_confmean	lib/circ-toolbox/CircStat/circ_confmean.m	/^function t = circ_confmean(alpha, xi, w, d, dim)$/;"	f
circ_corrcc	lib/circ-toolbox/CircStat/circ_corrcc.m	/^function [rho pval] = circ_corrcc(alpha1, alpha2)$/;"	f
circ_corrcl	lib/circ-toolbox/CircStat/circ_corrcl.m	/^function [rho pval] = circ_corrcl(alpha, x)$/;"	f
circ_dist	lib/circ-toolbox/CircStat/circ_dist.m	/^function r =  circ_dist(x,y)$/;"	f
circ_dist2	lib/circ-toolbox/CircStat/circ_dist2.m	/^function r =  circ_dist2(x,y)$/;"	f
circ_hktest	lib/circ-toolbox/CircStat/circ_hktest.m	/^function [pval table] = circ_hktest(alpha, idp, idq, inter, fn)$/;"	f
circ_iqr	lib/circ-toolbox/CircKSDensity/circ_iqr.m	/^function p = circ_iqr(alpha)$/;"	f
circ_kappa	lib/circ-toolbox/CircStat/circ_kappa.m	/^function kappa = circ_kappa(alpha,w)$/;"	f
circ_ksdensity	lib/circ-toolbox/CircKSDensity/circ_ksdensity.m	/^function [pdf, sigma] = circ_ksdensity(T, ti, method, sigma)$/;"	f
circ_ktest	lib/circ-toolbox/CircStat/circ_ktest.m	/^function [pval, f] = circ_ktest(alpha1, alpha2)$/;"	f
circ_kuipertest	lib/circ-toolbox/CircStat/circ_kuipertest.m	/^function [pval, k, K] = circ_kuipertest(alpha1, alpha2, res, vis_on)$/;"	f
circ_kurtosis	lib/circ-toolbox/CircStat/circ_kurtosis.m	/^function [k k0] = circ_kurtosis(alpha, w, dim)$/;"	f
circ_mean	lib/circ-toolbox/CircStat/circ_mean.m	/^function [mu ul ll] = circ_mean(alpha, w, dim)$/;"	f
circ_median	lib/circ-toolbox/CircStat/circ_median.m	/^function med = circ_median(alpha,dim)$/;"	f
circ_medtest	lib/circ-toolbox/CircStat/circ_medtest.m	/^function pval = circ_medtest(alpha,md)$/;"	f
circ_moment	lib/circ-toolbox/CircStat/circ_moment.m	/^function [mp  rho_p mu_p] = circ_moment(alpha, w, p, cent, dim)$/;"	f
circ_mtest	lib/circ-toolbox/CircStat/circ_mtest.m	/^function [h mu ul ll] = circ_mtest(alpha, dir, xi, w, d)$/;"	f
circ_otest	lib/circ-toolbox/CircStat/circ_otest.m	/^function [pval m] = circ_otest(alpha, sz, w)$/;"	f
circ_plot	lib/circ-toolbox/CircStat/circ_plot.m	/^function a = circ_plot(alpha, format, formats, varargin)$/;"	f
circ_r	lib/circ-toolbox/CircStat/circ_r.m	/^function r = circ_r(alpha, w, d, dim)$/;"	f
circ_rad2ang	lib/circ-toolbox/CircStat/circ_rad2ang.m	/^function alpha = circ_rad2ang(alpha)$/;"	f
circ_raotest	lib/circ-toolbox/CircStat/circ_raotest.m	/^function [p U UC] = circ_raotest(alpha)$/;"	f
circ_rtest	lib/circ-toolbox/CircStat/circ_rtest.m	/^function [pval z] = circ_rtest(alpha, w, d)$/;"	f
circ_samplecdf	lib/circ-toolbox/CircStat/circ_samplecdf.m	/^function [phis, cdf, phiplot, cdfplot] = circ_samplecdf(thetas, resolution)$/;"	f
circ_skewness	lib/circ-toolbox/CircStat/circ_skewness.m	/^function [b b0] = circ_skewness(alpha, w, dim)$/;"	f
circ_stats	lib/circ-toolbox/CircStat/circ_stats.m	/^function stats = circ_stats(alpha, w, d)$/;"	f
circ_std	lib/circ-toolbox/CircStat/circ_std.m	/^function [s s0] = circ_std(alpha, w, d, dim)$/;"	f
circ_symtest	lib/circ-toolbox/CircStat/circ_symtest.m	/^function pval = circ_symtest(alpha)$/;"	f
circ_var	lib/circ-toolbox/CircStat/circ_var.m	/^function [S s] = circ_var(alpha, w, d, dim)$/;"	f
circ_vmpar	lib/circ-toolbox/CircStat/circ_vmpar.m	/^function [thetahat kappa] = circ_vmpar(alpha,w,d)$/;"	f
circ_vmpdf	lib/circ-toolbox/CircStat/circ_vmpdf.m	/^function [p alpha] = circ_vmpdf(alpha, thetahat, kappa)$/;"	f
circ_vmrnd	lib/circ-toolbox/CircStat/circ_vmrnd.m	/^function alpha = circ_vmrnd(theta, kappa, n)$/;"	f
circ_vtest	lib/circ-toolbox/CircStat/circ_vtest.m	/^function [pval v] = circ_vtest(alpha, dir, w, d)$/;"	f
circ_wwtest	lib/circ-toolbox/CircStat/circ_wwtest.m	/^function [pval table] = circ_wwtest(varargin)$/;"	f
circular_mean	lib/TrialData/util/circular_mean.m	/^function [mu, ul, ll] = circular_mean(alpha, w, dim)$/;"	f
clims	lib/plotMWTuningSurfaces.m	/^    clims = prctile(fr_total,[5 95]);$/;"	v
cln	lib/TrialData/util/dpca/dpca_plot.m	/^    cln = {c};$/;"	v
clust	lib/NeuronTable/comparePDClouds.m	/^    clust = [pdTable_unit1.([move_corr 'PD']) pdTable_unit2.([move_corr 'PD'])];$/;"	v
clust	lib/NeuronTable/getTuningHull.m	/^        clust = clust(inliers,:);$/;"	v
clust	lib/NeuronTable/getTuningHull.m	/^        clust = tuningTable_unit{:,weight_col};$/;"	v
clust	lib/NeuronTable/plotWeightClouds.m	/^    clust = clust(inliers,:);$/;"	v
clust	lib/NeuronTable/plotWeightClouds.m	/^    clust = tuningTable_unit.([move_corr 'Weight']);$/;"	v
clust_hull	lib/NeuronTable/getTuningHull.m	/^            clust_hull = [min(centered_clust)+means max(centered_clust)+means];$/;"	v
clust_hull	lib/NeuronTable/getTuningHull.m	/^            clust_hull = {centered_clust(hull_idx,:) + repmat(means,length(hull_idx),1)};$/;"	v
cluster_order	lib/TrialData/Analysis/pairwiseCorr.m	/^cluster_order    =  false;$/;"	v
cluster_rho	lib/TrialData/Analysis/pairwiseCorr.m	/^function sort_idx = cluster_rho(rho)$/;"	f
cluster_signals	lib/TrialData/Analysis/pairwiseCorr.m	/^cluster_signals  =  false;$/;"	v
cm_viridis	lib/plotMWTuningSurfaces.m	/^    cm_viridis = viridis(200);$/;"	v
cmap	lib/matlab-linspecer/linspecer.m	/^     cmap =  [0.2005    0.5593    0.7380;$/;"	v
cmap	lib/matlab-linspecer/linspecer.m	/^    cmap =  [0.2005    0.5593    0.7380];$/;"	v
cmap	lib/matlab-linspecer/linspecer.m	/^    cmap = (cmap\/255); % flipud??$/;"	v
cmap	lib/matlab-linspecer/linspecer.m	/^    cmap = zeros(n,3);$/;"	v
cmap	lib/matlab-linspecer/linspecer.m	/^cmap = flipud(cmap\/255);$/;"	v
cmap	lib/matlab-linspecer/linspecer.m	/^cmap = interpomap(n,cmapp);$/;"	v
cmap	lib/matlab-linspecer/linspecer.m	/^cmap = zeros(n,3);$/;"	v
cmap2linspecer	lib/matlab-linspecer/linspecer.m	/^function vOut = cmap2linspecer(vIn) % changes the format from a double array to a cell array wit/;"	f
cmapp	lib/matlab-linspecer/linspecer.m	/^        cmapp = [247,251,255;222,235,247;198,219,239;158,202,225;107,174,214;66,146,198;33,113,1/;"	v
cmapp	lib/matlab-linspecer/linspecer.m	/^        cmapp = [247,252,245;229,245,224;199,233,192;161,217,155;116,196,118;65,171,93;35,139,69/;"	v
cmapp	lib/matlab-linspecer/linspecer.m	/^        cmapp = [255,245,240;254,224,210;252,187,161;252,146,114;251,106,74;239,59,44;203,24,29;/;"	v
cmapp	lib/matlab-linspecer/linspecer.m	/^        cmapp = [255,255,255;240,240,240;217,217,217;189,189,189;150,150,150;115,115,115;82,82,8/;"	v
cmapp	lib/matlab-linspecer/linspecer.m	/^cmapp = [158, 1, 66; 213, 62, 79; 244, 109, 67; 253, 174, 97; 254, 224, 139; 255*frac, 255*frac,/;"	v
cn	lib/circ-toolbox/CircStat/circ_hktest.m	/^cn = zeros(p,q); cr = cn;$/;"	v
cnt	lib/TrialData/util/openNEV_td.m	/^                cnt = size(NEV.ObjTrackInfo, 2) + 1;$/;"	v
cnt	lib/TrialData/util/openNEV_td.m	/^                cnt = size(NEV.VideoSyncInfo, 2) + 1;$/;"	v
cnt	lib/TrialData/util/openNEV_td.m	/^            cnt = 1;$/;"	v
coinc	lib/TrialData/Tools/removeBadNeurons.m	/^        coinc = coinc > cutoff_val;$/;"	v
coinc	lib/TrialData/Tools/removeBadNeurons.m	/^        coinc = zeros(size(all_spikes,2));$/;"	v
col	lib/TrialData/util/gpfa/plot3D_td.m	/^        col = useColor(n,:);$/;"	v
col	lib/TrialData/util/gpfa/plot3D_td.m	/^        col = useColor;$/;"	v
col_name	lib/TrialData/DataProcessing/parseFileByTrial.m	/^            col_name = [marker_names{marker_ctr} marker_postfix{col_ctr}];$/;"	v
col_title	lib/NeuronTable/getPDsFromWeights.m	/^        col_title = weightTable_select.Properties.VariableNames{baseline_cols_idx(in_signal_idx)/;"	v
col_title	lib/NeuronTable/getPDsFromWeights.m	/^        col_title = weightTable_select.Properties.VariableNames{weight_cols_idx(in_signal_idx)};$/;"	v
color	lib/plotEncoderPR2.m	/^    color = zeros(height(avgEval),3);$/;"	v
colorBrew2mat	lib/matlab-linspecer/linspecer.m	/^function varIn = colorBrew2mat(varIn)$/;"	f
colorGradient	lib/TrialData/util/gpfa/plot3D_td.m	/^colorGradient = false;$/;"	v
colorblindFlag	lib/matlab-linspecer/linspecer.m	/^            colorblindFlag = 1;$/;"	v
colorblindFlag	lib/matlab-linspecer/linspecer.m	/^            colorblindFlag = false;$/;"	v
colorblindFlag	lib/matlab-linspecer/linspecer.m	/^colorblindFlag = 0;$/;"	v
colorblindSet	lib/matlab-linspecer/linspecer.m	/^colorblindSet = {[215,25,28];[253,174,97];[171,217,233]*.8;[44,123,182]*.8};$/;"	v
colorm	lib/matlab-linspecer/linspecer.m	/^function cmap = colorm(varargin)$/;"	f
colors	lib/TrialData/BBDemoScript.m	/^colors = linspecer(4);$/;"	v
colors	lib/TrialData/util/dpca/dpca_plot_td.m	/^        colors = lines(numOfStimuli);$/;"	v
colors	lib/TrialData/util/dpca/dpca_plot_td.m	/^    colors = lines(numOfStimuli);$/;"	v
combined	lib/TrialData/Tools/appendTDs.m	/^combined = reorderTDfields(combined);$/;"	v
combined	lib/TrialData/Tools/appendTDs.m	/^combined = varargin{1};$/;"	v
combined_params	lib/TrialData/Analysis/getDPCA.m	/^combined_params = { {1}, {2,[1 2]}, {3,[1,3]}, {[2 3],[1 2 3]} };$/;"	v
commentIndices	lib/TrialData/util/openNEV_td.m	/^commentIndices             = find(PacketIDs == commentPacketID);$/;"	v
commentPacketID	lib/TrialData/util/openNEV_td.m	/^commentPacketID = 65535;$/;"	v
comparePDClouds	lib/NeuronTable/comparePDClouds.m	/^function comparePDClouds(pdTable1,pdTable2,params,varargin)$/;"	f
comparePDs	lib/NeuronTable/comparePDs.m	/^function comparePDs(pdTable1,pdTable2,params,varargin)$/;"	f
compareTuning	lib/NeuronTable/compareTuning.m	/^function compareTuning(curves,pds,params)$/;"	f
components	lib/TrialData/util/dpca/dpca.m	/^        components = find(ismember(whichMarg, find(margNums==i)));$/;"	v
componentsToPlot	lib/TrialData/util/dpca/dpca_plot.m	/^            componentsToPlot = [componentsToPlot find(options.whichMarg==uni(u), 2)];$/;"	v
componentsToPlot	lib/TrialData/util/dpca/dpca_plot.m	/^            componentsToPlot = componentsToPlot(1:12);$/;"	v
componentsToPlot	lib/TrialData/util/dpca/dpca_plot.m	/^        componentsToPlot = 1:12;$/;"	v
componentsToPlot	lib/TrialData/util/dpca/dpca_plot.m	/^        componentsToPlot = [];$/;"	v
componentsToPlot	lib/TrialData/util/dpca/dpca_plot.m	/^        componentsToPlot = [componentsToPlot moreComponents];$/;"	v
componentsToPlot	lib/TrialData/util/dpca/dpca_plot.m	/^        componentsToPlot = componentsToPlot(1:numCompToShow);$/;"	v
componentsToPlot	lib/TrialData/util/dpca/dpca_plot.m	/^        componentsToPlot = sort(componentsToPlot);$/;"	v
componentsToPlot	lib/TrialData/util/dpca/dpca_plot.m	/^    componentsToPlot = [];$/;"	v
compute_pseudo_R2	lib/TrialData/util/compute_pseudo_R2.m	/^function R2 = compute_pseudo_R2(Y, Yhat, Ymean, distr, Yhat_null)$/;"	f
compute_r2	lib/TrialData/util/compute_r2.m	/^function r2 = compute_r2(sig1,sig2,which_method)$/;"	f
compute_rel_pseudo_R2	lib/TrialData/util/compute_rel_pseudo_R2.m	/^function R2 = compute_rel_pseudo_R2(Y, Yhat1, Yhat2)$/;"	f
compute_vaf	lib/TrialData/util/compute_vaf.m	/^function VAF = compute_vaf(Y,Yhat,Yhat2)$/;"	f
cond_colors	lib/NeuronTable/compareTuning.m	/^cond_colors = linspecer(numel(curves));$/;"	v
cond_colors	makePlotsTRT.m	/^    cond_colors = [0.6,0.5,0.7;...$/;"	v
cond_idx	lib/NeuronTable/neuronAverage.m	/^cond_idx = false(height(keyTable),height(neuronTable));$/;"	v
cond_idx	lib/TrialData/Tools/subtractConditionMean.m	/^cond_idx  =  1:length(trial_data);$/;"	v
cond_idx	lib/TrialData/Tools/trialAverage.m	/^cond_idx = cell(1,num_conds);$/;"	v
cond_vals	lib/TrialData/Tools/trialAverage.m	/^    cond_vals = cell(1,length(conditions));$/;"	v
condition	lib/TrialData/Analysis/estimateDimensionality.m	/^condition     =  'target_direction';$/;"	v
conditions	lib/TrialData/Analysis/getDPCA.m	/^conditions = cell(1,length(varargin)-1);$/;"	v
conditions	lib/TrialData/Tools/trialAverage.m	/^    conditions = {'all'};$/;"	v
const	lib/TrialData/util/gpfa/fastfa.m	/^  const = -xDim\/2*log(2*pi);$/;"	v
cont_idx	lib/TrialData/Tools/reorderTDfields.m	/^    cont_idx = [cont_idx; cont_idx(emg_idx)];$/;"	v
cont_idx	lib/TrialData/Tools/reorderTDfields.m	/^    cont_idx = cont_idx_new;$/;"	v
cont_idx	lib/TrialData/Tools/reorderTDfields.m	/^cont_idx = find(ismember(fn,fn_cont));$/;"	v
cont_idx_new	lib/TrialData/Tools/reorderTDfields.m	/^    cont_idx_new = zeros(size(cont_idx));$/;"	v
cont_var_ref	lib/TrialData/Tools/getTDfields.m	/^        cont_var_ref = {cont_var_ref};$/;"	v
cont_var_ref	lib/TrialData/Tools/getTDfields.m	/^    cont_var_ref = cont_vars;$/;"	v
cont_vars	lib/TrialData/Tools/getTDfields.m	/^cont_vars = {'pos','vel','speed','acc','force','emg','t','x','y','z'}; % hard coded list of opti/;"	v
cont_vars_here	lib/TrialData/Tools/getTDfields.m	/^            cont_vars_here = fn(ismember(fn,cont_var_ref));$/;"	v
cont_vars_here	lib/TrialData/Tools/getTDfields.m	/^        cont_vars_here = getTDfields(trial_data,'spikes');$/;"	v
convBasisFunc	lib/TrialData/Tools/convBasisFunc.m	/^function trial_data = convBasisFunc(trial_data,params)$/;"	f
convertDataToTD	lib/TrialData/DataProcessing/convertDataToTD.m	/^function [trial_data,td_params,error_flag] = convertDataToTD(varargin)$/;"	f
convert_to_mv	lib/TrialData/DataProcessing/processNSx.m	/^convert_to_mv = true;$/;"	v
coord	lib/TrialData/Tools/addCoordPoint2TD.m	/^coord = 'sph';$/;"	v
coordCorr	lib/coordCorr.m	/^function [results] = coordCorr(td,params)$/;"	f
coordResults	calculateCoordCorrespondence.m	/^    coordResults = coordCorr(td,struct('model_aliases',{{'ext','handelbow','joint','musc'}},'num/;"	v
coord_postfix	lib/TrialData/Tools/addCoordPoint2TD.m	/^coord_postfix = {'pos','vel','acc'};$/;"	v
coord_test	lib/TrialData/Tools/Tests/coord_test.m	/^function pass = coord_test(trial_data)$/;"	f
corr_samples	lib/TrialData/Analysis/getLearningMetrics.m	/^corr_samples = 1000;$/;"	v
correction	lib/plotEncoderPR2.m	/^    correction = 1\/(encoderResults.params.num_folds*encoderResults.params.num_repeats) + 1\/(en/;"	v
correction	lib/stattestPDShiftErr.m	/^correction = 1\/(num_folds*num_repeats) + 1\/(num_folds-1);$/;"	v
correction	makePlotsTRT.m	/^    correction = 1\/100 + 1\/4;$/;"	v
count	lib/TrialData/DataProcessing/convertDataToTD.m	/^        count = count + 1;$/;"	v
count	lib/TrialData/DataProcessing/convertDataToTD.m	/^count = 1;$/;"	v
count	lib/TrialData/DataProcessing/processNEV.m	/^                count = count + 1;$/;"	v
count	lib/TrialData/DataProcessing/processNEV.m	/^count = 0;$/;"	v
count	lib/TrialData/Tools/dimReduce.m	/^            count = count + n_signals(i);$/;"	v
count	lib/TrialData/Tools/dimReduce.m	/^        count = 0;$/;"	v
count	lib/TrialData/Tools/getRWMovements.m	/^            count = count + 1;$/;"	v
count	lib/TrialData/Tools/getRWMovements.m	/^count = 0;$/;"	v
count	lib/TrialData/Tools/splitTD.m	/^            count = count + 1;$/;"	v
count	lib/TrialData/Tools/splitTD.m	/^count = 0;$/;"	v
count	lib/TrialData/util/subfcn/get_vars.m	/^    count = count + length(idx{i});$/;"	v
count	lib/TrialData/util/subfcn/get_vars.m	/^count = 0;$/;"	v
covar	lib/TrialData/Analysis/getNeuronTuning.m	/^        covar = [trial_data.target_direction]';$/;"	v
covar_mat	makePlotsTRT.m	/^                covar_mat = nancov(tuning_curve_mat);$/;"	v
covar_mat	makePlotsTRT.m	/^            covar_mat = nancov(tuning_curve_mat);$/;"	v
covariate	lib/TrialData/Analysis/getNeuronTuning.m	/^covariate  =  'target';$/;"	v
crossEval	lib/analyzeTRT.m	/^    crossEval = vertcat(repeatEval{:});$/;"	v
crossTuning	lib/analyzeTRT.m	/^    crossTuning = vertcat(repeatTuning{:});$/;"	v
crossval_params	lib/mwEncoders.m	/^    crossval_params = struct('model_names',{model_names},'glm_params',{glm_params},'num_folds',n/;"	v
csmall	lib/circ-toolbox/CircStat/circ_clust.m	/^csmall = unique(c);$/;"	v
ctrs	lib/TrialData/util/makeBasis_PostSpike.m	/^ctrs = yrnge(1):db:yrnge(2);   % centers (peak locations) for basis vectors$/;"	v
cumprob	lib/circ-toolbox/CircStat/circ_samplecdf.m	/^    cumprob = cdf(j);$/;"	v
cumprob	lib/circ-toolbox/CircStat/circ_samplecdf.m	/^cumprob = 0; %cumultive probability so far$/;"	v
curr_path	lib/TrialData/util/getGitInfo.m	/^curr_path = mfilename('fullpath');$/;"	v
currcount	lib/circ-toolbox/CircStat/circ_samplecdf.m	/^    currcount = sum(thetas >= minang & thetas < maxang);$/;"	v
currentLocation	lib/TrialData/util/openNEV_td.m	/^currentLocation = ftell(FID);$/;"	v
currentParams	lib/TrialData/util/gpfa/gpfaEngine_td.m	/^currentParams = startParams;$/;"	v
curve	lib/NeuronTable/getTuningCurves.m	/^curve = zeros(size(response_var,2),num_bins);$/;"	v
curveTable	lib/NeuronTable/compareTuning.m	/^        curveTable = curves{cond_idx};$/;"	v
curveTable	lib/getCurvesFromCrossval.m	/^curveTable = avgTable(:,key_cols | bin_cols | curve_cols | ciLo_cols | ciHi_cols);$/;"	v
curve_CIhigh	lib/NeuronTable/getTuningCurves.m	/^curve_CIhigh = zeros(size(response_var,2),num_bins);$/;"	v
curve_CIlow	lib/NeuronTable/getTuningCurves.m	/^curve_CIlow = zeros(size(response_var,2),num_bins);$/;"	v
curve_cols	lib/getCurvesFromCrossval.m	/^curve_cols = endsWith(avgTable.Properties.VariableNames,'Curve');$/;"	v
curve_stderr	lib/NeuronTable/getTuningCurves.m	/^        curve_stderr = std(response_var_in_bin,0,2)\/sqrt(size(response_var_in_bin,2)); % standa/;"	v
curve_wrap	lib/NeuronTable/plotFlatTuning.m	/^    curve_wrap = curve_wrap(~isnan(curve_wrap));$/;"	v
curve_wrap	lib/NeuronTable/plotFlatTuning.m	/^    curve_wrap = repmat(curve.(sprintf('%sCurve',move_cor)),1,3);$/;"	v
curves	lib/NeuronTable/compareTuning.m	/^curves = reshape(curves,1,length(curves)); % this should throw an error if it's not a 1-d cell a/;"	v
curves	lib/NeuronTable/getTuningCurves.m	/^curves = horzcat(makeNeuronTableStarter(trial_data,params),tab_append);$/;"	v
cutoff_val	lib/TrialData/Tools/removeBadNeurons.m	/^        cutoff_val = prctile_dist(floor(10*prctile_cutoff));$/;"	v
cyc	lib/TrialData/util/gpfa/fastfa.m	/^  cyc        = 1e8;$/;"	v
cyl	lib/TrialData/Tools/addCoordPoint2TD.m	/^    cyl = [th r z];$/;"	v
d	lib/TrialData/Analysis/pairwiseCorr.m	/^d = squareform(pdist(rho));$/;"	v
d	lib/TrialData/util/dpca/dpca_marginalize.m	/^d = length(X);$/;"	v
d	lib/TrialData/util/dpca/dpca_plot.m	/^            d = d\/sum(d)*100;$/;"	v
d	lib/TrialData/util/dpca/dpca_plot.m	/^        d = options.explainedVar.totalMarginalizedVar \/ options.explainedVar.totalVar * 100;$/;"	v
d	lib/TrialData/util/dpca/dpca_plot.m	/^        d = options.explainedVar.totalMarginalizedVar_signal \/ options.explainedVar.totalVar_si/;"	v
d	lib/TrialData/util/gpfa/fastfa.m	/^  d     = mean(X, 2);$/;"	v
d	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^                d = filtfilt(bhigh,ahigh,double(d));$/;"	v
d	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^            d = data(i,:);$/;"	v
d	lib/circ-toolbox/CircStat/circ_cmtest.m	/^  d = circ_dist(alpha(pidx),med);$/;"	v
d	lib/circ-toolbox/CircStat/circ_confmean.m	/^  d = 0;$/;"	v
d	lib/circ-toolbox/CircStat/circ_medtest.m	/^d = circ_dist(alpha,md);$/;"	v
d	lib/circ-toolbox/CircStat/circ_mtest.m	/^  d = 0;$/;"	v
d	lib/circ-toolbox/CircStat/circ_r.m	/^  d = 0;$/;"	v
d	lib/circ-toolbox/CircStat/circ_rtest.m	/^    d = 0;$/;"	v
d	lib/circ-toolbox/CircStat/circ_stats.m	/^  d = 0;$/;"	v
d	lib/circ-toolbox/CircStat/circ_std.m	/^  d = 0;$/;"	v
d	lib/circ-toolbox/CircStat/circ_symtest.m	/^d = circ_dist(alpha,md);$/;"	v
d	lib/circ-toolbox/CircStat/circ_var.m	/^  d = 0;$/;"	v
d	lib/circ-toolbox/CircStat/circ_vmpar.m	/^  d = 0;$/;"	v
d	lib/circ-toolbox/CircStat/circ_vtest.m	/^  d = 0;$/;"	v
dPDs	lib/calculatePDShiftTables.m	/^        dPDs = minusPi2Pi(dl_PDs-pm_PDs);$/;"	v
dat	lib/TrialData/Analysis/runGPFA.m	/^dat = repmat(struct(),size(trial_data));$/;"	v
dat	lib/TrialData/util/gpfa/plot3D_td.m	/^    dat = seq(n).(xspec)(dimsToPlot,:);$/;"	v
data	lib/TrialData/Analysis/getPotentSpace.m	/^            data = (data - repmat(mu_in,size(data,1),1)) * w_in;$/;"	v
data	lib/TrialData/Analysis/getPotentSpace.m	/^            data = data(:,1:in_dims);$/;"	v
data	lib/TrialData/Analysis/getPotentSpace.m	/^            data = get_vars(trial_data(trial),in_signals);$/;"	v
data	lib/TrialData/Analysis/getPotentSpace.m	/^            data = trial_data(trial).([sig_name_in{:} '_pca']);$/;"	v
data	lib/TrialData/Analysis/getPotentSpace.m	/^        data = (data - repmat(mu_out,size(data,1),1)) * w_out;$/;"	v
data	lib/TrialData/Analysis/getPotentSpace.m	/^        data = get_vars(trial_data(trial),out_signals);$/;"	v
data	lib/TrialData/Analysis/pairwiseCorr.m	/^    data = [data, temp(:,signals{i,2})];$/;"	v
data	lib/TrialData/Analysis/pairwiseCorr.m	/^data = [];$/;"	v
data	lib/TrialData/DataProcessing/convertDataToTD.m	/^                    data = data(idx_keep,:);$/;"	v
data	lib/TrialData/DataProcessing/convertDataToTD.m	/^                data = data(idx_keep,:);$/;"	v
data	lib/TrialData/DataProcessing/convertDataToTD.m	/^            data = which_operation(data')';$/;"	v
data	lib/TrialData/DataProcessing/convertDataToTD.m	/^        data = file_data_temp.data(:,idx);$/;"	v
data	lib/TrialData/DataProcessing/convertDataToTD.m	/^data = 2*data.*data;$/;"	v
data	lib/TrialData/DataProcessing/convertDataToTD.m	/^data = abs(sqrt(data));$/;"	v
data	lib/TrialData/DataProcessing/convertDataToTD.m	/^data = filtfilt(bhigh,ahigh,double(data));$/;"	v
data	lib/TrialData/DataProcessing/convertDataToTD.m	/^data = filtfilt(blow,alow,data);$/;"	v
data	lib/TrialData/DataProcessing/processNEV.m	/^            data = [];$/;"	v
data	lib/TrialData/DataProcessing/processNEV.m	/^        data = cell(1,length(labels));$/;"	v
data	lib/TrialData/DataProcessing/processNSx.m	/^    data = data\/4e3;$/;"	v
data	lib/TrialData/DataProcessing/processNSx.m	/^data = NSx.Data';$/;"	v
data	lib/TrialData/Tools/addCorrelatedNoise.m	/^    data = get_vars(td(trial),signals);$/;"	v
data	lib/TrialData/Tools/dimReduce.m	/^        data = [data, temp_data(:,signals{i,2})];$/;"	v
data	lib/TrialData/Tools/dimReduce.m	/^        data = zeros(size(trial_data(trial).(signals{1,1}),1),sum(n_signals));$/;"	v
data	lib/TrialData/Tools/dimReduce.m	/^    data = [];$/;"	v
data	lib/TrialData/Tools/getDifferential.m	/^        data = trial_data(trial).(signal);$/;"	v
data	lib/TrialData/Tools/getNoiseCovar.m	/^data = get_vars(td,noise_signals);$/;"	v
data	lib/TrialData/Tools/smoothSignals.m	/^                data = smooth_data(data,bin_size,kernel_SD);$/;"	v
data	lib/TrialData/Tools/smoothSignals.m	/^            data = trial_data(trial).(signals{i});$/;"	v
data	lib/TrialData/Tools/sqrtTransform.m	/^        data = trial_data(trial).(signals{i});$/;"	v
data	lib/TrialData/util/dpca/dpca_plot_td.m	/^    data = data';$/;"	v
data	lib/TrialData/util/dpca/dpca_plot_td.m	/^    data = reshape(data, size(data,1), []);$/;"	v
data	lib/TrialData/util/dpca/dpca_plot_td.m	/^    data = squeeze(data);$/;"	v
data	lib/TrialData/util/moving_average.m	/^    data = [nan(bins\/2,size(data,2)); data; nan(bins\/2,size(data,2))];$/;"	v
data	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^data = file_data.data;$/;"	v
dataBinWidth	lib/TrialData/util/gpfa/getSeq_td.m	/^  dataBinWidth = 1; %in msec$/;"	v
dataDim	lib/TrialData/util/dpca/dpca_plot.m	/^dataDim = size(Xfull);$/;"	v
dataDimFull	lib/TrialData/util/dpca/dpca_plot.m	/^    dataDimFull = size(options.X_extra);$/;"	v
dataTable	lib/NeuronTable/neuronAverage.m	/^    dataTable = neuronTable_select(:,~keycols);$/;"	v
data_arr	lib/NeuronTable/getTDPDs.m	/^    data_arr = [response_var(:,uid) input_var];$/;"	v
data_bin	lib/TrialData/DataProcessing/convertDataToTD.m	/^                data_bin = bin_events(data,t_bin);$/;"	v
data_bin	lib/TrialData/DataProcessing/convertDataToTD.m	/^                data_bin = bin_spikes(data,1:length(data),t_bin);$/;"	v
data_bin	lib/TrialData/DataProcessing/convertDataToTD.m	/^                data_bin = data;$/;"	v
data_bin	lib/TrialData/DataProcessing/convertDataToTD.m	/^                data_bin = histcounts(trig_ts,t_bin)'; % bin$/;"	v
data_bin	lib/TrialData/DataProcessing/convertDataToTD.m	/^                data_bin = process_emg(data,temp_params);$/;"	v
data_bin	lib/TrialData/DataProcessing/convertDataToTD.m	/^                data_bin = zeros(ceil(size(data,1)\/round(bin_size*sig_data(count).samprate)),si/;"	v
data_mvavg	lib/TrialData/util/moving_average.m	/^    data_mvavg = zeros(size(data));$/;"	v
data_mvavg	lib/TrialData/util/moving_average.m	/^    data_mvavg = zeros(size(data,1)-(bins),size(data,2));$/;"	v
data_smooth	lib/TrialData/util/smooth_data.m	/^data_smooth = zeros(nbr_samples,nbr_chs);$/;"	v
data_type	lib/TrialData/DataProcessing/processNEV.m	/^data_type        = 'spikes'; % 'spikes', 'comments' for now$/;"	v
datadir	calculateCoordCorrespondence.m	/^datadir = '\/home\/raeed\/codebase\/limblab\/data-td\/MultiWorkspace';$/;"	v
datadir	calculateDecoders.m	/^datadir = '\/home\/raeed\/data\/limblab\/data-td\/ActPas';$/;"	v
datadir	calculateEncoders.m	/^datadir = '\/home\/raeed\/Wiki\/Projects\/limblab\/multiworkspace\/data';$/;"	v
datadir	data_testing/hand_elbow_xcorr.m	/^    datadir = '\/home\/raeed\/data\/limblab\/data-td\/MultiWorkspace';$/;"	v
datadir	makePlotsTRT.m	/^    datadir = '\/home\/raeed\/Wiki\/Projects\/limblab\/multiworkspace\/data\/Results\/Encoding';$/;"	v
datadir	makePlotsTRT.m	/^    datadir = '\/home\/raeed\/data\/limblab\/data-td\/FullWS\/Results\/Decoding';$/;"	v
date	lib/NeuronTable/makeNeuronTableStarter.m	/^    date = cell(tab_height,1);$/;"	v
date	lib/NeuronTable/makeNeuronTableStarter.m	/^    date = repmat({trial_data(1).date},tab_height,1);$/;"	v
db	lib/TrialData/util/makeBasis_PostSpike.m	/^db = diff(yrnge)\/(ncols-1);    % spacing between cosine bump peaks$/;"	v
dd	lib/circ-toolbox/CircStat/circ_median.m	/^  dd = circ_dist2(beta,beta);$/;"	v
dds	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^        dds = [0; diff(ds)];$/;"	v
decenter	lib/TrialData/Tools/getEnvelope.m	/^decenter = true;$/;"	v
decimate_signals	lib/TrialData/DataProcessing/parseFileByTrial.m	/^function out = decimate_signals(data,var_list,bin_size)$/;"	f
decoder	lib/TrialData/util/dpca/dpca.m	/^    decoder = [decoder; D];$/;"	v
decoder	lib/TrialData/util/dpca/dpca.m	/^decoder = [];$/;"	v
decoderResults	calculateDecoders.m	/^    decoderResults = mwDecoders(td,struct('neur_name','S1_spikes','add_shift',true,'num_repeats'/;"	v
decoder_colors	makePlotsTRT.m	/^    decoder_colors = [...$/;"	v
del_Jinv	lib/get_alpha_potent.m	/^    del_Jinv = pinv(J_dl')'-pinv(J_pm')';$/;"	v
deleteChannels	lib/TrialData/util/openNSx_td.m	/^	deleteChannels = setdiff(channelThatWereRead, userRequestedChanRow) - min(userRequestedChanRow)/;"	v
delete_artifacts	lib/TrialData/util/remove_spike_artifacts.m	/^    delete_artifacts = 1;$/;"	v
delete_artifacts	lib/TrialData/util/remove_spike_artifacts.m	/^    delete_artifacts = varargin{4};$/;"	v
den	lib/circ-toolbox/CircStat/circ_corrcc.m	/^den = sqrt(sum(sin(alpha1 - alpha1_bar).^2) .* sum(sin(alpha2 - alpha2_bar).^2));$/;"	v
df	lib/TrialData/util/openNEV_td.m	/^            df   = typecast(ExtendedHeader(13:14),'int16');$/;"	v
df_1	lib/circ-toolbox/CircStat/circ_hktest.m	/^  df_1 = 2*(p-1);$/;"	v
df_1	lib/circ-toolbox/CircStat/circ_hktest.m	/^  df_1 = p-1;$/;"	v
df_2	lib/circ-toolbox/CircStat/circ_hktest.m	/^  df_2 = 2*(q-1);$/;"	v
df_2	lib/circ-toolbox/CircStat/circ_hktest.m	/^  df_2 = q-1;$/;"	v
df_i	lib/circ-toolbox/CircStat/circ_hktest.m	/^    df_i = (p-1)*(q-1);$/;"	v
df_i	lib/circ-toolbox/CircStat/circ_hktest.m	/^    df_i = [];$/;"	v
df_i	lib/circ-toolbox/CircStat/circ_hktest.m	/^  df_i = (p-1) * (q-1);$/;"	v
df_r	lib/circ-toolbox/CircStat/circ_hktest.m	/^    df_r = (p-1)*(q-1);$/;"	v
df_r	lib/circ-toolbox/CircStat/circ_hktest.m	/^    df_r = p*q*(m-1);$/;"	v
df_t	lib/circ-toolbox/CircStat/circ_hktest.m	/^  df_t = n-1;$/;"	v
dg	lib/circ-toolbox/CircStat/circ_otest.m	/^dg = 0:sz:pi;$/;"	v
dif	lib/TrialData/util/dpca/dpca_explainedVariance.m	/^    dif = dif .\/ sqrt(2*XfullNN(:));$/;"	v
dif	lib/TrialData/util/dpca/dpca_explainedVariance.m	/^    dif = options.X_trial(sub2ind([prod(dims(1:end-1)) dims(end)], (1:prod(dims(1:end-1)))', ind/;"	v
diffstat	lib/plotEncoderPR2.m	/^    diffstat = encoderResults.crossEval.(sprintf('glm_%s_model_eval',y_model))-encoderResults.cr/;"	v
diffstat	lib/stattestPDShiftErr.m	/^    diffstat = err.(modelcompare{i,1})-err.(modelcompare{i,2});$/;"	v
digserIndices	lib/TrialData/util/openNEV_td.m	/^digserIndices              = find(PacketIDs == digserPacketID);$/;"	v
digserPacketID	lib/TrialData/util/openNEV_td.m	/^digserPacketID = 0;$/;"	v
digserTimestamp	lib/TrialData/util/openNEV_td.m	/^digserTimestamp            = Timestamp(digserIndices);$/;"	v
dim	lib/TrialData/util/circular_mean.m	/^  dim = 1;$/;"	v
dim	lib/TrialData/util/dpca/dpca_plot.m	/^    dim = size(Xfull);$/;"	v
dim	lib/circ-toolbox/CircStat/circ_axialmean.m	/^  dim = 1;$/;"	v
dim	lib/circ-toolbox/CircStat/circ_confmean.m	/^  dim = 1;$/;"	v
dim	lib/circ-toolbox/CircStat/circ_kurtosis.m	/^  dim = 1;$/;"	v
dim	lib/circ-toolbox/CircStat/circ_mean.m	/^  dim = 1;$/;"	v
dim	lib/circ-toolbox/CircStat/circ_median.m	/^  dim = 1;$/;"	v
dim	lib/circ-toolbox/CircStat/circ_moment.m	/^  dim = 1;$/;"	v
dim	lib/circ-toolbox/CircStat/circ_r.m	/^  dim = 1;$/;"	v
dim	lib/circ-toolbox/CircStat/circ_skewness.m	/^  dim = 1;$/;"	v
dim	lib/circ-toolbox/CircStat/circ_std.m	/^  dim = 1;$/;"	v
dim	lib/circ-toolbox/CircStat/circ_var.m	/^  dim = 1;$/;"	v
dim	lib/matlab-linspecer/linspecer.m	/^function varIn = dim(varIn,f)$/;"	f
dimReduce	lib/TrialData/Tools/dimReduce.m	/^function [trial_data,info_out] = dimReduce(trial_data, params)$/;"	f
dimrest	lib/TrialData/util/dpca/dpca_marginalize.m	/^dimrest = setdiff(1:length(dims), dimlist);$/;"	v
dims	lib/TrialData/Analysis/estimateDimensionality.m	/^dims = find(cumsum(e).\/(alpha*(1-cumsum(noise_eigen_prctile))) > 1,1,'first');$/;"	v
dims	lib/TrialData/util/dpca/dpca_explainedVariance.m	/^    dims = size(options.X_trial);$/;"	v
dims	lib/TrialData/util/dpca/dpca_marginalize.m	/^dims = size(X);$/;"	v
dims	lib/TrialData/util/dpca/dpca_plot_td.m	/^    dims = size(data);$/;"	v
dimsToPlot	lib/TrialData/util/gpfa/plot3D_td.m	/^dimsToPlot = 1:3;$/;"	v
dir	lib/NeuronTable/getTuningCurves.m	/^dir = atan2(move_var(:,2),move_var(:,1));$/;"	v
dirArr	lib/NeuronTable/getTDPDs.m	/^dirArr = zeros(size(response_var,2),1);$/;"	v
dirCIArr	lib/NeuronTable/getTDPDs.m	/^dirCIArr = zeros(size(response_var,2),2);$/;"	v
dirCIDL	lib/NeuronTable/irisPlot.m	/^dirCIDL = DL_pdData.velPDCI;$/;"	v
dirCIPM	lib/NeuronTable/irisPlot.m	/^dirCIPM = PM_pdData.velPDCI;$/;"	v
dir_bins	lib/NeuronTable/getTuningCurves.m	/^dir_bins = round(dir\/bin_spacing)*bin_spacing;$/;"	v
dirs	lib/NeuronTable/getTDPDs.m	/^        dirs = atan2(boot_coef(:,1+in_signal_idx*2),boot_coef(:,in_signal_idx*2));$/;"	v
dirs	lib/TrialData/BBDemoScript.m	/^dirs = unique([trial_data.target_direction]);$/;"	v
disp	lib/circ-toolbox/CircStat/circ_clust.m	/^    disp = 1;$/;"	v
distribution	lib/NeuronTable/getTDPDs.m	/^distribution = 'Poisson';$/;"	v
dists	lib/NeuronTable/comparePDClouds.m	/^    dists = sqrt(sum(centered_clust.^2,2));$/;"	v
dists	lib/NeuronTable/getTuningHull.m	/^        dists = sqrt(sum(centered_clust.^2,2));$/;"	v
dists	lib/NeuronTable/plotWeightClouds.m	/^    dists = sqrt(sum(centered_clust.^2,2));$/;"	v
dl_PDs	lib/calculatePDShiftTables.m	/^        dl_PDs = dl_tuningTable.([model_names{modelnum} '_velPD']);$/;"	v
dm	lib/circ-toolbox/CircStat/circ_median.m	/^  dm = abs(m1-m2);$/;"	v
dnaPlot	lib/dnaPlot.m	/^function dnaPlot( PM_pdData, DL_pdData)$/;"	f
do_avg	lib/TrialData/Tools/binTD.m	/^            do_avg =  true;$/;"	v
do_avg	lib/TrialData/Tools/binTD.m	/^    do_avg = false;$/;"	v
do_boot	lib/TrialData/Tools/getTDidx.m	/^        do_boot = true;$/;"	v
do_boot	lib/TrialData/Tools/getTDidx.m	/^do_boot = false;$/;"	v
do_dim_estimate	lib/TrialData/Analysis/getPotentSpace.m	/^do_dim_estimate    =  false;   % whether to attempt Machens method to estimate dimensionality$/;"	v
do_eval_model	lib/NeuronTable/getTDModelWeights.m	/^do_eval_model = false;$/;"	v
do_fr_check	lib/TrialData/Tools/removeBadNeurons.m	/^do_fr_check     =  true;$/;"	v
do_lasso	lib/TrialData/Analysis/getModel.m	/^do_lasso      =  false;$/;"	v
do_norm	lib/TrialData/Analysis/pairwiseCorr.m	/^do_norm          =  false;$/;"	v
do_onset	lib/TrialData/Tools/getRWMovements.m	/^do_onset           =  true;$/;"	v
do_plot	lib/NeuronTable/getTDClassicalPDs.m	/^do_plot = false;$/;"	v
do_plot	lib/NeuronTable/getTDPDs.m	/^do_plot = false;$/;"	v
do_plot	lib/TrialData/Analysis/getDPCA.m	/^do_plot        =  true;$/;"	v
do_plot	lib/TrialData/Tools/addCorrelatedNoise.m	/^do_plot         =  false;$/;"	v
do_plot	lib/TrialData/Tools/dimReduce.m	/^do_plot         =  false;$/;"	v
do_plot	lib/TrialData/Tools/getNoiseCovar.m	/^do_plot         =  false;$/;"	v
do_shunt_check	lib/TrialData/Tools/removeBadNeurons.m	/^do_shunt_check  =  false;$/;"	v
do_smoothing	lib/TrialData/Tools/dimReduce.m	/^do_smoothing     = false; % will smooth before dim reduction  (trial_data projections are unsmoo/;"	v
do_smoothing	lib/TrialData/Tools/smoothSignals.m	/^do_smoothing    =  true; % will just return trial_data if this is false$/;"	v
do_stretch	lib/TrialData/Tools/trialAverage.m	/^do_stretch  =  false;$/;"	v
do_the_loading	lib/TrialData/DataProcessing/loadTDfiles.m	/^function [trial_data,extra_outs] = do_the_loading(filename,func_calls)$/;"	f
dori	lib/circ-toolbox/CircStat/examples/example2.m	/^dori = diff(ori(1:2));$/;"	v
dot_width	lib/TrialData/Plotting/visData.m	/^dot_width          =   3;        % standard width for dot markers$/;"	v
dpR2CI	lib/plotEncoderPR2.m	/^    dpR2CI = zeros(height(avgEval),2);$/;"	v
dpca	lib/TrialData/util/dpca/dpca.m	/^function [W, V, whichMarg] = dpca(Xfull, numComps, varargin)$/;"	f
dpca_explainedVariance	lib/TrialData/util/dpca/dpca_explainedVariance.m	/^function explVar = dpca_explainedVariance(Xfull, W, V, varargin)$/;"	f
dpca_marginalize	lib/TrialData/util/dpca/dpca_marginalize.m	/^function [YY, margNums] = dpca_marginalize(X, varargin)$/;"	f
dpca_plot	lib/TrialData/util/dpca/dpca_plot.m	/^function dpca_plot(Xfull, W, V, plotFunction, varargin)$/;"	f
dpca_plot_default	lib/TrialData/util/dpca/dpca_plot_td.m	/^function dpca_plot_default(data, time, yspan, explVar, compNum, events, signif, marg)$/;"	f
dpca_plot_fcn	lib/TrialData/Analysis/getDPCA.m	/^dpca_plot_fcn  =  @dpca_plot_td;$/;"	v
dprob	lib/circ-toolbox/CircStat/circ_samplecdf.m	/^dprob = 1\/length(thetas); %incremental change in probability$/;"	v
ds	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^        ds = [0; diff(s)];$/;"	v
dt	lib/TrialData/DataProcessing/parseFileByTrial.m	/^    dt = round(mode(diff(data.t)),7);$/;"	v
dt	lib/TrialData/Tools/getTargetDirection.m	/^dt              =  0.01; % s$/;"	v
dupeAndShift	lib/TrialData/Tools/dupeAndShift.m	/^function trial_data = dupeAndShift(trial_data,varargin)$/;"	f
e	lib/TrialData/Analysis/estimateDimensionality.m	/^e = pca_info.eigen\/sum(pca_info.eigen);$/;"	v
e	lib/TrialData/util/gpfa/fastfa.m	/^    e     = sort(eig(cX), 'descend');$/;"	v
eff_1	lib/circ-toolbox/CircStat/circ_hktest.m	/^  eff_1 = sum(pr.^2 .\/ sum(cn,2)) - tr.^2\/n;$/;"	v
eff_2	lib/circ-toolbox/CircStat/circ_hktest.m	/^  eff_2 = sum(qr.^2 .\/ sum(cn,1)') - tr.^2\/n;$/;"	v
eff_i	lib/circ-toolbox/CircStat/circ_hktest.m	/^    eff_i = [];$/;"	v
eff_i	lib/circ-toolbox/CircStat/circ_hktest.m	/^    eff_i = sum(sum(cr.^2.\/cn)) - sum(qr.^2.\/qn) ...$/;"	v
eff_r	lib/circ-toolbox/CircStat/circ_hktest.m	/^    eff_r = n - sum(qr.^2.\/qn)- sum(pr.^2.\/pn) + tr.^2\/n;$/;"	v
eff_r	lib/circ-toolbox/CircStat/circ_hktest.m	/^    eff_r = n - sum(sum(cr.^2.\/cn));$/;"	v
eff_t	lib/circ-toolbox/CircStat/circ_hktest.m	/^  eff_t = n - tr.^2\/n;$/;"	v
ego_hull	lib/plotMWTuningCloud.m	/^        ego_hull = tuningHull_unit.glm_ego_model_velWeight{1};$/;"	v
eigen_in	lib/TrialData/Analysis/getPotentSpace.m	/^eigen_in = pca_info_in.eigen;$/;"	v
eigen_out	lib/TrialData/Analysis/getPotentSpace.m	/^eigen_out = pca_info_out.eigen;$/;"	v
eigenv_noise	lib/TrialData/Analysis/estimateDimensionality.m	/^eigenv_noise        = cell2mat(noise_eigen);$/;"	v
elbow_idx	data_testing/hand_elbow_xcorr.m	/^    elbow_idx = 28:30;$/;"	v
elbow_idx	lib/mwDecoders.m	/^    elbow_idx = 28:30;$/;"	v
elbow_idx	makePlotsTRT.m	/^    elbow_idx = 28:30;$/;"	v
elbow_mean	lib/mwDecoders.m	/^            elbow_mean = mean(elbow_true);$/;"	v
elbow_pred_hand	lib/mwDecoders.m	/^            elbow_pred_hand = get_vars(td_test,check_signals(td_test,'linmodel_hand_decoder'));$/;"	v
elbow_pred_neur	lib/mwDecoders.m	/^            elbow_pred_neur = get_vars(td_test,check_signals(td_test,'linmodel_neur_decoder'));$/;"	v
elbow_signals	lib/mwDecoders.m	/^    elbow_signals = {'markers',elbow_idx;'marker_vel',elbow_idx};$/;"	v
elbow_speed	data_testing/hand_elbow_xcorr.m	/^    elbow_speed = sqrt(sum(elbow_vel.^2,2));$/;"	v
elbow_true	lib/mwDecoders.m	/^            elbow_true = get_vars(td_test,{'markers',elbow_idx;'marker_vel',elbow_idx});$/;"	v
elbow_vel	data_testing/hand_elbow_xcorr.m	/^    elbow_vel = get_vars(td,{'marker_vel',elbow_idx});$/;"	v
elecDigiFactors	lib/TrialData/util/openNEV_td.m	/^        elecDigiFactors = double(1000.\/[NEV.ElectrodesInfo(NEV.Data.Spikes.Electrode).DigitalFa/;"	v
elecNames	lib/TrialData/DataProcessing/parseFileByTrial.m	/^            elecNames = unique([sortedUnits.chan], 'stable');$/;"	v
elecReading	lib/TrialData/util/openNSx_td.m	/^            elecReading = 1;$/;"	v
elecReading	lib/TrialData/util/openNSx_td.m	/^elecReading     = 0;$/;"	v
elecs	lib/TrialData/Tools/stripSpikeSorting.m	/^    elecs = unique(sg(:,1));$/;"	v
emg_HPF_cutoff	lib/TrialData/DataProcessing/convertDataToTD.m	/^emg_HPF_cutoff  =  [20 900];    % for EMG butterworth filter$/;"	v
emg_LPF_cutoff	lib/TrialData/DataProcessing/convertDataToTD.m	/^emg_LPF_cutoff  =  50;    % for EMG butterworth filter$/;"	v
emg_idx	lib/TrialData/Tools/reorderTDfields.m	/^    emg_idx = cellfun(@(x) ~isempty(x),strfind(fn_cont,'emg'));$/;"	v
emg_list	lib/TrialData/DataProcessing/parseFileByTrial.m	/^    emg_list = cds.emg.Properties.VariableNames;$/;"	v
emg_n_poles	lib/TrialData/DataProcessing/convertDataToTD.m	/^emg_n_poles     =  4;     % for EMG butterworth filter$/;"	v
emptyChar	lib/TrialData/util/openNEV_td.m	/^                emptyChar = find (NEV.ObjTrackInfo(IDX).TrackableName == 0, 1);$/;"	v
encoder	lib/TrialData/util/dpca/dpca.m	/^    encoder = [encoder P];    $/;"	v
encoder	lib/TrialData/util/dpca/dpca.m	/^encoder = [];$/;"	v
encoderResults	calculateEncoders.m	/^    encoderResults = mwEncoders(td,struct('model_aliases',{model_aliases},'arrayname',arrayname,/;"	v
end_idx	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^end_idx       =  'idx_endTime';$/;"	v
end_name	lib/TrialData/Tools/getRWMovements.m	/^end_name           =  'idx_trial_end';$/;"	v
end_name	lib/TrialData/Tools/splitTD.m	/^end_name           =  'idx_trial_end';$/;"	v
err	data_testing/testCoordFrameLinearity.m	/^    err = sqrt(sum(muscle_resid(:,1:2).^2,2));$/;"	v
err	lib/TrialData/Tools/removeBadTrials.m	/^                err = true;$/;"	v
err	lib/TrialData/Tools/removeBadTrials.m	/^            err = true;$/;"	v
err	lib/TrialData/Tools/removeBadTrials.m	/^        err = true;$/;"	v
err	lib/TrialData/Tools/removeBadTrials.m	/^    err = false;$/;"	v
err	lib/calculateEncoderPDShiftErr.m	/^    err = array2table(err_arr,'VariableNames',model_aliases);$/;"	v
err	makePlotsTRT.m	/^    err = cell(num_monks,1);$/;"	v
err_arr	lib/calculateEncoderPDShiftErr.m	/^    err_arr = zeros(100,length(model_aliases));$/;"	v
err_arr_all	lib/calculateEncoderPDShiftErr.m	/^        err_arr_all = model_shifts.velPD-real_shifts.velPD;$/;"	v
err_idx	lib/calculateEncoderPDShiftErr.m	/^            err_idx = 1:length(encoderResults.tunedNeurons);$/;"	v
err_idx	lib/calculateEncoderPDShiftErr.m	/^            err_idx = err_idx + (i-1)*length(encoderResults.tunedNeurons);$/;"	v
error_flag	lib/TrialData/DataProcessing/convertDataToTD.m	/^                    error_flag = true;$/;"	v
error_flag	lib/TrialData/DataProcessing/convertDataToTD.m	/^                error_flag = true;$/;"	v
error_flag	lib/TrialData/DataProcessing/convertDataToTD.m	/^        error_flag = true;$/;"	v
error_flag	lib/TrialData/DataProcessing/convertDataToTD.m	/^error_flag = false;$/;"	v
error_flag	lib/TrialData/DataProcessing/processNEV.m	/^            error_flag = true;$/;"	v
error_flag	lib/TrialData/DataProcessing/processNEV.m	/^    error_flag = true;$/;"	v
error_flag	lib/TrialData/DataProcessing/processNEV.m	/^error_flag = false;$/;"	v
estParams	lib/TrialData/util/gpfa/postprocess.m	/^    estParams       = ws.estParams;$/;"	v
estParams	lib/TrialData/util/gpfa/postprocess.m	/^  estParams = [];$/;"	v
estimateDimensionality	lib/TrialData/Analysis/estimateDimensionality.m	/^function [dims,noise_eigen_prctile] = estimateDimensionality(trial_data,params)$/;"	f
evalFold	lib/coordCorr.m	/^function [predVAF,td_test] = evalFold(td_train,td_test,model_params)$/;"	f
evalModel	lib/TrialData/Analysis/evalModel.m	/^function metric = evalModel(trial_data,params)$/;"	f
eval_metric	lib/NeuronTable/getTDModelWeights.m	/^eval_metric = 'pr2';$/;"	v
eval_metric	lib/TrialData/Analysis/evalModel.m	/^eval_metric      =  '';$/;"	v
eval_metric	lib/TrialData/Analysis/evalModel.m	/^eval_metric    = varargin{end-1};$/;"	v
eval_params	lib/NeuronTable/getTDModelWeights.m	/^    eval_params = temp_info;$/;"	v
eval_params	lib/analyzeTRT.m	/^    eval_params = glm_info;$/;"	v
event_db	lib/TrialData/Plotting/visData.m	/^event_db          =   { ...$/;"	v
event_list	lib/TrialData/DataProcessing/parseFileByTrial.m	/^event_list     =  {};$/;"	v
event_list	lib/TrialData/DataProcessing/parseFileByTrial.m	/^event_list = fieldnames(cds_bin.trials);$/;"	v
event_list	lib/TrialData/DataProcessing/parseFileByTrial.m	/^event_list = union({'startTime';'endTime'},event_list);$/;"	v
event_rows	lib/TrialData/Plotting/visData.m	/^event_rows         =   1;        % how many rows for event markers$/;"	v
event_symbol	lib/TrialData/Plotting/visData.m	/^event_symbol       =   'o';      % standard symbol for event markers$/;"	v
events	lib/TrialData/Plotting/visData.m	/^    events = events(idx); clear idx;$/;"	v
events	lib/TrialData/Plotting/visData.m	/^events = fn(cellfun(@(x) ~isempty(regexp(x,'idx_','ONCE')),fn));$/;"	v
events	lib/TrialData/Tools/binTD.m	/^        events = [trial_data.(fn_idx{iIdx})];$/;"	v
events	lib/TrialData/Tools/binTD.m	/^        events = events + trial_starts(1:end-1)-1;$/;"	v
exclude_units	lib/TrialData/DataProcessing/parseFileByTrial.m	/^exclude_units  =  [0,255];$/;"	v
exclude_units	lib/TrialData/DataProcessing/processNEV.m	/^exclude_units    = 255; % sort id of units to exclude$/;"	v
explVar	lib/TrialData/util/dpca/dpca.m	/^        explVar = sum(Z.^2,2);$/;"	v
expl_var	lib/TrialData/Analysis/getDPCA.m	/^expl_var            = dpca_explainedVariance(firing_rates, W, V, ...$/;"	v
ext_hull	lib/plotMWTuningCloud.m	/^        ext_hull = tuningHull_unit.glm_ext_model_velWeight{1};$/;"	v
extraOpts	lib/TrialData/util/gpfa/gpfaEngine_td.m	/^extraOpts     = assignopts(who, varargin);$/;"	v
extraOpts	lib/TrialData/util/gpfa/neuralTraj_td.m	/^        extraOpts = {extraOpts{:}, 'minVarFrac', -Inf};$/;"	v
extraOpts	lib/TrialData/util/gpfa/neuralTraj_td.m	/^extraOpts     = assignopts(who, varargin);$/;"	v
extraOpts	lib/TrialData/util/gpfa/twoStageEngine_td.m	/^extraOpts     = assignopts(who, varargin);$/;"	v
extra_bins	lib/TrialData/Tools/getRWMovements.m	/^extra_bins         =  [0 0];$/;"	v
extra_bins	lib/TrialData/Tools/splitTD.m	/^    extra_bins = abs(extra_bins);$/;"	v
extra_bins	lib/TrialData/Tools/splitTD.m	/^extra_bins         =  [0 0];$/;"	v
extra_outs	lib/TrialData/DataProcessing/loadTDfiles.m	/^    extra_outs = cell(1,length(func_calls));$/;"	v
extra_outs	lib/TrialData/DataProcessing/loadTDfiles.m	/^extra_outs = cell(length(filenames),length(varargin));$/;"	v
extra_time	lib/TrialData/DataProcessing/parseFileByTrial.m	/^    extra_time = [0 0];$/;"	v
extra_time	lib/TrialData/DataProcessing/parseFileByTrial.m	/^    extra_time = round(extra_time\/bin_size); % convert to number of bins$/;"	v
extra_time	lib/TrialData/DataProcessing/parseFileByTrial.m	/^extra_time     =  [0.2, 0.2];$/;"	v
extra_time_events	lib/TrialData/DataProcessing/parseFileByTrial.m	/^    extra_time_events = fn( strcmpi(trials.Properties.VariableUnits,'s') & ~time_event_exc_idx )/;"	v
extra_time_temp	lib/TrialData/DataProcessing/parseFileByTrial.m	/^extra_time_temp = extra_time;$/;"	v
extract_ns5_spikes	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^function out = extract_ns5_spikes(file_data,params)$/;"	f
f	lib/TrialData/DataProcessing/loadTDfiles.m	/^f = funcCall{1};$/;"	v
f	lib/TrialData/util/gpfa/plot3D_td.m	/^f = gcf;$/;"	v
f	lib/circ-toolbox/CircStat/circ_hktest.m	/^  f = 2\/(1-rr^2);$/;"	v
f	lib/circ-toolbox/CircStat/circ_ktest.m	/^  f = 1\/f; $/;"	v
f	lib/circ-toolbox/CircStat/circ_ktest.m	/^f = ((n2-1)*(n1-R1))\/((n1-1)*(n2-R2));$/;"	v
f	lib/circ-toolbox/CircStat/circ_vmrnd.m	/^      f = (1+r*z)\/(r+z);$/;"	v
fa_orthogonalize	lib/TrialData/Analysis/getPotentSpace.m	/^fa_orthogonalize   =  true;$/;"	v
fa_orthogonalize	lib/TrialData/Tools/dimReduce.m	/^fa_orthogonalize = true; % whether to orthogonalize the projections$/;"	v
fa_rotate	lib/TrialData/Tools/dimReduce.m	/^fa_rotate        = 'none';$/;"	v
fastfa	lib/TrialData/util/gpfa/fastfa.m	/^function [estParams, LL] = fastfa(X, zDim, varargin)$/;"	f
fdiv	lib/TrialData/util/gpfa/neuralTraj_td.m	/^fdiv = floor(linspace(1, N+1, numFolds+1));$/;"	v
fext	lib/TrialData/util/openNSx_td.m	/^    fext = fname(end-3:end);$/;"	v
ff	lib/TrialData/util/makeBasis_PostSpike.m	/^ff = @(x,c,dc)(cos(max(-pi,min(pi,(x-c)*pi\/dc\/2)))+1)\/2; % raised cosine basis vector$/;"	v
fh	lib/TrialData/DataProcessing/loadTDfiles.m	/^fh = functions(f);$/;"	v
field_idx	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^field_idx = 1;$/;"	v
fields	lib/NeuronTable/makeNeuronTableStarter.m	/^    fields = fieldnames(params.meta);$/;"	v
fields	lib/TrialData/DataProcessing/convertDataToTD.m	/^        fields = fieldnames(params.meta);$/;"	v
fields	lib/TrialData/DataProcessing/parseFileByTrial.m	/^        fields = fieldnames(params.meta);$/;"	v
fields	lib/circ-toolbox/CircStat/examples/parseVarArgs.m	/^        fields = fieldnames(params);$/;"	v
figurenum	lib/circ-toolbox/CircStat/circ_clust.m	/^    figurenum = 1;$/;"	v
figurenum	lib/circ-toolbox/CircStat/circ_clust.m	/^   figurenum = varargin{1}; $/;"	v
fileFullPath	lib/TrialData/util/openNEV_td.m	/^                fileFullPath = varargin{i};$/;"	v
fileFullPath	lib/TrialData/util/openNEV_td.m	/^    fileFullPath = [pathName fileName];$/;"	v
file_data	lib/TrialData/DataProcessing/convertDataToTD.m	/^        file_data = which_routine(which_file,signal_info{iFile});$/;"	v
file_data_temp	lib/TrialData/DataProcessing/convertDataToTD.m	/^        file_data_temp = file_data;$/;"	v
file_types	lib/TrialData/DataProcessing/convertDataToTD.m	/^file_types = unique({sig_data.type});$/;"	v
filename	lib/TrialData/vis_script_demo.m	/^filename = '\/Users\/mattperich\/Data\/TrialDataFiles\/Chewie_CO_FF_2016-10-07.mat';$/;"	v
filename	makePlotsTRT.m	/^    filename = {'Han_20160325_RWhold_decodingResults_run20180813.mat','Chips_20151211_RW_decodin/;"	v
filename	makePlotsTRT.m	/^    filename = {'Han_20171101_TRT_encodingResults_allModels_run20180912.mat','Chips_20170915_TRT/;"	v
fileprefix	calculateCoordCorrespondence.m	/^fileprefix = {'Han_20171101_TRT','Chips_20170915_TRT','Lando_20170802_RWTW'};$/;"	v
fileprefix	calculateDecoders.m	/^fileprefix = {'Han_20170203_COactpas','Chips_20170913_COactpas'};$/;"	v
fileprefix	calculateEncoders.m	/^fileprefix = {'Han_20171101_TRT','Chips_20170915_TRT','Lando_20170802_RWTW'};$/;"	v
filt_order	lib/TrialData/Tools/getEnvelope.m	/^filt_order = 4;$/;"	v
filter_tuning	lib/NeuronTable/comparePDClouds.m	/^filter_tuning = []; % filter by cloud width in one or both of the tables (should be either empty/;"	v
filter_tuning	lib/NeuronTable/plotWeightClouds.m	/^filter_tuning = true; % filter by cloud width in one or both of the tables (should be either emp/;"	v
firing_rates	lib/TrialData/Analysis/getDPCA.m	/^firing_rates = loops_for_fr([],[],{},trial_data,signals,max_trial_num,conditions{:});$/;"	v
firing_rates	lib/TrialData/Analysis/getDPCA.m	/^firing_rates = permute(firing_rates,[1:2,2+fliplr(1:length(conditions))]);$/;"	v
fit_bl_ref_curve	lib/TrialData/Analysis/getLearningMetrics.m	/^fit_bl_ref_curve = false;$/;"	v
fit_r2	lib/TrialData/Analysis/getPotentSpace.m	/^    fit_r2 = zeros(size(y,2),1);$/;"	v
flip_time	lib/TrialData/Tools/convBasisFunc.m	/^flip_time  = false;$/;"	v
fn	lib/NeuronTable/getNTidx.m	/^fn = varargin(1:2:length(varargin));$/;"	v
fn	lib/TrialData/DataProcessing/convertDataToTD.m	/^        fn = fieldnames(sig_data(iSig).meta);$/;"	v
fn	lib/TrialData/DataProcessing/convertDataToTD.m	/^fn = fieldnames(trial_data);$/;"	v
fn	lib/TrialData/DataProcessing/initSignalStruct.m	/^fn = fieldnames(signal_info);$/;"	v
fn	lib/TrialData/DataProcessing/loadTDfiles.m	/^        fn = fieldnames(td);$/;"	v
fn	lib/TrialData/DataProcessing/parseFileByTrial.m	/^            fn = cds.emg.Properties.VariableNames;$/;"	v
fn	lib/TrialData/DataProcessing/parseFileByTrial.m	/^            fn = fn(~strcmpi(fn,'t'));$/;"	v
fn	lib/TrialData/DataProcessing/parseFileByTrial.m	/^            fn = markersList;$/;"	v
fn	lib/TrialData/DataProcessing/parseFileByTrial.m	/^            fn = opensimList;$/;"	v
fn	lib/TrialData/DataProcessing/parseFileByTrial.m	/^    fn = fieldnames(cds_bin);$/;"	v
fn	lib/TrialData/DataProcessing/parseFileByTrial.m	/^fn = cds.trials.Properties.VariableNames;$/;"	v
fn	lib/TrialData/DataProcessing/parseFileByTrial.m	/^fn = getTDfields(trial_data,'idx');$/;"	v
fn	lib/TrialData/Plotting/visData.m	/^fn = fieldnames(trial_data);$/;"	v
fn	lib/TrialData/Tools/dupeAndShift.m	/^fn = fieldnames(trial_data);$/;"	v
fn	lib/TrialData/Tools/getDifferential.m	/^    fn = getTDfields(trial_data,'time');$/;"	v
fn	lib/TrialData/Tools/getNoiseCovar.m	/^fn = [model_name,'_residuals'];$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^            fn = fn(good_idx & ~bad_idx);$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^            fn = fn(idx);$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^        fn = fieldnames(trial_data);$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^        fn = fn(cellfun(@(x) ~isempty(x),strfind(fieldnames(trial_data),'_spikes')) & ...$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^        fn = fn(cellfun(@(x) ~isempty(x),strfind(fieldnames(trial_data),'_spikes')));$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^        fn = fn(cellfun(@(x) ~isempty(x),strfind(fieldnames(trial_data),'_unit_guide')) | ...$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^        fn = fn(cellfun(@(x) ~isempty(x),strfind(fieldnames(trial_data),'_unit_guide')));$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^        fn = fn(cellfun(@(x) ~isempty(x),strfind(fieldnames(trial_data),'idx_')));$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^        fn = fn(ismember(fn,fn_time) & ~ismember(fn,fn_neural) & ~ismember(fn,fn_unit_guides));$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^        fn = fn(~idx);$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^        fn = fn(~~neural_idx); % quick hack converts to bool$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^        fn = strrep(fn,'_spikes','')';$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^        fn = {};$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^fn = fieldnames(trial_data);$/;"	v
fn	lib/TrialData/Tools/getTDidx.m	/^fn = varargin(1:2:length(varargin));$/;"	v
fn	lib/TrialData/Tools/reorderTDfields.m	/^fn        = fieldnames(trial_data);$/;"	v
fn	lib/TrialData/Tools/subtractConditionMean.m	/^fn = getTDfields(trial_data,'time');$/;"	v
fn	lib/TrialData/util/subfcn/get_vars.m	/^fn = getTDfields(trial_data,'time');$/;"	v
fn	lib/circ-toolbox/CircStat/circ_hktest.m	/^  fn = {'A','B'};$/;"	v
fn_array	lib/TrialData/Tools/getRWMovements.m	/^fn_array = getTDfields(trial_data, 'arrays');$/;"	v
fn_array	lib/TrialData/Tools/splitTD.m	/^fn_array = getTDfields(trial_data, 'arrays');$/;"	v
fn_array	lib/TrialData/Tools/stripSpikeSorting.m	/^fn_array = getTDfields(trial_data,'arrays');$/;"	v
fn_cont	lib/TrialData/Tools/reorderTDfields.m	/^fn_cont   = getTDfields(trial_data,'cont');$/;"	v
fn_cont_new	lib/TrialData/Tools/reorderTDfields.m	/^        fn_cont_new = fn_cont_new(reorder_idx);$/;"	v
fn_cont_new	lib/TrialData/Tools/reorderTDfields.m	/^    fn_cont_new = fn_cont;$/;"	v
fn_idx	lib/TrialData/Tools/appendTDs.m	/^    fn_idx  = getTDfields(combined,'idx');$/;"	v
fn_idx	lib/TrialData/Tools/binTD.m	/^fn_idx = getTDfields(trial_data,'idx');$/;"	v
fn_idx	lib/TrialData/Tools/dupeAndShift.m	/^fn_idx = getTDfields(trial_data,'idx');$/;"	v
fn_idx	lib/TrialData/Tools/getTDfields.m	/^            fn_idx = getTDfields(trial_data,'idx');$/;"	v
fn_idx	lib/TrialData/Tools/getTDfields.m	/^        fn_idx  = getTDfields(trial_data,'idx');$/;"	v
fn_idx	lib/TrialData/Tools/removeBadTrials.m	/^    fn_idx = getTDfields(trial_data,'idx');$/;"	v
fn_idx	lib/TrialData/Tools/removeBadTrials.m	/^    fn_idx = nan_idx_names;$/;"	v
fn_idx	lib/TrialData/Tools/reorderTDfields.m	/^fn_idx    = getTDfields(trial_data,'idx');$/;"	v
fn_idx	lib/TrialData/Tools/splitTD.m	/^fn_idx = getTDfields(trial_data,'idx');$/;"	v
fn_idx	lib/TrialData/Tools/splitTD.m	/^fn_idx = setdiff(fn_idx,split_idx_name);$/;"	v
fn_idx	lib/TrialData/Tools/trialAverage.m	/^    fn_idx = getTDfields(trial_data,'idx');$/;"	v
fn_idx	lib/TrialData/Tools/trimTD.m	/^fn_idx = getTDfields(trial_data,'idx');$/;"	v
fn_master	lib/TrialData/Tools/catTDs.m	/^            fn_master = fieldnames(master_td);$/;"	v
fn_master	lib/TrialData/Tools/catTDs.m	/^            fn_master = fieldnames(varargin{iTD});$/;"	v
fn_meta	lib/TrialData/Tools/getRWMovements.m	/^fn_meta = getTDfields(trial_data,'meta');$/;"	v
fn_meta	lib/TrialData/Tools/splitTD.m	/^fn_meta = getTDfields(trial_data,'meta');$/;"	v
fn_meta	lib/TrialData/Tools/splitTD.m	/^fn_meta = setdiff(fn_meta,linked_fields);$/;"	v
fn_meta	lib/TrialData/Tools/trialAverage.m	/^fn_meta = getTDfields(trial_data,'meta');$/;"	v
fn_miss	lib/TrialData/Tools/catTDs.m	/^        fn_miss = setdiff(fn_master,fn_new);$/;"	v
fn_miss	lib/TrialData/Tools/catTDs.m	/^        fn_miss = setdiff(fn_new,fn_master);$/;"	v
fn_neural	lib/TrialData/Tools/getTDfields.m	/^        fn_neural = getTDfields(trial_data,'neural');$/;"	v
fn_neural	lib/TrialData/Tools/reorderTDfields.m	/^fn_neural = [getTDfields(trial_data,'neural'); getTDfields(trial_data,'unit_guides')];$/;"	v
fn_new	lib/TrialData/Tools/catTDs.m	/^        fn_new = fieldnames(td);$/;"	v
fn_spikes	lib/TrialData/Tools/binTD.m	/^fn_spikes = getTDfields(trial_data,'spikes');$/;"	v
fn_spikes	lib/TrialData/Tools/getTDfields.m	/^            fn_spikes = getTDfields(trial_data,'spikes');$/;"	v
fn_time	lib/TrialData/Tools/appendTDs.m	/^    fn_time = getTDfields(combined,'time');$/;"	v
fn_time	lib/TrialData/Tools/binTD.m	/^fn_time = getTDfields(trial_data,'time');$/;"	v
fn_time	lib/TrialData/Tools/dupeAndShift.m	/^    fn_time = getTDfields(trial_data,'time');$/;"	v
fn_time	lib/TrialData/Tools/dupeAndShift.m	/^fn_time = getTDfields(trial_data,'time');$/;"	v
fn_time	lib/TrialData/Tools/getRWMovements.m	/^fn_time = getTDfields(trial_data,'time');$/;"	v
fn_time	lib/TrialData/Tools/getTDfields.m	/^        fn_time = getTDfields(trial_data,'time');$/;"	v
fn_time	lib/TrialData/Tools/splitTD.m	/^fn_time = getTDfields(trial_data,'time');$/;"	v
fn_time	lib/TrialData/Tools/trialAverage.m	/^fn_time = getTDfields(trial_data,'time');$/;"	v
fn_time	lib/TrialData/Tools/trimTD.m	/^fn_time = getTDfields(trial_data,'time');$/;"	v
fn_ug	lib/TrialData/Tools/getTDfields.m	/^            fn_ug  = getTDfields(trial_data,'unit_guides');$/;"	v
fn_ug	lib/TrialData/Tools/getTDfields.m	/^        fn_ug   = getTDfields(trial_data,'unit_guides');$/;"	v
fn_unit_guides	lib/TrialData/Tools/getTDfields.m	/^        fn_unit_guides = getTDfields(trial_data,'unit_guides');$/;"	v
fname	lib/TrialData/util/gpfa/neuralTraj_td.m	/^            fname = sprintf('%s_cv%02d', fname, cvf);$/;"	v
fname	lib/TrialData/util/gpfa/neuralTraj_td.m	/^        fname = sprintf('%s\\\\%s_xDim%02d', runDir, method, xDim);$/;"	v
fname	lib/TrialData/util/gpfa/neuralTraj_td.m	/^    fname = [];$/;"	v
fname	lib/TrialData/util/openNSx_td.m	/^            fname = inputArgument;$/;"	v
fname	lib/TrialData/util/openNSx_td.m	/^        fname = which(fname);$/;"	v
fname	lib/TrialData/util/openNSx_td.m	/^    fname = [fname fext];$/;"	v
foldEval	lib/analyzeTRT.m	/^        foldEval = cell(num_folds,1);$/;"	v
foldEval	lib/analyzeTRT.m	/^    foldEval = horzcat(foldEval, model_eval{:});$/;"	v
foldEval	lib/analyzeTRT.m	/^    foldEval = makeNeuronTableStarter(td_train,struct('out_signal_names',unit_guide));$/;"	v
foldTuning	lib/analyzeTRT.m	/^        foldTuning = cell(num_folds,1);$/;"	v
foldTuning	lib/analyzeTRT.m	/^    foldTuning = vertcat(tempTuningTable{:});$/;"	v
fold_tic	lib/coordCorr.m	/^        fold_tic = tic;$/;"	v
fold_tic	lib/mwDecoders.m	/^        fold_tic = tic;$/;"	v
fold_timer	lib/analyzeTRT.m	/^            fold_timer = tic;$/;"	v
font_size	lib/TrialData/Plotting/visData.m	/^font_size          =   12;       % default font size$/;"	v
force_list	lib/TrialData/DataProcessing/parseFileByTrial.m	/^force_list = cds.force.Properties.VariableNames;$/;"	v
format	lib/circ-toolbox/CircStat/circ_plot.m	/^    format = '';$/;"	v
formatSubplot	lib/circ-toolbox/CircStat/examples/formatSubplot.m	/^function formatSubplot(handle,varargin)$/;"	f
formats	lib/circ-toolbox/CircStat/circ_plot.m	/^      formats = '-';$/;"	v
formats	lib/circ-toolbox/CircStat/circ_plot.m	/^      formats = 'o';$/;"	v
found	lib/TrialData/util/dpca/dpca_marginalize.m	/^                                found = 1;$/;"	v
found	lib/TrialData/util/dpca/dpca_marginalize.m	/^                        found = 0;$/;"	v
found_units	lib/TrialData/DataProcessing/processNEV.m	/^                found_units = 0;$/;"	v
found_units	lib/TrialData/DataProcessing/processNEV.m	/^                found_units = setdiff(found_units,exclude_units);$/;"	v
found_units	lib/TrialData/DataProcessing/processNEV.m	/^                found_units = unique(NEV.Data.Spikes.Unit(chan_idx));$/;"	v
fr	lib/TrialData/Analysis/getDPCA.m	/^            fr = cat(2,fr,temp_fr);$/;"	v
fr	lib/TrialData/Analysis/getDPCA.m	/^        fr = [];$/;"	v
fr	lib/TrialData/Analysis/getNeuronTuning.m	/^        fr = zeros(length(trial_data),size(trial_data(1).([array '_spikes']),2));$/;"	v
fr	lib/TrialData/Tools/binTD.m	/^            fr = zeros(length(t_bin)-1,size(temp,2));$/;"	v
fr	lib/TrialData/Tools/binTD.m	/^        fr = zeros(length(t_bin)-1,size(temp,2));$/;"	v
fr	lib/plotMWTuningSurfaces.m	/^            fr = get_vars(td,{model_names{modelnum},neuron_idx});$/;"	v
fr_total	lib/plotMWTuningSurfaces.m	/^            fr_total = [fr_total; fr];$/;"	v
fr_total	lib/plotMWTuningSurfaces.m	/^    fr_total = [];$/;"	v
fr_window	lib/TrialData/Tools/removeBadNeurons.m	/^fr_window       =  {};$/;"	v
frac	lib/matlab-linspecer/linspecer.m	/^    frac = .9; $/;"	v
frac	lib/matlab-linspecer/linspecer.m	/^    frac = varargin{1}; $/;"	v
fs	lib/TrialData/Tools/getEnvelope.m	/^fs = round(1\/trial_data(1).bin_size);$/;"	v
func_in	lib/TrialData/Tools/trialAverage.m	/^        func_in = cell(1,2*size(all_conds,2));$/;"	v
fv	lib/NeuronTable/getNTidx.m	/^fv = varargin(2:2:length(varargin));$/;"	v
fv	lib/TrialData/Tools/getTDidx.m	/^fv = varargin(2:2:length(varargin));$/;"	v
getCommonUnits	lib/TrialData/Tools/getCommonUnits.m	/^function trial_data = getCommonUnits(trial_data)$/;"	f
getCurvesFromCrossval	lib/getCurvesFromCrossval.m	/^function curveTable = getCurvesFromCrossval(crossvalTable)$/;"	f
getDPCA	lib/TrialData/Analysis/getDPCA.m	/^function [trial_data, dPCA_info] = getDPCA(trial_data,varargin)$/;"	f
getDifferential	lib/TrialData/Tools/getDifferential.m	/^function trial_data = getDifferential(trial_data,params)$/;"	f
getEnvelope	lib/TrialData/Tools/getEnvelope.m	/^function trial_data = getEnvelope(trial_data,params)$/;"	f
getGitInfo	lib/TrialData/util/getGitInfo.m	/^function gitInfo=getGitInfo()$/;"	f
getLearningMetrics	lib/TrialData/Analysis/getLearningMetrics.m	/^function metric = getLearningMetrics(trial_data,params)$/;"	f
getModel	lib/TrialData/Analysis/getModel.m	/^function [trial_data,model_info] = getModel(trial_data,params)$/;"	f
getModelColors	lib/getModelColors.m	/^function model_colors = getModelColors(model_alias)$/;"	f
getModelTitles	lib/getModelTitles.m	/^function model_titles = getModelTitles(model_alias)$/;"	f
getMoveOnsetAndPeak	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^function trial_data = getMoveOnsetAndPeak(trial_data,params)$/;"	f
getNTidx	lib/NeuronTable/getNTidx.m	/^function [return_idx, neuronTable] = getNTidx(neuronTable,varargin)$/;"	f
getNeuronTuning	lib/TrialData/Analysis/getNeuronTuning.m	/^function [tcs,fr,covar] = getNeuronTuning(trial_data,which_method,params)$/;"	f
getNoiseCovar	lib/TrialData/Tools/getNoiseCovar.m	/^function [noise_covar,td] = getNoiseCovar(trial_data,params)$/;"	f
getNorm	lib/TrialData/Tools/getNorm.m	/^function trial_data  = getNorm(trial_data,params)$/;"	f
getPCA	lib/TrialData/Analysis/getPCA.m	/^function [trial_data,pca_info] = getPCA(trial_data, params)$/;"	f
getPDsFromWeights	lib/NeuronTable/getPDsFromWeights.m	/^function pdTable = getPDsFromWeights(weightTable)$/;"	f
getPotentSpace	lib/TrialData/Analysis/getPotentSpace.m	/^function [trial_data,pca_info] = getPotentSpace(trial_data,params)$/;"	f
getRWMovements	lib/TrialData/Tools/getRWMovements.m	/^function rw_td = getRWMovements(trial_data,params)$/;"	f
getRWTargetDirection	lib/TrialData/Tools/getRWTargetDirection.m	/^function [ trial_data ] = getRWTargetDirection(trial_data, params  )$/;"	f
getSeq_td	lib/TrialData/util/gpfa/getSeq_td.m	/^function seq = getSeq_td(dat, binWidth, varargin)$/;"	f
getSig	lib/TrialData/Tools/getSig.m	/^function out = getSig(trial_data,signals)$/;"	f
getSpeed	lib/TrialData/Tools/getSpeed.m	/^function trial_data = getSpeed(trial_data,params)$/;"	f
getTDClassicalPDs	lib/NeuronTable/getTDClassicalPDs.m	/^function pdTable = getTDClassicalPDs(trial_data,params)$/;"	f
getTDModelWeights	lib/NeuronTable/getTDModelWeights.m	/^function weightTable = getTDModelWeights(trial_data,params)$/;"	f
getTDPDs	lib/NeuronTable/getTDPDs.m	/^function pdTable = getTDPDs(trial_data,params)$/;"	f
getTDfields	lib/TrialData/Tools/getTDfields.m	/^function fn = getTDfields(trial_data,which_type,cont_var_ref)$/;"	f
getTDidx	lib/TrialData/Tools/getTDidx.m	/^function [return_idx, trial_data] = getTDidx(trial_data,varargin)$/;"	f
getTargetDirection	lib/TrialData/Tools/getTargetDirection.m	/^function trial_data = getTargetDirection(trial_data, params)$/;"	f
getTuningCurves	lib/NeuronTable/getTuningCurves.m	/^function [curves] = getTuningCurves(trial_data,params)$/;"	f
getTuningHull	lib/NeuronTable/getTuningHull.m	/^function tuningHulls = getTuningHull(tuningTable,params)$/;"	f
getVal	lib/circ-toolbox/CircStat/circ_raotest.m	/^function [p UC] = getVal(N, U)$/;"	f
get_alpha_potent	lib/get_alpha_potent.m	/^function [alpha_potent,alpha_null,del_Jinv] = get_alpha_potent(trial_data)$/;"	f
get_master_dist	lib/TrialData/Tools/removeBadNeurons.m	/^function prctile_dist = get_master_dist()$/;"	f
get_metric	lib/TrialData/Analysis/evalModel.m	/^function metric = get_metric(varargin)$/;"	f
get_vars	lib/TrialData/util/subfcn/get_vars.m	/^function x = get_vars(trial_data, signals)$/;"	f
git_path	lib/TrialData/util/getGitInfo.m	/^git_path = curr_path(1:end-16);$/;"	v
glm_distribution	lib/TrialData/Analysis/getModel.m	/^glm_distribution     =  'poisson';   % which distribution to assume for GLM$/;"	v
glm_info	lib/analyzeTRT.m	/^    glm_info = cell(1,length(model_names)-1);$/;"	v
glm_params	lib/analyzeTRT.m	/^    glm_params = {};$/;"	v
glm_params	lib/mwEncoders.m	/^    glm_params = cell(num_models-1,1);$/;"	v
goCues	makePlotsTRT.m	/^    goCues = cat(1,decoderResults.td_test.idx_goCueTime)' + [0 trial_ends(1:end-1)];$/;"	v
goCues_time	makePlotsTRT.m	/^    goCues_time = goCues*decoderResults.td_test(1).bin_size;$/;"	v
go_cue_name	lib/TrialData/Tools/getRWMovements.m	/^go_cue_name        =  'idx_go_cue';$/;"	v
go_cues	lib/TrialData/Tools/getRWMovements.m	/^    go_cues = td.(go_cue_name);$/;"	v
good_idx	lib/TrialData/Tools/getTDfields.m	/^                good_idx = good_idx | cellfun(@(x) ~isempty(x),strfind(fn,cont_var_ref{i}));$/;"	v
good_idx	lib/TrialData/Tools/getTDfields.m	/^            good_idx = good_idx | ismember(fn,fn_spikes);$/;"	v
gpfaEngine_td	lib/TrialData/util/gpfa/gpfaEngine_td.m	/^function result = gpfaEngine_td(seqTrain, seqTest, fname, varargin)$/;"	f
h	lib/circ-toolbox/CircStat/circ_kuipertest.m	/^    h = legend('Sample 1', 'Sample 2', 'Location', 'Southeast');$/;"	v
h	lib/circ-toolbox/CircStat/circ_mtest.m	/^h = abs(circ_dist2(dir,mu)) > t;$/;"	v
h	lib/stattestPDShiftErr.m	/^h = false(size(modelcompare,1),1);$/;"	v
h	makePlotsTRT.m	/^        h = histogram(gca,allMonkeyShifts_model.velPD*180\/pi,'BinWidth',10,'DisplayStyle','stai/;"	v
h	makePlotsTRT.m	/^        h = histogram(gca,mean_shifts{end}.velPD*180\/pi,'BinWidth',10,'DisplayStyle','stair');$/;"	v
h	makePlotsTRT.m	/^    h = histogram(gca,allMonkeyShifts_real.velPD*180\/pi,'BinWidth',10,'DisplayStyle','stair');$/;"	v
h1	lib/circ-toolbox/CircStat/examples/example1.m	/^h1 = circ_medtest(alpha_rad,circ_ang2rad(25));$/;"	v
h1	lib/circ-toolbox/CircStat/examples/example1.m	/^h1 = circ_mtest(alpha_rad,0);$/;"	v
h1	lib/circ-toolbox/CircStat/examples/example1.m	/^h1 = circ_symtest(alpha_rad);$/;"	v
h2	lib/circ-toolbox/CircStat/examples/example1.m	/^h2 = circ_medtest(alpha_rad,circ_ang2rad(105));$/;"	v
h2	lib/circ-toolbox/CircStat/examples/example1.m	/^h2 = circ_mtest(alpha_rad,circ_ang2rad(90));$/;"	v
h2	lib/circ-toolbox/CircStat/examples/example1.m	/^h2 = circ_symtest(beta_rad);$/;"	v
handVel_dl	lib/get_alpha_potent.m	/^    handVel_dl = get_vars(td_dl,{'opensim',find(contains(td(1).opensim_names,'_handVel'))});$/;"	v
handVel_pm	lib/get_alpha_potent.m	/^    handVel_pm = get_vars(td_pm,{'opensim',find(contains(td(1).opensim_names,'_handVel'))});$/;"	v
hand_decoder_params	lib/mwDecoders.m	/^    hand_decoder_params = struct('model_type','linmodel','model_name','hand_decoder',...$/;"	v
hand_decoder_vaf	lib/mwDecoders.m	/^    hand_decoder_vaf = reshape(hand_decoder_vaf,num_repeats*num_folds,2);$/;"	v
hand_decoder_vaf	lib/mwDecoders.m	/^    hand_decoder_vaf = zeros(num_repeats,num_folds,2);$/;"	v
hand_idx	data_testing/hand_elbow_xcorr.m	/^    hand_idx = 1:3;$/;"	v
hand_idx	lib/mwDecoders.m	/^    hand_idx = 4:6;$/;"	v
hand_pred_pos	makePlotsTRT.m	/^        hand_pred_pos = 100*getSig(decoderResults.td_test(trialnum),{'linmodel_hand_decoder',1:3/;"	v
hand_pred_vel	makePlotsTRT.m	/^        hand_pred_vel = 100*getSig(decoderResults.td_test(trialnum),{'linmodel_hand_decoder',4:6/;"	v
hand_signals	lib/mwDecoders.m	/^    hand_signals = {'markers',hand_idx;'marker_vel',hand_idx};$/;"	v
hand_speed	data_testing/hand_elbow_xcorr.m	/^    hand_speed = sqrt(sum(hand_vel.^2,2));$/;"	v
hand_vel	data_testing/hand_elbow_xcorr.m	/^    hand_vel = get_vars(td,{'marker_vel',hand_idx});$/;"	v
hand_x_elbow	data_testing/hand_elbow_xcorr.m	/^    hand_x_elbow = xcorr(hand_speed,elbow_speed,maxlag);$/;"	v
hand_x_hand	data_testing/hand_elbow_xcorr.m	/^    hand_x_hand = xcorr(hand_speed,other_hand_speed,maxlag);$/;"	v
hasSpikesBool	lib/TrialData/util/gpfa/neuralTraj_td.m	/^    hasSpikesBool = (mean([seqTrain.y], 2) ~= 0);$/;"	v
header	lib/TrialData/DataProcessing/parseFileByTrial.m	/^    header = cds.analog{i}.Properties.VariableNames;$/;"	v
height	lib/TrialData/util/dpca/dpca_plot.m	/^height = pos(3)*1800\/1000;$/;"	v
held	lib/plotTRTTrials.m	/^held = ishold;$/;"	v
hist_scree_noise	lib/TrialData/Analysis/estimateDimensionality.m	/^hist_scree_noise    = zeros(length(hist_x)-1,size(eigenv_noise,1));$/;"	v
hist_x	lib/TrialData/Analysis/estimateDimensionality.m	/^hist_x              = 0:0.01:1;$/;"	v
hists	makePlotsTRT.m	/^    hists = figure('defaultaxesfontsize',18);$/;"	v
hold_time	lib/TrialData/Tools/getTargetDirection.m	/^hold_time       =  0.5; % s$/;"	v
hpeaks	lib/TrialData/util/makeBasis_PostSpike.m	/^hpeaks = ihprs.hpeaks;$/;"	v
hullCell	lib/NeuronTable/getTuningHull.m	/^    hullCell = [hullCell;hullRow];$/;"	v
hullCell	lib/NeuronTable/getTuningHull.m	/^hullCell = {};$/;"	v
hullRow	lib/NeuronTable/getTuningHull.m	/^        hullRow = [hullRow,clust_hull];$/;"	v
hullRow	lib/NeuronTable/getTuningHull.m	/^    hullRow = {};$/;"	v
hullTab	lib/NeuronTable/getTuningHull.m	/^hullTab = cell2table(hullCell,'VariableNames',tuningTable.Properties.VariableNames(weight_header/;"	v
hull_idx	lib/NeuronTable/comparePDClouds.m	/^    hull_idx = convhull(centered_clust);$/;"	v
hull_idx	lib/NeuronTable/getTuningHull.m	/^            hull_idx = convhull(centered_clust);$/;"	v
hull_idx	lib/NeuronTable/plotWeightClouds.m	/^    hull_idx = convhull(centered_clust);$/;"	v
hyp	makePlotsTRT.m	/^    hyp = cell(num_monks,1);$/;"	v
iDir	lib/TrialData/Analysis/getLearningMetrics.m	/^            iDir = utheta==trial_data(iTrial).target_direction;$/;"	v
iEnd	lib/TrialData/util/gpfa/getSeq_td.m	/^      iEnd   = binWidth * t \/ dataBinWidth;$/;"	v
iPh	lib/TrialData/util/gpfa/fastfa.m	/^    iPh  = diag(1.\/Ph);$/;"	v
iPhL	lib/TrialData/util/gpfa/fastfa.m	/^    iPhL = iPh * L;  $/;"	v
iStart	lib/TrialData/util/gpfa/getSeq_td.m	/^      iStart = binWidth * (t-1) \/ dataBinWidth + 1;$/;"	v
iTrial	lib/TrialData/DataProcessing/parseFileByTrial.m	/^    iTrial = idx_trials(i);$/;"	v
iVar	lib/TrialData/Tools/getTDfields.m	/^            iVar = iVar + 1;$/;"	v
iVar	lib/TrialData/Tools/getTDfields.m	/^        iVar = 0;$/;"	v
identical	lib/TrialData/util/dpca/dpca_marginalize.m	/^                            identical = 0;$/;"	v
identical	lib/TrialData/util/dpca/dpca_marginalize.m	/^                    identical = 1;$/;"	v
idp	lib/circ-toolbox/CircStat/examples/example1.m	/^idp = idx(1:60);    % factor 1: two original groups$/;"	v
idq	lib/circ-toolbox/CircStat/examples/example1.m	/^idq = idp(randperm(length(idp))); % factor 2: random assignment to groups$/;"	v
idx	lib/NeuronTable/getNTidx.m	/^            idx = idx & ismember(neuronTable.(fn{i}),fv{i});$/;"	v
idx	lib/NeuronTable/getNTidx.m	/^            idx = idx & ismember(neuronTable.(fn{i}),fv{i},'rows');$/;"	v
idx	lib/NeuronTable/getNTidx.m	/^            idx = idx & strcmpi(neuronTable.(fn{i}),fv{i});$/;"	v
idx	lib/NeuronTable/getNTidx.m	/^idx = ones(height(neuronTable),1);$/;"	v
idx	lib/NeuronTable/getNTidx.m	/^idx = strcmpi(fn,'rand');$/;"	v
idx	lib/NeuronTable/getNTidx.m	/^idx = strcmpi(fn,'range');$/;"	v
idx	lib/TrialData/Analysis/getLearningMetrics.m	/^                idx = t1:t2;$/;"	v
idx	lib/TrialData/Analysis/getLearningMetrics.m	/^            idx = t1:t2;$/;"	v
idx	lib/TrialData/Analysis/getNeuronTuning.m	/^            idx = trial_data(trial).(win{1,1})+win{1,2}:trial_data(trial).(win{2,1})+win{2,2};$/;"	v
idx	lib/TrialData/Analysis/pairwiseCorr.m	/^            idx = start_idx(i)+(1:neurons{i}(end));$/;"	v
idx	lib/TrialData/Analysis/pairwiseCorr.m	/^    idx = find(c==u(i));$/;"	v
idx	lib/TrialData/DataProcessing/convertDataToTD.m	/^                    idx = 1:size(file_data_temp.labels,1);$/;"	v
idx	lib/TrialData/DataProcessing/convertDataToTD.m	/^                    idx = ismember(file_data_temp.labels,temp_label);$/;"	v
idx	lib/TrialData/DataProcessing/convertDataToTD.m	/^                    idx = ismember(file_data_temp.labels,which_label);$/;"	v
idx	lib/TrialData/DataProcessing/convertDataToTD.m	/^                    idx = temp_label;$/;"	v
idx	lib/TrialData/DataProcessing/convertDataToTD.m	/^            idx = 1:size(file_data_temp.data,2);$/;"	v
idx	lib/TrialData/DataProcessing/convertDataToTD.m	/^    idx = find(strcmpi({sig_data.type},'emg'));$/;"	v
idx	lib/TrialData/DataProcessing/convertDataToTD.m	/^    idx = find(strcmpi({sig_data.type},'generic'));$/;"	v
idx	lib/TrialData/DataProcessing/convertDataToTD.m	/^    idx = find(strcmpi({sig_data.type},'spikes'));$/;"	v
idx	lib/TrialData/DataProcessing/convertDataToTD.m	/^    idx = find(strcmpi({sig_data.type},'trigger') | strcmpi({sig_data.type},'event'));$/;"	v
idx	lib/TrialData/DataProcessing/initSignalStruct.m	/^idx = find(cellfun(@isempty,temp));$/;"	v
idx	lib/TrialData/DataProcessing/parseFileByTrial.m	/^    idx = t_start:t_end-1;$/;"	v
idx	lib/TrialData/DataProcessing/processNEV.m	/^            idx = startsWith(nev_text,labels{iText});$/;"	v
idx	lib/TrialData/Plotting/visData.m	/^            idx = trial_data(trial).(events{iEvent});$/;"	v
idx	lib/TrialData/Plotting/visData.m	/^        idx = trial_data(trial).(events{iEvent});$/;"	v
idx	lib/TrialData/Plotting/visData.m	/^    idx = true(1,length(events));$/;"	v
idx	lib/TrialData/Tools/binTD.m	/^                idx = trial_starts_bin(trial):trial_starts_bin(trial+1)-1;$/;"	v
idx	lib/TrialData/Tools/binTD.m	/^            idx = trial_starts_bin(trial):trial_starts_bin(trial+1)-1;$/;"	v
idx	lib/TrialData/Tools/dupeAndShift.m	/^                idx = trial_starts(trial):trial_starts(trial+1)-1;$/;"	v
idx	lib/TrialData/Tools/getTDfields.m	/^            idx = false(length(fn),1);$/;"	v
idx	lib/TrialData/Tools/getTDfields.m	/^            idx = idx & ~ismember(fn,'target_center');$/;"	v
idx	lib/TrialData/Tools/getTDfields.m	/^        idx = ismember(fn,fn_time) | ismember(fn,fn_idx) | ismember(fn,fn_ug);$/;"	v
idx	lib/TrialData/Tools/getTDidx.m	/^            idx = idx & ismember([trial_data.(fn{i})],fv{i});$/;"	v
idx	lib/TrialData/Tools/getTDidx.m	/^            idx = idx & ismember({trial_data.(fn{i})},fv{i});$/;"	v
idx	lib/TrialData/Tools/getTDidx.m	/^            idx = idx & strcmpi({trial_data.(fn{i})},fv{i});$/;"	v
idx	lib/TrialData/Tools/getTDidx.m	/^idx = ones(1,length(trial_data));$/;"	v
idx	lib/TrialData/Tools/getTDidx.m	/^idx = strcmpi(fn,'boot');$/;"	v
idx	lib/TrialData/Tools/getTDidx.m	/^idx = strcmpi(fn,'rand');$/;"	v
idx	lib/TrialData/Tools/getTDidx.m	/^idx = strcmpi(fn,'range');$/;"	v
idx	lib/TrialData/Tools/stripSpikeSorting.m	/^        idx = sg(:,1) == elecs(e);$/;"	v
idx	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^            idx = find([0 diff(d < spike_threshold*sd)] > 0);$/;"	v
idx	lib/TrialData/util/subfcn/get_vars.m	/^idx = cell(1,size(signals,1));$/;"	v
idx	lib/circ-toolbox/CircKSDensity/circ_ksdensity.m	/^                    idx = floor(random('Uniform',...$/;"	v
idx	lib/circ-toolbox/CircStat/circ_cmtest.m	/^  idx = [ones(size(alpha1)); 2*ones(size(alpha2))];$/;"	v
idx	lib/circ-toolbox/CircStat/circ_cmtest.m	/^  idx = varargin{2}(:);$/;"	v
idx	lib/circ-toolbox/CircStat/circ_hktest.m	/^        idx = p_id & q_id;$/;"	v
idx	lib/circ-toolbox/CircStat/circ_kuipertest.m	/^idx = find(ktable(row,2:end)<k,1,'last');$/;"	v
idx	lib/circ-toolbox/CircStat/circ_median.m	/^    idx = find(dm==m,2);$/;"	v
idx	lib/circ-toolbox/CircStat/circ_stats.m	/^    idx = 1:numel(alpha);$/;"	v
idx	lib/circ-toolbox/CircStat/circ_stats.m	/^    idx = idx(1:1000);$/;"	v
idx	lib/circ-toolbox/CircStat/circ_stats.m	/^    idx = randperm(numel(alpha));$/;"	v
idx	lib/circ-toolbox/CircStat/circ_wwtest.m	/^    idx = [ones(size(alpha1)); 2*ones(size(alpha2))];$/;"	v
idx	lib/circ-toolbox/CircStat/circ_wwtest.m	/^    idx = [ones(size(alpha1)); ones(size(alpha2))];$/;"	v
idx	lib/circ-toolbox/CircStat/circ_wwtest.m	/^    idx = varargin{2}(:);$/;"	v
idx	lib/circ-toolbox/CircStat/examples/example2.m	/^    idx = [i* ones(1,length(ori)) j* ones(1,length(ori))];$/;"	v
idx	lib/circ-toolbox/CircStat/examples/example2.m	/^idx = [ones(1,length(ori)) 2* ones(1,length(ori)) 3* ones(1,length(ori))];$/;"	v
idx	lib/plotEncoderPR2.m	/^        idx = getNTidx(encoderResults.crossEval,'signalID',sigID);$/;"	v
idx_emg	lib/TrialData/DataProcessing/parseFileByTrial.m	/^    idx_emg = contains(emg.Properties.VariableNames,'EMG');$/;"	v
idx_empty	lib/TrialData/Tools/appendTDs.m	/^idx_empty = false(size(varargin));$/;"	v
idx_empty	lib/TrialData/Tools/catTDs.m	/^idx_empty = false(size(varargin));$/;"	v
idx_end	lib/TrialData/Tools/getRWMovements.m	/^                    idx_end = go_cues(cue+1)+extra_bins(2);$/;"	v
idx_end	lib/TrialData/Tools/getRWMovements.m	/^                    idx_end = td.(end_name)+extra_bins(2);$/;"	v
idx_end	lib/TrialData/Tools/getRWMovements.m	/^                idx_end = size(td.(fn_time{1}),1);$/;"	v
idx_end	lib/TrialData/Tools/getRWMovements.m	/^                idx_end = td.(end_name)+extra_bins(2);$/;"	v
idx_end	lib/TrialData/Tools/splitTD.m	/^                idx_end = Inf;$/;"	v
idx_end	lib/TrialData/Tools/splitTD.m	/^                idx_end = size(td.(fn_time{1}),1);$/;"	v
idx_end	lib/TrialData/Tools/splitTD.m	/^                idx_end = split_idx(idx+1)+extra_bins(2)-1;$/;"	v
idx_end	lib/TrialData/Tools/trimTD.m	/^    idx_end   = varargin{2};$/;"	v
idx_end	lib/TrialData/Tools/trimTD.m	/^idx_end   = {};$/;"	v
idx_idx	lib/TrialData/Tools/reorderTDfields.m	/^idx_idx = find(ismember(fn,fn_idx));$/;"	v
idx_idx	lib/TrialData/Tools/reorderTDfields.m	/^idx_idx = idx_idx(I);$/;"	v
idx_keep	lib/TrialData/DataProcessing/convertDataToTD.m	/^                        idx_keep = data{i} >= 0;$/;"	v
idx_keep	lib/TrialData/DataProcessing/convertDataToTD.m	/^                    idx_keep = data{i} >= 0;$/;"	v
idx_keep	lib/TrialData/DataProcessing/convertDataToTD.m	/^                    idx_keep = file_data_temp.t >= 0;$/;"	v
idx_keep	lib/TrialData/DataProcessing/convertDataToTD.m	/^                idx_keep = file_data_temp.t >= 0;$/;"	v
idx_start	lib/TrialData/Tools/getRWMovements.m	/^            idx_start = go_cues(cue)-extra_bins(1);$/;"	v
idx_start	lib/TrialData/Tools/splitTD.m	/^            idx_start = split_idx(idx)-extra_bins(1);$/;"	v
idx_start	lib/TrialData/Tools/trimTD.m	/^    idx_start = varargin{1};$/;"	v
idx_start	lib/TrialData/Tools/trimTD.m	/^idx_start = {};$/;"	v
idx_trials	lib/TrialData/DataProcessing/parseFileByTrial.m	/^    idx_trials = 1:length(trials.result);$/;"	v
idx_trials	lib/TrialData/DataProcessing/parseFileByTrial.m	/^    idx_trials = find(ismember(trials.result,trial_results));$/;"	v
idx_vals	lib/TrialData/Analysis/getDPCA.m	/^        idx_vals = cell(1,num_conds);$/;"	v
idx_vars	lib/TrialData/Tools/stretchSignals.m	/^idx_vars = getTDfields(trial_data,'idx');$/;"	v
ih0	lib/TrialData/util/makeBasis_PostSpike.m	/^    ih0 = zeros(size(ihbasis,1),1);$/;"	v
ihbas	lib/TrialData/util/makeBasis_PostSpike.m	/^        ihbas =   [ihbas; zeros(nextra,ncols)];$/;"	v
ihbas	lib/TrialData/util/makeBasis_PostSpike.m	/^        ihbas = ihbas(1:niht,:);$/;"	v
ihbas	lib/TrialData/util/makeBasis_PostSpike.m	/^ihbas = orth(ihbasis);  $/;"	v
ihbasis	lib/TrialData/util/makeBasis_PostSpike.m	/^        ihbasis = [ihbasis; zeros(nextra,ncols)];$/;"	v
ihbasis	lib/TrialData/util/makeBasis_PostSpike.m	/^        ihbasis = ihbasis(1:niht,:);$/;"	v
ihbasis	lib/TrialData/util/makeBasis_PostSpike.m	/^    ihbasis = [ih0,ihbasis];$/;"	v
ihbasis	lib/TrialData/util/makeBasis_PostSpike.m	/^ihbasis = ff(repmat(nlin(iht+b), 1, ncols), repmat(ctrs, nt, 1), db);$/;"	v
iht	lib/TrialData/util/makeBasis_PostSpike.m	/^        iht = iht0;$/;"	v
iht	lib/TrialData/util/makeBasis_PostSpike.m	/^iht = (dt:dt:mxt)';$/;"	v
ii	lib/TrialData/util/makeBasis_PostSpike.m	/^    ii = find(iht<absref);$/;"	v
inArr	lib/NeuronTable/getTDClassicalPDs.m	/^    inArr = get_vars(trial_data,in_signals(in_signal_idx,:));$/;"	v
inDir	lib/NeuronTable/getTDClassicalPDs.m	/^    inDir = atan2(inArr(:,2),inArr(:,1));$/;"	v
inDir_resamp	lib/NeuronTable/getTDClassicalPDs.m	/^                inDir_resamp = datasample(inDir,length(inDir),'Weights',sample_weight);$/;"	v
in_dims	lib/TrialData/Analysis/getPotentSpace.m	/^    in_dims = estimateDimensionality(trial_data,struct( ...$/;"	v
in_dims	lib/TrialData/Analysis/getPotentSpace.m	/^in_dims      =  [];$/;"	v
in_signal_name	lib/NeuronTable/getPDsFromWeights.m	/^        in_signal_name = extractBefore(col_title,'Weight');$/;"	v
in_signals	lib/NeuronTable/getTDClassicalPDs.m	/^in_signals      = 'vel';$/;"	v
in_signals	lib/NeuronTable/getTDClassicalPDs.m	/^in_signals = check_signals(trial_data(1),in_signals);$/;"	v
in_signals	lib/NeuronTable/getTDModelWeights.m	/^in_signals      = 'vel';$/;"	v
in_signals	lib/NeuronTable/getTDModelWeights.m	/^in_signals = check_signals(trial_data(1),in_signals);$/;"	v
in_signals	lib/NeuronTable/getTDPDs.m	/^in_signals      = 'vel';$/;"	v
in_signals	lib/NeuronTable/getTDPDs.m	/^in_signals = check_signals(trial_data(1),in_signals);$/;"	v
in_signals	lib/TrialData/Analysis/getModel.m	/^in_signals    =  {};% {'name',idx; 'name',idx};$/;"	v
in_signals	lib/TrialData/Analysis/getModel.m	/^in_signals = check_signals(trial_data(1),in_signals);$/;"	v
in_signals	lib/TrialData/Analysis/getPotentSpace.m	/^in_signals   =  [];$/;"	v
in_signals	lib/TrialData/Analysis/getPotentSpace.m	/^in_signals = check_signals(trial_data(1),in_signals);$/;"	v
in_signals	lib/TrialData/Tools/addProcessedSignal.m	/^in_signals = '';$/;"	v
in_signals	lib/TrialData/Tools/addProcessedSignal.m	/^in_signals = check_signals(trial_data,in_signals);$/;"	v
include_naming	lib/TrialData/DataProcessing/parseFileByTrial.m	/^include_naming =  false;$/;"	v
include_ts	lib/TrialData/DataProcessing/parseFileByTrial.m	/^include_ts     =  false;$/;"	v
ind	lib/TrialData/util/dpca/dpca_marginalize.m	/^        ind = {};$/;"	v
ind1	lib/TrialData/util/dpca/dpca_explainedVariance.m	/^    ind1 = bsxfun(@times, ones(dims(1:end-1)), ind1);$/;"	v
ind1	lib/TrialData/util/dpca/dpca_explainedVariance.m	/^    ind1 = ind1(:);$/;"	v
ind1	lib/TrialData/util/dpca/dpca_explainedVariance.m	/^    ind1 = reshape(ind1, size(options.numOfTrials));$/;"	v
ind1	lib/TrialData/util/dpca/dpca_explainedVariance.m	/^    ind1 = zeros(1, length(neuronsConditions));$/;"	v
ind2	lib/TrialData/util/dpca/dpca_explainedVariance.m	/^    ind2 = bsxfun(@times, ones(dims(1:end-1)), ind2);$/;"	v
ind2	lib/TrialData/util/dpca/dpca_explainedVariance.m	/^    ind2 = ind2(:);$/;"	v
ind2	lib/TrialData/util/dpca/dpca_explainedVariance.m	/^    ind2 = reshape(ind2, size(options.numOfTrials));$/;"	v
ind2	lib/TrialData/util/dpca/dpca_explainedVariance.m	/^    ind2 = zeros(1, length(neuronsConditions));$/;"	v
indM	lib/TrialData/util/dpca/dpca_marginalize.m	/^        indM = [paramsubsubsets{s} indMarg];$/;"	v
indMarg	lib/TrialData/util/dpca/dpca_marginalize.m	/^    indMarg = setdiff(params, indRest);$/;"	v
indRest	lib/TrialData/util/dpca/dpca_marginalize.m	/^    indRest = paramsubsets{subs};$/;"	v
indices	lib/analyzeTRT.m	/^        indices = crossvalind('Kfold',length(td_pm),num_folds);$/;"	v
indices	lib/coordCorr.m	/^        indices = crossvalind('Kfold',length(td),num_folds);$/;"	v
indices	lib/mwEncoders.m	/^    indices = crossvalind('Kfold',length(td_pm),num_folds);$/;"	v
indicesOfEvent	lib/TrialData/util/openNEV_td.m	/^                indicesOfEvent = find(tmp.NodeID == IDX-1);$/;"	v
inds	lib/mwDecoders.m	/^        inds = crossvalind('kfold',length(td),num_folds);$/;"	v
info_out	lib/TrialData/Tools/dimReduce.m	/^    info_out = params;$/;"	v
info_out	lib/TrialData/Tools/dimReduce.m	/^    info_out = struct('w',w,'scores',scores,'eigen',eigen,'mu',mu,'signals',{signals},'params',p/;"	v
initSignalStruct	lib/TrialData/DataProcessing/initSignalStruct.m	/^function signal_info = initSignalStruct(varargin)$/;"	f
inliers	lib/NeuronTable/comparePDClouds.m	/^    inliers = dists<prctile(dists,95);$/;"	v
inliers	lib/NeuronTable/getTuningHull.m	/^        inliers = dists<prctile(dists,CIpercentile);$/;"	v
inliers	lib/NeuronTable/plotWeightClouds.m	/^    inliers = dists<prctile(dists,95);$/;"	v
inputArgument	lib/TrialData/util/openNSx_td.m	/^        inputArgument = str2num(inputArgument);$/;"	v
inputArgument	lib/TrialData/util/openNSx_td.m	/^    inputArgument = varargin{i};$/;"	v
input_data	lib/TrialData/Tools/addProcessedSignal.m	/^    input_data = get_vars(trial_data(trial),in_signals);$/;"	v
input_var	lib/NeuronTable/getTDPDs.m	/^input_var = get_vars(trial_data(trial_idx),in_signals);$/;"	v
inter	lib/circ-toolbox/CircStat/circ_hktest.m	/^  inter = true;$/;"	v
interpomap	lib/matlab-linspecer/linspecer.m	/^function cmap = interpomap(n,cmapp)$/;"	f
invnl	lib/TrialData/util/makeBasis_PostSpike.m	/^invnl = @(x)exp(x)-1e-20; % inverse nonlinearity$/;"	v
irisPlot	lib/NeuronTable/irisPlot.m	/^function [tunedNeurons] = irisPlot( PM_pdData, DL_pdData)$/;"	f
isTuned	lib/NeuronTable/getTDClassicalPDs.m	/^    isTuned = false(num_out_signals,1);$/;"	v
isTuned	lib/NeuronTable/getTDPDs.m	/^isTuned = false(size(response_var,2),1);$/;"	v
is_continuous	lib/TrialData/Tools/splitTD.m	/^    is_continuous = false;$/;"	v
is_continuous	lib/TrialData/Tools/splitTD.m	/^    is_continuous = true;$/;"	v
iter_data	lib/TrialData/Analysis/getDPCA.m	/^        iter_data = varargin{cell_idx};$/;"	v
k	lib/TrialData/util/compute_pseudo_R2.m	/^    k = (mean(Y).^2.\/var(Y));$/;"	v
k	lib/TrialData/util/gpfa/postprocess.m	/^      k = 1;$/;"	v
k	lib/TrialData/util/gpfa/postprocess.m	/^      k = find(ws.kernSDList == kernSD);$/;"	v
k	lib/circ-toolbox/CircKSDensity/circ_ksdensity.m	/^                k = ((280*pi^0.5)\/729)^0.2;$/;"	v
k	lib/circ-toolbox/CircKSDensity/circ_ksdensity.m	/^        k = (4\/3)^0.2;$/;"	v
k	lib/circ-toolbox/CircStat/circ_kuipertest.m	/^k = n * m * (dplus + dminus);$/;"	v
k	lib/circ-toolbox/CircStat/circ_kurtosis.m	/^k = sum(w.*(cos(2*(circ_dist(alpha,theta2)))),dim).\/sum(w,dim);$/;"	v
k0	lib/circ-toolbox/CircStat/circ_kurtosis.m	/^k0 = (rho2.*cos(circ_dist(mu2,2*theta))-R.^4).\/(1-R).^2;    % (formula 2.30)$/;"	v
k_alpha	lib/circ-toolbox/CircStat/examples/example1.m	/^k_alpha = circ_kurtosis(alpha_rad);$/;"	v
k_beta	lib/circ-toolbox/CircStat/examples/example1.m	/^k_beta = circ_kurtosis(beta_rad);$/;"	v
kappa	lib/circ-toolbox/CircStat/circ_kappa.m	/^    kappa = (N-1)^3*kappa\/(N^3+N);$/;"	v
kappa	lib/circ-toolbox/CircStat/circ_kappa.m	/^    kappa = max(kappa-2*(N*kappa)^-1,0);    $/;"	v
kappa	lib/circ-toolbox/CircStat/circ_kappa.m	/^  kappa = -.4 + 1.39*R + 0.43\/(1-R);$/;"	v
kappa	lib/circ-toolbox/CircStat/circ_kappa.m	/^  kappa = 1\/(R^3 - 4*R^2 + 3*R);$/;"	v
kappa	lib/circ-toolbox/CircStat/circ_kappa.m	/^  kappa = 2*R + R^3 + 5*R^5\/6;$/;"	v
kappa	lib/circ-toolbox/CircStat/circ_vmpar.m	/^kappa = circ_kappa(r);$/;"	v
kappa	lib/circ-toolbox/CircStat/circ_vmpdf.m	/^    kappa = 1;$/;"	v
kappa	lib/circ-toolbox/CircStat/circ_vmrnd.m	/^    kappa = 1;$/;"	v
keepers	calculateDecoders.m	/^    keepers = (td(1).S1_unit_guide(:,2)~=0);$/;"	v
kernSD	lib/TrialData/Analysis/runGPFA.m	/^kernSD      =  0.03;$/;"	v
kernSD	lib/TrialData/util/gpfa/postprocess.m	/^  kernSD = [];$/;"	v
kernSDList	lib/TrialData/util/gpfa/twoStageEngine_td.m	/^kernSDList    = 20:5:80; % in msec$/;"	v
kernel	lib/TrialData/util/smooth_data.m	/^kernel = normpdf( -kernel_hl*(dt) : ...$/;"	v
kernel_SD	lib/TrialData/Tools/dimReduce.m	/^kernel_SD        = 0.05;  %   gaussian kernel s.d. for smoothing$/;"	v
kernel_SD	lib/TrialData/Tools/smoothSignals.m	/^kernel_SD       =  0.05;$/;"	v
kernel_hl	lib/TrialData/util/smooth_data.m	/^kernel_hl = ceil( 3 * kernel_SD \/ (dt) );$/;"	v
key	lib/NeuronTable/getPDsFromWeights.m	/^        key = keyTable(key_idx,:);$/;"	v
key	lib/NeuronTable/neuronAverage.m	/^    key = keyTable(key_idx,:);$/;"	v
keyTable	lib/NeuronTable/getPDsFromWeights.m	/^keyTable = unique(weightTable(:,key_cols));$/;"	v
keyTable	lib/NeuronTable/neuronAverage.m	/^keyTable = unique(neuronTable(:,keycols));$/;"	v
key_cols	lib/NeuronTable/getPDsFromWeights.m	/^key_cols = contains(weightTable.Properties.VariableDescriptions,'meta');$/;"	v
key_cols	lib/calculatePDShiftTables.m	/^        key_cols = contains(pm_tuningTable.Properties.VariableDescriptions,'meta');$/;"	v
key_cols	lib/getCurvesFromCrossval.m	/^key_cols = contains(avgTable.Properties.VariableDescriptions,'meta');$/;"	v
key_cols	lib/getCurvesFromCrossval.m	/^key_cols = contains(crossvalTable.Properties.VariableDescriptions,'meta');$/;"	v
keycols	lib/NeuronTable/neuronAverage.m	/^        keycols = ismember(1:width(neuronTable),keycols);$/;"	v
keycols	lib/NeuronTable/neuronAverage.m	/^        keycols = ismember(neuronTable.Properties.VariableNames,keycols);$/;"	v
keys	lib/NeuronTable/comparePDClouds.m	/^keys = unique(pdTable1(:,{'monkey','date','signalID'}));$/;"	v
kin	lib/TrialData/Tools/binTD.m	/^                kin = zeros(length(t_bin)-1,size(temp,2));$/;"	v
kin	lib/TrialData/Tools/binTD.m	/^            kin = zeros(length(t_bin)-1,size(temp,2));$/;"	v
kin_list	lib/TrialData/DataProcessing/parseFileByTrial.m	/^kin_list = {'t','x','y','vx','vy','ax','ay'};$/;"	v
kin_rows	lib/TrialData/Plotting/visData.m	/^kin_rows           =   3;        % how many rows for kinematic plots$/;"	v
kk	lib/circ-toolbox/CircStat/circ_hktest.m	/^kk = circ_kappa(tr\/n);$/;"	v
kk	lib/circ-toolbox/CircStat/circ_wwtest.m	/^kk = circ_kappa(rw);$/;"	v
kuiperlookup	lib/circ-toolbox/CircStat/circ_kuipertest.m	/^function [p K] = kuiperlookup(n, k)$/;"	f
l02	lib/circ-toolbox/CircStat/circ_corrcc.m	/^l02 = mean(sin(alpha2 - alpha2_bar).^2);$/;"	v
l20	lib/circ-toolbox/CircStat/circ_corrcc.m	/^l20 = mean(sin(alpha1 - alpha1_bar).^2);$/;"	v
l22	lib/circ-toolbox/CircStat/circ_corrcc.m	/^l22 = mean((sin(alpha1 - alpha1_bar).^2) .* (sin(alpha2 - alpha2_bar).^2));$/;"	v
label	lib/NeuronTable/compareTuning.m	/^        label = ['Neuron ' num2str(signalID(which_units(neuron_idx)))];$/;"	v
label	lib/NeuronTable/compareTuning.m	/^        label = ['Neuron ' signalID(which_units(neuron_idx))];$/;"	v
label	lib/plotMWTuningCloud.m	/^        label = ['Neuron ' num2str(signalIDs.signalID(neuron_idx))];$/;"	v
label	lib/plotMWTuningCloud.m	/^        label = ['Neuron ' signalIDs.signalID(neuron_idx)];$/;"	v
label	lib/plotMWTuningSurfaces.m	/^    label = ['Neuron ' num2str(td_test{1}(1).S1_unit_guide(neuron_idx,:))];$/;"	v
labelNames	lib/TrialData/DataProcessing/parseFileByTrial.m	/^            labelNames = zeros(length(sortedUnits),1);$/;"	v
labels	lib/TrialData/DataProcessing/parseFileByTrial.m	/^            labels = unique(labelNames,'stable');$/;"	v
labels	lib/TrialData/DataProcessing/processNEV.m	/^            labels = {};$/;"	v
labels	lib/TrialData/DataProcessing/processNEV.m	/^        labels = unique(nev_text);$/;"	v
labels	lib/TrialData/DataProcessing/processNSx.m	/^labels = {NSx.ElectrodesInfo.Label};$/;"	v
lambda	lib/circ-toolbox/CircStat/circ_raotest.m	/^lambda = 360\/n;$/;"	v
lasso_alpha	lib/TrialData/Analysis/getModel.m	/^lasso_alpha   =  0;$/;"	v
lasso_lambda	lib/TrialData/Analysis/getModel.m	/^lasso_lambda  =  0;$/;"	v
last_timestamp	lib/TrialData/util/remove_spike_artifacts.m	/^        last_timestamp = timestamps(end);$/;"	v
last_trial_end	makePlotsTRT.m	/^        last_trial_end = binvec(end);$/;"	v
last_trial_end	makePlotsTRT.m	/^    last_trial_end = 0;$/;"	v
layer_sizes	lib/TrialData/Analysis/getModel.m	/^layer_sizes = [10,10];$/;"	v
ldM	lib/TrialData/util/gpfa/fastfa.m	/^    ldM   = sum(log(diag(chol(MM))));$/;"	v
lenModel_params	lib/coordCorr.m	/^    lenModel_params = cell(num_models,1);$/;"	v
lenPredVAF	lib/coordCorr.m	/^    lenPredVAF = zeros(num_repeats,num_folds,num_models);$/;"	v
lin_cols	lib/NeuronTable/neuronAverage.m	/^    lin_cols = ~circ_cols;$/;"	v
lineStyles	lib/matlab-linspecer/linspecer.m	/^                lineStyles = cmap2linspecer(colorm(N));$/;"	v
lineStyles	lib/matlab-linspecer/linspecer.m	/^                lineStyles = set3(1:N)';$/;"	v
lineStyles	lib/matlab-linspecer/linspecer.m	/^            lineStyles = cmap2linspecer(colorm(N));$/;"	v
lineStyles	lib/matlab-linspecer/linspecer.m	/^            lineStyles = colorBrew2mat(colorblindSet);$/;"	v
lineStyles	lib/matlab-linspecer/linspecer.m	/^            lineStyles = colorm(N);$/;"	v
lineStyles	lib/matlab-linspecer/linspecer.m	/^            lineStyles = set1(1:N);$/;"	v
lineStyles	lib/matlab-linspecer/linspecer.m	/^            lineStyles = set1JL(1:N)';$/;"	v
lineStyles	lib/matlab-linspecer/linspecer.m	/^            lineStyles = whiteFade(N);return;$/;"	v
lineStyles	lib/matlab-linspecer/linspecer.m	/^            lineStyles = whiteFade(N,'blue');return;$/;"	v
lineStyles	lib/matlab-linspecer/linspecer.m	/^            lineStyles = whiteFade(N,'gray');return;$/;"	v
lineStyles	lib/matlab-linspecer/linspecer.m	/^            lineStyles = whiteFade(N,'green');return;$/;"	v
lineStyles	lib/matlab-linspecer/linspecer.m	/^            lineStyles = whiteFade(N,'red');return;$/;"	v
lineStyles	lib/matlab-linspecer/linspecer.m	/^            lineStyles = { [  55, 126, 184]\/255};$/;"	v
lineStyles	lib/matlab-linspecer/linspecer.m	/^    lineStyles = linspecer(128);$/;"	v
lineStyles	lib/matlab-linspecer/linspecer.m	/^    lineStyles = linspecer(128,N);$/;"	v
lineStyles	lib/matlab-linspecer/linspecer.m	/^lineStyles = cell2mat(lineStyles);$/;"	v
line_width	lib/TrialData/Plotting/visData.m	/^line_width         =   2;        % standard line width$/;"	v
linespec	lib/plotTRTTrials.m	/^linespec = 'k-';$/;"	v
linewidth	lib/plotTRTTrials.m	/^linewidth = 2;$/;"	v
linked_fields	lib/TrialData/Tools/splitTD.m	/^linked_fields      =  {}; % list of meta etc fields linked to split_idx$/;"	v
linspec	lib/NeuronTable/plotFlatTuning.m	/^    linspec = '-';$/;"	v
linspec	lib/NeuronTable/plotTuning.m	/^    linspec = '-';$/;"	v
linspecer	lib/matlab-linspecer/linspecer.m	/^function lineStyles=linspecer(N,varargin)$/;"	f
ll	lib/TrialData/util/circular_mean.m	/^  ll = mu - t;$/;"	v
ll	lib/circ-toolbox/CircStat/circ_mean.m	/^  ll = mu - t;$/;"	v
ll	lib/circ-toolbox/CircStat/circ_mtest.m	/^ll = mu - t;$/;"	v
lm_bl	lib/TrialData/Analysis/getLearningMetrics.m	/^                lm_bl = fitlm(sincos,temp_err);$/;"	v
loadTDfiles	lib/TrialData/DataProcessing/loadTDfiles.m	/^function [master_td, params] = loadTDfiles(filenames,varargin)$/;"	f
loop_me_twice	lib/TrialData/Analysis/getDPCA.m	/^function valCat = loop_me_twice(dim,valCat,val,valIdx,depthCount,varargin)$/;"	f
loops_all_the_way_down	lib/TrialData/Analysis/getDPCA.m	/^function val = loops_all_the_way_down(val,varargin)$/;"	f
loops_for_fr	lib/TrialData/Analysis/getDPCA.m	/^function [val,valIdx] = loops_for_fr(depthCount,valIdx,val,trial_data,signals,max_trial_num,vara/;"	f
low	lib/plotEncoderPR2.m	/^        low = tinv(alphalow,encoderResults.params.num_folds*encoderResults.params.num_repeats-1)/;"	v
lp_cutoff	lib/TrialData/Tools/getEnvelope.m	/^lp_cutoff = 20;$/;"	v
lw	lib/TrialData/util/gpfa/plot3D_td.m	/^lw = 2;$/;"	v
m	lib/TrialData/Tools/getEnvelope.m	/^        m = mean(getSig(trial_data,signals{1,1}),1);$/;"	v
m	lib/TrialData/Tools/getEnvelope.m	/^        m = zeros(1,size(trial_data(1).(signals{1,1}),2));$/;"	v
m	lib/TrialData/Tools/subtractConditionMean.m	/^    m = mean(cat(3,td.(fn{i})),3);$/;"	v
m	lib/circ-toolbox/CircStat/circ_axialmean.m	/^    m = 1;$/;"	v
m	lib/circ-toolbox/CircStat/circ_hktest.m	/^  m = mean(cn(:));$/;"	v
m	lib/circ-toolbox/CircStat/circ_kuipertest.m	/^m = length(alpha2(:));$/;"	v
m	lib/circ-toolbox/CircStat/circ_median.m	/^    m = min(dm);$/;"	v
m	lib/circ-toolbox/CircStat/circ_otest.m	/^m = min(min([m1;m2]));$/;"	v
m	lib/circ-toolbox/CircStat/circ_vmrnd.m	/^  m = n;$/;"	v
m1	lib/circ-toolbox/CircStat/circ_median.m	/^  m1 = sum(dd>=0,1);$/;"	v
m1	lib/circ-toolbox/CircStat/circ_otest.m	/^m1 = zeros(size(dg));$/;"	v
m2	lib/circ-toolbox/CircStat/circ_median.m	/^  m2 = sum(dd<=0,1);$/;"	v
m2	lib/circ-toolbox/CircStat/circ_otest.m	/^m2 = zeros(size(dg));$/;"	v
mag	lib/TrialData/util/orthogonalize.m	/^    mag   = sqrt(L' * L);$/;"	v
makeBasis_PostSpike	lib/TrialData/util/makeBasis_PostSpike.m	/^function [iht, ihbas, ihbasis] = makeBasis_PostSpike(ihprs,dt,iht0)$/;"	f
makeNeuronTableStarter	lib/NeuronTable/makeNeuronTableStarter.m	/^function neuronTable = makeNeuronTableStarter(trial_data,params)$/;"	f
map	lib/TrialData/util/dpca/dpca_plot.m	/^map = tril(a,-1)+triu(b);$/;"	v
margNums	lib/TrialData/util/dpca/dpca_marginalize.m	/^    margNums = 1:length(options.combinedParams);$/;"	v
margNums	lib/TrialData/util/dpca/dpca_marginalize.m	/^    margNums = [];$/;"	v
margNums	lib/TrialData/util/dpca/dpca_marginalize.m	/^margNums = 1:length(YY);$/;"	v
margRowSeq	lib/TrialData/util/dpca/dpca_plot.m	/^        margRowSeq = 1:max(options.whichMarg);$/;"	v
margRowSeq	lib/TrialData/util/dpca/dpca_plot.m	/^        margRowSeq = [options.timeMarginalization setdiff(1:max(options.whichMarg), options.time/;"	v
marg_colors	lib/TrialData/Analysis/getDPCA.m	/^marg_colors     = [150 150 150; 23 100 171; 187 20 25; 114 97 171]\/256; % blue, red, grey, purp/;"	v
marg_names	lib/TrialData/Analysis/getDPCA.m	/^marg_names      = {'time','target','learning','target\/learning interaction'};$/;"	v
margsToAdd	lib/TrialData/util/dpca/dpca_marginalize.m	/^                    margsToAdd = [margsToAdd k];$/;"	v
margsToAdd	lib/TrialData/util/dpca/dpca_marginalize.m	/^        margsToAdd = [];$/;"	v
marker_analog_idx	lib/TrialData/DataProcessing/parseFileByTrial.m	/^        marker_analog_idx = i;$/;"	v
marker_analog_idx	lib/TrialData/DataProcessing/parseFileByTrial.m	/^marker_analog_idx = 0;$/;"	v
marker_data	lib/TrialData/DataProcessing/parseFileByTrial.m	/^marker_data    =  [];$/;"	v
marker_frame	data_testing/testCoordFrameLinearity.m	/^    marker_frame = get_vars(td,{'markers_pca',1:5;'marker_vel_pca',1:5});$/;"	v
marker_names	lib/TrialData/DataProcessing/parseFileByTrial.m	/^    marker_names = markers.Properties.VariableNames;$/;"	v
marker_postfix	lib/TrialData/DataProcessing/parseFileByTrial.m	/^    marker_postfix = {'_x','_y','_z'};$/;"	v
markername	lib/TrialData/Tools/addCoordPoint2TD.m	/^        markername = 'Marker_1';$/;"	v
markername	lib/TrialData/Tools/addCoordPoint2TD.m	/^        markername = 'Pronation_Pt1';$/;"	v
markername	lib/coordCorr.m	/^            markername = 'Marker_1';$/;"	v
markername	lib/coordCorr.m	/^            markername = 'Pronation_Pt1';$/;"	v
markername	lib/mwEncoders.m	/^            markername = 'Marker_1';$/;"	v
markername	lib/mwEncoders.m	/^            markername = 'Pronation_Pt1';$/;"	v
markers	lib/TrialData/DataProcessing/parseFileByTrial.m	/^    markers = markers(:,2:end); % get rid of frames column$/;"	v
markersList	lib/TrialData/DataProcessing/parseFileByTrial.m	/^    markersList = new_markers.Properties.VariableNames;$/;"	v
markerstyle	makePlotsTRT.m	/^    markerstyle = 'oo';$/;"	v
master_fn	lib/TrialData/DataProcessing/loadTDfiles.m	/^        master_fn = fieldnames(master_td);$/;"	v
master_idx	lib/TrialData/Tools/reorderTDfields.m	/^master_idx = [meta_idx; idx_idx; cont_idx; neural_idx];$/;"	v
master_sg	lib/TrialData/Tools/getCommonUnits.m	/^            master_sg = setdiff(master_sg, bad_idx, 'rows');$/;"	v
master_sg	lib/TrialData/Tools/getCommonUnits.m	/^    master_sg = trial_data(1).([array '_unit_guide']);$/;"	v
master_td	lib/TrialData/DataProcessing/loadTDfiles.m	/^        master_td = [master_td, td];$/;"	v
master_td	lib/TrialData/DataProcessing/loadTDfiles.m	/^master_td = reorderTDfields(master_td);$/;"	v
master_td	lib/TrialData/Tools/catTDs.m	/^        master_td = [master_td,td];$/;"	v
master_td	lib/TrialData/Tools/catTDs.m	/^    master_td = [];$/;"	v
master_td	lib/TrialData/Tools/catTDs.m	/^    master_td = varargin{1};$/;"	v
matPath	lib/TrialData/util/openNEV_td.m	/^matPath = [fileFullPath(1:end-4) '.mat'];$/;"	v
maxFR	lib/NeuronTable/compareTuning.m	/^    maxFR = repmat(maxFR,height(curves{1}),1);$/;"	v
maxFR	lib/NeuronTable/compareTuning.m	/^maxFR = max(cell2mat(cellfun(@(x) x.([move_corr 'CurveCIhigh']),reshape(curves,1,[]),'UniformOut/;"	v
maxNSPChannels	lib/TrialData/util/openNSx_td.m	/^maxNSPChannels  = 128;$/;"	v
max_shift	lib/TrialData/Tools/dupeAndShift.m	/^max_shift = max(abs(the_shifts));$/;"	v
max_trial_num	lib/TrialData/Analysis/getDPCA.m	/^max_trial_num = max(loops_all_the_way_down(0,conditions{:}));$/;"	v
maxang	lib/circ-toolbox/CircStat/circ_samplecdf.m	/^    maxang = phis(j+1);$/;"	v
maxlag	data_testing/hand_elbow_xcorr.m	/^    maxlag = 10;$/;"	v
md	lib/circ-toolbox/CircStat/circ_median.m	/^    md = mod(md+pi,2*pi);$/;"	v
md	lib/circ-toolbox/CircStat/circ_median.m	/^  md = circ_mean(beta(idx));$/;"	v
md	lib/circ-toolbox/CircStat/circ_symtest.m	/^md = circ_median(alpha);$/;"	v
meanTable_circ	lib/NeuronTable/neuronAverage.m	/^    meanTable_circ = varfun(@circ_mean,dataTable(:,circ_cols));$/;"	v
meanTable_lin	lib/NeuronTable/neuronAverage.m	/^    meanTable_lin = varfun(@mean,dataTable(:,lin_cols));$/;"	v
meanY	lib/TrialData/util/compute_vaf.m	/^    meanY = mean(Y,1);$/;"	v
mean_append	lib/NeuronTable/getPDsFromWeights.m	/^    mean_append = zeros(height(pdTable),1);$/;"	v
mean_corr	makePlotsTRT.m	/^        mean_corr = mean(tuning_corr);$/;"	v
mean_err	makePlotsTRT.m	/^            mean_err = mean(err{monkeynum}.(models_to_plot{modelnum}));$/;"	v
mean_pR2	makePlotsTRT.m	/^            mean_pR2 = mean(avgEval.(sprintf('glm_%s_model_eval',models_to_plot{modelnum})));$/;"	v
mean_shifts	makePlotsTRT.m	/^        mean_shifts = cell(num_model_plots,1);$/;"	v
mean_shifts	makePlotsTRT.m	/^        mean_shifts = cell(num_models,1);$/;"	v
means	lib/NeuronTable/comparePDClouds.m	/^    means = [circ_mean(pdTable_unit1.([move_corr 'PD'])) circ_mean(pdTable_unit2.([move_corr 'PD/;"	v
means	lib/NeuronTable/getTuningHull.m	/^        means = mean(clust);$/;"	v
means	lib/NeuronTable/plotWeightClouds.m	/^    means = mean(clust);$/;"	v
med	lib/circ-toolbox/CircStat/circ_cmtest.m	/^  med = NaN;$/;"	v
med	lib/circ-toolbox/CircStat/circ_cmtest.m	/^med = circ_median(alpha);$/;"	v
med	lib/circ-toolbox/CircStat/circ_median.m	/^  med = med';$/;"	v
med	lib/circ-toolbox/CircStat/circ_median.m	/^med = NaN(M(3-dim),1);$/;"	v
meta_header_idx	lib/NeuronTable/getTuningHull.m	/^meta_header_idx = contains(tuningTable.Properties.VariableDescriptions,'meta');$/;"	v
meta_idx	lib/TrialData/Tools/reorderTDfields.m	/^meta_idx = find(~(ismember(fn,fn_idx) | ismember(fn,fn_neural) | ismember(fn,fn_cont)));$/;"	v
meta_vars	lib/TrialData/Tools/getTDfields.m	/^meta_vars = {'monkey','date','task','perturbation','trial_id','target_direction','target_center'/;"	v
metafield	lib/NeuronTable/makeNeuronTableStarter.m	/^            metafield = {metafield};$/;"	v
metafield	lib/NeuronTable/makeNeuronTableStarter.m	/^        metafield = params.meta.(fields{fn});$/;"	v
method	lib/TrialData/Analysis/pairwiseCorr.m	/^method           =  @corr;$/;"	v
method	lib/TrialData/Analysis/runGPFA.m	/^method      =  'gpfa';$/;"	v
method	lib/TrialData/Tools/Tests/coord_test.m	/^    method = {'opensim','markers'};$/;"	v
method	lib/TrialData/Tools/addCoordPoint2TD.m	/^method = 'markers';$/;"	v
method	lib/TrialData/Tools/addFiringRates.m	/^method = 'averageInBin';$/;"	v
method	lib/TrialData/util/gpfa/neuralTraj_td.m	/^method        = 'gpfa';$/;"	v
method	lib/circ-toolbox/CircKSDensity/circ_ksdensity.m	/^        method = 'msni';$/;"	v
metric	lib/TrialData/Analysis/evalModel.m	/^            metric = compute_pseudo_R2(y_test(bs),y_fit(bs),mean(y_test));$/;"	v
metric	lib/TrialData/Analysis/evalModel.m	/^            metric = compute_r2(y_test(bs),y_fit(bs));$/;"	v
metric	lib/TrialData/Analysis/evalModel.m	/^            metric = compute_rel_pseudo_R2(y_test(bs),y_fit(bs),y_fit2(bs));$/;"	v
metric	lib/TrialData/Analysis/evalModel.m	/^            metric = compute_vaf(y_test(bs),y_fit(bs));$/;"	v
metric	lib/TrialData/Analysis/evalModel.m	/^        metric = metric(:,1);$/;"	v
metric	lib/TrialData/Analysis/evalModel.m	/^        metric = squeeze(metric(:,:,1));$/;"	v
metric	lib/TrialData/Analysis/evalModel.m	/^    metric = NaN(length(trial_idx)-1,sum(cellfun(@(x) length(x),out_signals(:,2))),2);$/;"	v
metric	lib/TrialData/Analysis/evalModel.m	/^    metric = NaN(sum(cellfun(@(x) length(x),out_signals(:,2))),2);$/;"	v
metric	lib/TrialData/Analysis/evalModel.m	/^    metric = prctile(metric,[2.5,97.5]);$/;"	v
metric	lib/TrialData/Analysis/getLearningMetrics.m	/^        metric = -metric;$/;"	v
metric	lib/TrialData/Analysis/getLearningMetrics.m	/^metric = zeros(length(trial_data),1);$/;"	v
minL	lib/TrialData/util/dpca/dpca_plot.m	/^            minL = min(length(options.whichMarg), size(options.componentsSignif,1));$/;"	v
minVarFrac	lib/TrialData/util/gpfa/fastfa.m	/^  minVarFrac = 0.01;$/;"	v
min_ds	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^min_ds        =  1.9;$/;"	v
min_fr	lib/TrialData/Tools/removeBadNeurons.m	/^min_fr          =  0;$/;"	v
minang	lib/circ-toolbox/CircStat/circ_samplecdf.m	/^    minang = phis(j);$/;"	v
mindist	lib/circ-toolbox/CircStat/circ_clust.m	/^    mindist = min(mudist(tril(ones(size(mudist)),-1)==1));$/;"	v
minsize	data_testing/hand_elbow_xcorr.m	/^    minsize = min(length(td_pm),length(td_dl));$/;"	v
minsize	data_testing/testCoordFrameLinearity.m	/^    minsize = min(length(td_pm),length(td_dl));$/;"	v
minsize	lib/get_alpha_potent.m	/^    minsize = min(length(td_pm),length(td_dl));$/;"	v
minsize	lib/mwEncoders.m	/^    minsize = min(length(td_pm),length(td_dl));$/;"	v
minusPi2Pi	lib/TrialData/util/minusPi2Pi.m	/^function out = minusPi2Pi(in)$/;"	f
moddepthArr	lib/NeuronTable/getTDPDs.m	/^moddepthArr = zeros(size(response_var,2),1);$/;"	v
moddepthCIArr	lib/NeuronTable/getTDPDs.m	/^moddepthCIArr = zeros(size(response_var,2),2);$/;"	v
moddepthCI_append	lib/NeuronTable/getPDsFromWeights.m	/^    moddepthCI_append = zeros(height(pdTable),2);$/;"	v
moddepth_append	lib/NeuronTable/getPDsFromWeights.m	/^    moddepth_append = zeros(height(pdTable),1);$/;"	v
moddepths	lib/NeuronTable/getTDPDs.m	/^            moddepths = sqrt(sum(boot_coef(:,(2*in_signal_idx):(2*in_signal_idx+1)).^2,2));$/;"	v
model	data_testing/testCoordFrameLinearity.m	/^    model = marker_frame\\muscle_frame;$/;"	v
modelIDs	lib/NeuronTable/plotWeightClouds.m	/^modelIDs = unique(tuningTable(:,{'monkey','date','signalID'}));$/;"	v
model_alias	lib/getModelColors.m	/^        model_alias = {model_alias};$/;"	v
model_alias	lib/getModelTitles.m	/^        model_alias = {model_alias};$/;"	v
model_aliases	calculateEncoders.m	/^model_aliases = {'ext','ego','joint','musc','handelbow','ego_handelbow'};$/;"	v
model_aliases	lib/calculateEncoderPDShiftErr.m	/^    model_aliases = encoderResults.params.model_aliases;$/;"	v
model_aliases	lib/coordCorr.m	/^    model_aliases = {'ext','handelbow','musc'};$/;"	v
model_aliases	lib/mwEncoders.m	/^    model_aliases = {'ext','ego','musc','handelbow'};$/;"	v
model_colors	lib/getModelColors.m	/^    model_colors = zeros(length(model_alias),3);$/;"	v
model_colors	makePlotsTRT.m	/^    model_colors = getModelColors(models_to_plot);$/;"	v
model_eval	lib/NeuronTable/getTDModelWeights.m	/^    model_eval = squeeze(evalModel(td_temp,eval_params))';$/;"	v
model_eval	lib/analyzeTRT.m	/^    model_eval = cell(1,length(model_names)-1);$/;"	v
model_eval_metric	lib/analyzeTRT.m	/^    model_eval_metric = 'pr2';$/;"	v
model_eval_table	lib/NeuronTable/getTDModelWeights.m	/^    model_eval_table = array2table(model_eval,'VariableNames',strcat({prefix},'eval'));$/;"	v
model_info	lib/TrialData/Analysis/getModel.m	/^        model_info = struct( ...$/;"	v
model_info	lib/TrialData/Analysis/getModel.m	/^        model_info = struct(...$/;"	v
model_name	lib/TrialData/Analysis/evalModel.m	/^model_name       =  [];$/;"	v
model_name	lib/TrialData/Analysis/getModel.m	/^model_name    =  'default';$/;"	v
model_name	lib/TrialData/Tools/getNoiseCovar.m	/^model_name      =  'default';$/;"	v
model_names	lib/analyzeTRT.m	/^    model_names = {};$/;"	v
model_names	lib/calculatePDShiftTables.m	/^        model_names = encoderResults.params.model_names;$/;"	v
model_names	lib/calculatePDShiftTables.m	/^        model_names = {model_names};$/;"	v
model_names	lib/coordCorr.m	/^    model_names = strcat(model_type,'_',model_aliases,'_model');$/;"	v
model_names	lib/mwEncoders.m	/^    model_names = [strcat(model_type,'_',model_aliases,'_model') {neural_signals}];$/;"	v
model_names	lib/plotMWTuningSurfaces.m	/^    model_names = [strcat(model_type,'_',model_aliases,'_model') {'S1_FR'}];$/;"	v
model_params	lib/NeuronTable/getTDModelWeights.m	/^model_params = struct('model_type',model_type,'model_name','temp',...$/;"	v
model_spacing	makePlotsTRT.m	/^    model_spacing = mode(diff(template_x));$/;"	v
model_titles	lib/getModelTitles.m	/^    model_titles = cell(length(model_alias),1);$/;"	v
model_titles	lib/plotMWTuningSurfaces.m	/^    model_titles = cell(1,num_models);$/;"	v
model_titles	makePlotsTRT.m	/^    model_titles = getModelTitles(models_to_plot);$/;"	v
model_type	lib/NeuronTable/getTDModelWeights.m	/^model_type = 'glm';$/;"	v
model_type	lib/TrialData/Analysis/evalModel.m	/^model_type       =  '';$/;"	v
model_type	lib/TrialData/Analysis/getModel.m	/^model_type    =  '';$/;"	v
model_type	lib/coordCorr.m	/^    model_type = 'linmodel';$/;"	v
model_type	lib/mwEncoders.m	/^    model_type = 'glm';$/;"	v
model_type	lib/plotMWTuningSurfaces.m	/^    model_type = 'glm';$/;"	v
modeled_signals	lib/TrialData/Tools/getNoiseCovar.m	/^modeled_signals =  {};$/;"	v
modeled_signals	lib/TrialData/Tools/getNoiseCovar.m	/^modeled_signals = check_signals(trial_data(1),modeled_signals);$/;"	v
models_to_plot	makePlotsTRT.m	/^    models_to_plot = encoderResults.params.model_aliases;$/;"	v
models_to_plot	makePlotsTRT.m	/^    models_to_plot = model_aliases;$/;"	v
models_to_plot	makePlotsTRT.m	/^    models_to_plot = {'ego','ext','joint','musc','handelbow'};$/;"	v
models_to_plot	makePlotsTRT.m	/^    models_to_plot = {'ext','ego','handelbow','musc'};$/;"	v
modifiedTime	lib/TrialData/util/openNSx_td.m	/^        modifiedTime = 1;$/;"	v
monk_colors	makePlotsTRT.m	/^    monk_colors = linspecer(2);$/;"	v
monk_x	makePlotsTRT.m	/^    monk_x = (2:3:((num_monks-1)*3+2))\/10;$/;"	v
monkey	lib/NeuronTable/makeNeuronTableStarter.m	/^monkey = repmat({trial_data(1).monkey},tab_height,1);$/;"	v
monkey_colors	makePlotsTRT.m	/^    monkey_colors = [186, 20, 130;...$/;"	v
monkey_shifts	makePlotsTRT.m	/^    monkey_shifts = cell(num_monks,num_model_plots);$/;"	v
monkeynum	makePlotsTRT.m	/^    monkeynum = 2;$/;"	v
moreComponents	lib/TrialData/util/dpca/dpca_plot.m	/^            moreComponents = find(options.whichMarg == margRowSeq(i), 3);$/;"	v
moreComponents	lib/TrialData/util/dpca/dpca_plot.m	/^            moreComponents = find(options.whichMarg(1:minL) == margRowSeq(i) & ...$/;"	v
move_cor	lib/NeuronTable/plotFlatTuning.m	/^move_cor = 'vel';$/;"	v
move_cor	lib/NeuronTable/plotTuning.m	/^move_cor = 'vel';$/;"	v
move_corr	lib/NeuronTable/comparePDClouds.m	/^move_corr      =  'vel';$/;"	v
move_corr	lib/NeuronTable/comparePDs.m	/^move_corr      =  '';$/;"	v
move_corr	lib/NeuronTable/compareTuning.m	/^move_corr = 'vel';$/;"	v
move_corr	lib/NeuronTable/getTDPDs.m	/^        move_corr = in_signals{in_signal_idx,1};$/;"	v
move_corr	lib/NeuronTable/getTuningCurves.m	/^move_corr      =  'vel';$/;"	v
move_corr	lib/NeuronTable/getTuningCurves.m	/^move_corr = check_signals(trial_data(1),move_corr);$/;"	v
move_corr	lib/NeuronTable/plotWeightClouds.m	/^move_corr      =  'vel';$/;"	v
move_inds	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^    move_inds = false(size(s));$/;"	v
move_var	lib/NeuronTable/getTuningCurves.m	/^move_var = get_vars(trial_data,move_corr);$/;"	v
moving_average	lib/TrialData/util/moving_average.m	/^function data_mvavg = moving_average(data,bins)$/;"	f
mp	lib/circ-toolbox/CircStat/circ_moment.m	/^mp = cbar + 1i*sbar;$/;"	v
mr	lib/circ-toolbox/CircStat/circ_plot.m	/^      mr = max(2*r\/sum(r));$/;"	v
mr	lib/circ-toolbox/CircStat/circ_plot.m	/^      mr = max(r);$/;"	v
ms	lib/circ-toolbox/CircStat/circ_clust.m	/^    ms = 10;$/;"	v
ms	lib/circ-toolbox/CircStat/circ_clust.m	/^   ms = varargin{3}; $/;"	v
ms_1	lib/circ-toolbox/CircStat/circ_hktest.m	/^  ms_1 = eff_1 \/ df_1;$/;"	v
ms_2	lib/circ-toolbox/CircStat/circ_hktest.m	/^  ms_2 = eff_2 \/ df_2;$/;"	v
ms_i	lib/circ-toolbox/CircStat/circ_hktest.m	/^    ms_i = eff_i\/df_i;$/;"	v
ms_r	lib/circ-toolbox/CircStat/circ_hktest.m	/^    ms_r = eff_r \/ df_r;   $/;"	v
ms_r	lib/circ-toolbox/CircStat/circ_hktest.m	/^    ms_r = eff_r \/ df_r;$/;"	v
mu	lib/TrialData/Tools/dimReduce.m	/^                mu = mean(get_vars(trial_data,signals),1);$/;"	v
mu	lib/TrialData/Tools/dimReduce.m	/^                mu = zeros(1,sum(n_signals));$/;"	v
mu	lib/TrialData/Tools/dimReduce.m	/^            mu = zeros(1,size(data,2));$/;"	v
mu	lib/TrialData/Tools/dimReduce.m	/^            mu = zeros(1,sum(n_signals));$/;"	v
mu	lib/TrialData/Tools/dimReduce.m	/^mu                = [];    % mu is the mean from fitting, only filled if info_out is passed in$/;"	v
mu	lib/TrialData/util/circular_mean.m	/^mu = angle(r);$/;"	v
mu	lib/circ-toolbox/CircKSDensity/circ_ksdensity.m	/^mu = length(ti)\/2 + 1;$/;"	v
mu	lib/circ-toolbox/CircStat/circ_axialmean.m	/^mu = angle(zbarm)\/m;$/;"	v
mu	lib/circ-toolbox/CircStat/circ_clust.m	/^    mu = NaN(n,1);$/;"	v
mu	lib/circ-toolbox/CircStat/circ_clust.m	/^mu = NaN(num_unique,1);$/;"	v
mu	lib/circ-toolbox/CircStat/circ_mean.m	/^mu = angle(r);$/;"	v
mu	lib/circ-toolbox/CircStat/circ_mtest.m	/^mu = circ_mean(alpha,w);$/;"	v
mu	lib/circ-toolbox/CircStat/circ_vtest.m	/^mu = circ_mean(alpha,w);$/;"	v
mu_in	lib/TrialData/Analysis/getPotentSpace.m	/^mu_in = pca_info_in.mu;$/;"	v
mu_out	lib/TrialData/Analysis/getPotentSpace.m	/^mu_out = pca_info_out.mu;$/;"	v
mu_p	lib/circ-toolbox/CircStat/circ_moment.m	/^mu_p = angle(mp);$/;"	v
mudiff	lib/plotEncoderPR2.m	/^        mudiff = mean(diffstat(idx));$/;"	v
mudist	lib/circ-toolbox/CircStat/circ_clust.m	/^    mudist = abs(circ_dist2(mu));$/;"	v
muscVel_dl	lib/get_alpha_potent.m	/^    muscVel_dl = get_vars(td_dl,{'opensim_muscVel_pca',1:5});$/;"	v
muscVel_pm	lib/get_alpha_potent.m	/^    muscVel_pm = get_vars(td_pm,{'opensim_muscVel_pca',1:5});$/;"	v
musc_hull	lib/plotMWTuningCloud.m	/^        musc_hull = tuningHull_unit.glm_musc_model_velWeight{1};$/;"	v
musc_len_idx	lib/coordCorr.m	/^    musc_len_idx = find(contains(td(1).opensim_names,'_len'));$/;"	v
musc_vel_idx	lib/coordCorr.m	/^    musc_vel_idx = find(contains(td(1).opensim_names,'_muscVel'));$/;"	v
muscle_frame	data_testing/testCoordFrameLinearity.m	/^    muscle_frame = get_vars(td,{'opensim_len_pca',1:5;'opensim_muscVel_pca',1:5});$/;"	v
muscle_pred	data_testing/testCoordFrameLinearity.m	/^    muscle_pred = marker_frame*model;$/;"	v
muscle_resid	data_testing/testCoordFrameLinearity.m	/^    muscle_resid = muscle_frame-muscle_pred;$/;"	v
mvt_peak	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^        mvt_peak = find(peaks & (1:length(peaks))' > td(trial).(start_idx)+peak_idx_offset & ds /;"	v
mw	lib/circ-toolbox/CircStat/examples/example2.m	/^  mw = max(w(j,:));$/;"	v
mwDecoders	lib/mwDecoders.m	/^function results = mwDecoders(td,params)$/;"	f
mwEncoders	lib/mwEncoders.m	/^function results = mwEncoders(td,params)$/;"	f
mxt	lib/TrialData/util/makeBasis_PostSpike.m	/^mxt = invnl(yrnge(2)+2*db)-b;  % maximum time bin$/;"	v
myFig	lib/TrialData/util/dpca/dpca_plot.m	/^myFig = figure('Position', [0 0 1800 1000]);$/;"	v
n	lib/NeuronTable/getNTidx.m	/^        n = 1;$/;"	v
n	lib/NeuronTable/getNTidx.m	/^        n = length(return_idx);$/;"	v
n	lib/NeuronTable/getNTidx.m	/^    n = fv{idx};$/;"	v
n	lib/TrialData/Tools/getTDidx.m	/^        n = 1;$/;"	v
n	lib/TrialData/Tools/getTDidx.m	/^        n = length(return_idx);$/;"	v
n	lib/TrialData/Tools/getTDidx.m	/^    n = fv{idx};$/;"	v
n	lib/TrialData/Tools/getTDidx.m	/^n = NaN; % use this as a flag$/;"	v
n	lib/circ-toolbox/CircStat/circ_clust.m	/^    n = 20;$/;"	v
n	lib/circ-toolbox/CircStat/circ_clust.m	/^n = length(alpha);$/;"	v
n	lib/circ-toolbox/CircStat/circ_cmtest.m	/^n = zeros(s,1); m = n;$/;"	v
n	lib/circ-toolbox/CircStat/circ_confmean.m	/^n = sum(w,dim);$/;"	v
n	lib/circ-toolbox/CircStat/circ_corrcc.m	/^n = length(alpha1);$/;"	v
n	lib/circ-toolbox/CircStat/circ_corrcl.m	/^n = length(alpha);$/;"	v
n	lib/circ-toolbox/CircStat/circ_hktest.m	/^n = length(alpha);$/;"	v
n	lib/circ-toolbox/CircStat/circ_kuipertest.m	/^n = length(alpha1(:));$/;"	v
n	lib/circ-toolbox/CircStat/circ_median.m	/^  n = size(beta,1);$/;"	v
n	lib/circ-toolbox/CircStat/circ_medtest.m	/^n = length(alpha);$/;"	v
n	lib/circ-toolbox/CircStat/circ_moment.m	/^n = size(alpha,dim);$/;"	v
n	lib/circ-toolbox/CircStat/circ_otest.m	/^n = sum(w);$/;"	v
n	lib/circ-toolbox/CircStat/circ_raotest.m	/^n = length(alpha);$/;"	v
n	lib/circ-toolbox/CircStat/circ_rtest.m	/^  n = length(alpha);$/;"	v
n	lib/circ-toolbox/CircStat/circ_rtest.m	/^  n = sum(w);$/;"	v
n	lib/circ-toolbox/CircStat/circ_vmrnd.m	/^    n = 10;$/;"	v
n	lib/circ-toolbox/CircStat/circ_vmrnd.m	/^  n = n(1) * n(2);$/;"	v
n	lib/circ-toolbox/CircStat/circ_vtest.m	/^n = sum(w);$/;"	v
n	lib/circ-toolbox/CircStat/circ_wwtest.m	/^n = sum(w);$/;"	v
n	lib/matlab-linspecer/linspecer.m	/^    n = varargin{1};$/;"	v
n	lib/matlab-linspecer/linspecer.m	/^n = 100;$/;"	v
n1	lib/circ-toolbox/CircStat/circ_ktest.m	/^n1 = length(alpha1);$/;"	v
n1	lib/circ-toolbox/CircStat/circ_medtest.m	/^n1 = sum(d<0);$/;"	v
n2	lib/circ-toolbox/CircStat/circ_ktest.m	/^n2 = length(alpha2);$/;"	v
n2	lib/circ-toolbox/CircStat/circ_medtest.m	/^n2 = sum(d>0);$/;"	v
nPlotMax	lib/TrialData/util/gpfa/plot3D_td.m	/^nPlotMax   = 20;$/;"	v
n_bins	lib/TrialData/subspace_demo.m	/^n_bins = 3;$/;"	v
n_poles	lib/TrialData/DataProcessing/parseFileByTrial.m	/^n_poles     =  4;  % for EMG butterworth filter$/;"	v
n_poles	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^n_poles         = 0;   % for high pass filter on threshold (0 means no filter)$/;"	v
n_rows	lib/NeuronTable/compareTuning.m	/^n_rows = ceil(sqrt(length(which_units)+1));$/;"	v
n_signals	lib/TrialData/Tools/dimReduce.m	/^    n_signals = cellfun(@(x) length(x),signals(:,2));$/;"	v
n_time	lib/TrialData/Tools/getNorm.m	/^        n_time = size(sig,1);$/;"	v
na	lib/circ-toolbox/CircStat/circ_hktest.m	/^na = nargout;$/;"	v
na	lib/circ-toolbox/CircStat/circ_wwtest.m	/^na = nargout;$/;"	v
nan_bins	lib/TrialData/DataProcessing/parseFileByTrial.m	/^    nan_bins = NaN(size(all_events));$/;"	v
nan_idx_names	lib/TrialData/Tools/removeBadTrials.m	/^nan_idx_names = 'all';$/;"	v
nanmmean	lib/TrialData/util/dpca/dpca_marginalize.m	/^function Y = nanmmean(X, dimlist)$/;"	f
nanners	calculateDecoders.m	/^    nanners = isnan(cat(1,td_act.target_direction));$/;"	v
nbr_chs	lib/TrialData/Analysis/estimateDimensionality.m	/^nbr_chs = size(trial_data(1).(signal),2);$/;"	v
nbr_trials	lib/TrialData/Analysis/estimateDimensionality.m	/^nbr_trials = cellfun(@(x) length(getTDidx(trial_data,condition,x)),num2cell(unique([trial_data.(/;"	v
nc	lib/TrialData/util/dpca/dpca.m	/^            nc = numComps(i);$/;"	v
nc	lib/TrialData/util/dpca/dpca.m	/^            nc = numComps;$/;"	v
nc	lib/TrialData/util/dpca/dpca.m	/^        nc = numComps(margNums(i));$/;"	v
nc	lib/TrialData/util/dpca/dpca.m	/^        nc = numComps;$/;"	v
ncols	lib/TrialData/util/makeBasis_PostSpike.m	/^    ncols = ncols-1;$/;"	v
ncols	lib/TrialData/util/makeBasis_PostSpike.m	/^ncols = ihprs.ncols;$/;"	v
ndx	lib/circ-toolbox/CircStat/examples/parseVarArgs.m	/^        ndx = find(~ismember(varargin(1:2:end-1),fields));$/;"	v
net	data_testing/testCoordFrameLinearity.m	/^    net = feedforwardnet([10 10]);$/;"	v
net	data_testing/testCoordFrameLinearity.m	/^    net = train(net,marker_frame',muscle_frame');$/;"	v
net	lib/TrialData/Analysis/getModel.m	/^            net = feedforwardnet(layer_sizes, train_func);$/;"	v
net	lib/TrialData/Analysis/getModel.m	/^            net = train(net, x', y');$/;"	v
net_pred	data_testing/testCoordFrameLinearity.m	/^    net_pred = net(marker_frame');$/;"	v
net_pred	data_testing/testCoordFrameLinearity.m	/^    net_pred = net_pred';$/;"	v
net_resid	data_testing/testCoordFrameLinearity.m	/^    net_resid = muscle_frame - net_pred;$/;"	v
neur_decoder_params	lib/mwDecoders.m	/^    neur_decoder_params = struct('model_type','linmodel','model_name','neur_decoder',...$/;"	v
neur_decoder_vaf	lib/mwDecoders.m	/^    neur_decoder_vaf = reshape(neur_decoder_vaf,num_repeats*num_folds,2);$/;"	v
neur_decoder_vaf	lib/mwDecoders.m	/^    neur_decoder_vaf = zeros(num_repeats,num_folds,2);$/;"	v
neur_name	calculateDecoders.m	/^    neur_name = 'S1_spikes';$/;"	v
neur_name	lib/mwDecoders.m	/^    neur_name = 'S1_spikes';$/;"	v
neur_pred_pos	makePlotsTRT.m	/^        neur_pred_pos = 100*getSig(decoderResults.td_test(trialnum),{'linmodel_neur_decoder',1:3/;"	v
neur_pred_vel	makePlotsTRT.m	/^        neur_pred_vel = 100*getSig(decoderResults.td_test(trialnum),{'linmodel_neur_decoder',4:6/;"	v
neuralIndices	lib/TrialData/util/openNEV_td.m	/^neuralIndices              = find(neuralIndicesPacketIDBounds(2) >= PacketIDs & PacketIDs >= neu/;"	v
neuralIndicesPacketIDBounds	lib/TrialData/util/openNEV_td.m	/^neuralIndicesPacketIDBounds = [1, 16384];$/;"	v
neuralTraj_td	lib/TrialData/util/gpfa/neuralTraj_td.m	/^function result = neuralTraj_td(runIdx, dat, directory, varargin)$/;"	f
neural_idx	lib/TrialData/Tools/getTDfields.m	/^            neural_idx = neural_idx | ...$/;"	v
neural_idx	lib/TrialData/Tools/getTDfields.m	/^        neural_idx = zeros(length(fn),1);$/;"	v
neural_idx	lib/TrialData/Tools/reorderTDfields.m	/^neural_idx = find(ismember(fn,fn_neural));$/;"	v
neural_signal	lib/calculateEncoderPDShiftErr.m	/^    neural_signal = 'S1_FR';$/;"	v
neural_signals	lib/mwDecoders.m	/^        neural_signals = {neur_name,'all';sprintf('%s_shift',neur_name),'all'};$/;"	v
neural_signals	lib/mwDecoders.m	/^        neural_signals = {neur_name,'all'};$/;"	v
neural_signals	lib/mwEncoders.m	/^    neural_signals = [arrayname '_FR'];$/;"	v
neuroMotiveEvents	lib/TrialData/util/openNEV_td.m	/^            neuroMotiveEvents = find(NEV.Data.Comments.CharSet == 255);$/;"	v
neuronAverage	lib/NeuronTable/neuronAverage.m	/^function [avgTable,cond_idx] = neuronAverage(neuronTable, keycols)$/;"	f
neuronTable	lib/NeuronTable/getNTidx.m	/^neuronTable = neuronTable(return_idx,:);$/;"	v
neuronTable	lib/NeuronTable/makeNeuronTableStarter.m	/^    neuronTable = horzcat(neuronTable,tab_append{:});$/;"	v
neuronTable	lib/NeuronTable/makeNeuronTableStarter.m	/^neuronTable = table(monkey,date,task,out_signal_names,'VariableNames',{'monkey','date','task','s/;"	v
neuronTable_select	lib/NeuronTable/neuronAverage.m	/^    neuronTable_select = neuronTable(cond_idx(key_idx,:),:);$/;"	v
neuronsConditions	lib/TrialData/util/dpca/dpca_explainedVariance.m	/^    neuronsConditions = options.numOfTrials(:);$/;"	v
nev_text	lib/TrialData/DataProcessing/processNEV.m	/^        nev_text = cell(1,size(temp_text,1));$/;"	v
new_col	lib/TrialData/DataProcessing/parseFileByTrial.m	/^            new_col = table(markers.(marker_names{marker_ctr})(:,col_ctr),'VariableNames',{col_n/;"	v
new_markers	lib/TrialData/DataProcessing/parseFileByTrial.m	/^            new_markers = [new_markers new_col];$/;"	v
new_markers	lib/TrialData/DataProcessing/parseFileByTrial.m	/^    new_markers = table(markers.t,'VariableNames',{'t'});$/;"	v
new_name	lib/TrialData/Tools/reorderTDfields.m	/^        new_name = cat(2,new_name{~cellfun(@isempty,new_name)});$/;"	v
new_name	lib/TrialData/Tools/reorderTDfields.m	/^        new_name = strsplit(og_name,'_shift'); % effectively removes the _shift$/;"	v
new_sig	lib/TrialData/Tools/getNorm.m	/^        new_sig = zeros(n_time,1);$/;"	v
new_spikes	lib/TrialData/util/remove_spike_artifacts.m	/^        new_spikes = intersect(actual_spikes,1:length(timestamps));$/;"	v
new_spikes	lib/TrialData/util/remove_spike_artifacts.m	/^        new_spikes = reshape(new_spikes,[],1);$/;"	v
next	lib/TrialData/util/openNSx_td.m	/^        next = '';$/;"	v
next	lib/TrialData/util/openNSx_td.m	/^        next = 'channels';$/;"	v
next	lib/TrialData/util/openNSx_td.m	/^        next = 'duration';$/;"	v
next	lib/TrialData/util/openNSx_td.m	/^        next = 'electrodes';$/;"	v
next	lib/TrialData/util/openNSx_td.m	/^        next = 'precision';$/;"	v
next	lib/TrialData/util/openNSx_td.m	/^        next = 'skipfactor';$/;"	v
next	lib/TrialData/util/openNSx_td.m	/^next = '';$/;"	v
nextra	lib/TrialData/util/makeBasis_PostSpike.m	/^        nextra = niht-length(iht);$/;"	v
niht	lib/TrialData/util/makeBasis_PostSpike.m	/^    niht = length(iht0);$/;"	v
nlin	lib/TrialData/util/makeBasis_PostSpike.m	/^nlin = @(x)log(x+1e-20);$/;"	v
nm	lib/TrialData/util/smooth_data.m	/^nm = conv(kernel,ones(1,nbr_samples))';$/;"	v
nn	lib/circ-toolbox/CircStat/circ_kuipertest.m	/^nn = ktable(:,1);  %#ok<NODEF>$/;"	v
nn_params	lib/TrialData/Analysis/getModel.m	/^nn_params = [];$/;"	v
noTrials	lib/TrialData/DataProcessing/parseFileByTrial.m	/^noTrials       = false;$/;"	v
noise_covar	lib/TrialData/Tools/addCorrelatedNoise.m	/^    noise_covar = eye(size(data,2));$/;"	v
noise_covar	lib/TrialData/Tools/addCorrelatedNoise.m	/^noise_covar = [];$/;"	v
noise_covar	lib/TrialData/Tools/getNoiseCovar.m	/^noise_covar = cov(data);$/;"	v
noise_eigen	lib/TrialData/Analysis/estimateDimensionality.m	/^noise_eigen = cell(1,num_iter);$/;"	v
noise_eigen_prctile	lib/TrialData/Analysis/estimateDimensionality.m	/^noise_eigen_prctile      = prctile(eigenv_noise,99,2);$/;"	v
noise_signals	lib/TrialData/Tools/getNoiseCovar.m	/^noise_signals = check_signals(td,{fn});$/;"	v
noise_var_99	lib/TrialData/Analysis/estimateDimensionality.m	/^noise_var_99        = zeros(1,nbr_chs);$/;"	v
noisy_data	lib/TrialData/Tools/addCorrelatedNoise.m	/^    noisy_data = mvnrnd(data,noise_covar);$/;"	v
norm_name	lib/TrialData/Tools/getNorm.m	/^norm_name = 'norm'; % appends this after the signal name$/;"	v
normfac	lib/TrialData/Tools/softNormalize.m	/^    normfac = range(get_vars(trial_data,signals)) + alpha;$/;"	v
nt	lib/TrialData/util/makeBasis_PostSpike.m	/^nt = length(iht);        % number of points in iht$/;"	v
num	lib/circ-toolbox/CircStat/circ_corrcc.m	/^num = sum(sin(alpha1 - alpha1_bar) .* sin(alpha2 - alpha2_bar));$/;"	v
numChansToRead	lib/TrialData/util/openNSx_td.m	/^    numChansToRead = double(length(min(userRequestedChanRow):max(userRequestedChanRow)));$/;"	v
numCompToShow	lib/TrialData/util/dpca/dpca_plot.m	/^numCompToShow = min(options.numCompToShow, size(W,2));$/;"	v
numFolds	lib/TrialData/util/gpfa/neuralTraj_td.m	/^numFolds      = 0;$/;"	v
numOfStimuli	lib/TrialData/util/dpca/dpca_plot_td.m	/^        numOfStimuli = time(2); % time is used to pass size(data) for legend$/;"	v
numOfStimuli	lib/TrialData/util/dpca/dpca_plot_td.m	/^    numOfStimuli = size(data, 2);$/;"	v
numSigs	lib/TrialData/util/compute_r2.m	/^numSigs = size(sig1,2);$/;"	v
num_arrays	lib/TrialData/Plotting/visData.m	/^num_arrays = length(arrays);$/;"	v
num_bins	lib/NeuronTable/getTuningCurves.m	/^num_bins        = 8;$/;"	v
num_bins	lib/TrialData/Tools/binTD.m	/^            num_bins = t(end); % this will tell you how  many$/;"	v
num_bins	makePlotsTRT.m	/^                num_bins = encoderResults.params.num_tuning_bins;$/;"	v
num_bins	makePlotsTRT.m	/^        num_bins = encoderResults.params.num_tuning_bins;$/;"	v
num_boots	lib/NeuronTable/getTDClassicalPDs.m	/^num_boots = 1000;$/;"	v
num_boots	lib/NeuronTable/getTDPDs.m	/^num_boots        =  1000;$/;"	v
num_boots	lib/TrialData/Analysis/evalModel.m	/^num_boots        =  1000;$/;"	v
num_boots	makePlotsTRT.m	/^    num_boots = 1;$/;"	v
num_bootstraps	lib/TrialData/Analysis/evalModel.m	/^num_bootstraps = varargin{end};$/;"	v
num_clusters_wanted	lib/circ-toolbox/CircStat/circ_clust.m	/^num_clusters_wanted = numclust;$/;"	v
num_cols	lib/TrialData/Plotting/visData.m	/^num_cols = pos_cols + time_cols;$/;"	v
num_conds	lib/TrialData/Analysis/getDPCA.m	/^        num_conds = size(valIdx,1);$/;"	v
num_conds	lib/TrialData/Tools/trialAverage.m	/^    num_conds = 1;$/;"	v
num_conds	lib/TrialData/Tools/trialAverage.m	/^    num_conds = size(all_conds,1);$/;"	v
num_dims	lib/TrialData/Analysis/getDPCA.m	/^num_dims       =  15;$/;"	v
num_dims	lib/TrialData/Tools/dimReduce.m	/^num_dims        =  []; % how many dimensions, needed for PPCA, FA, etc$/;"	v
num_electrodes	lib/TrialData/util/remove_spike_artifacts.m	/^    num_electrodes = length(unique(unit_structure.Data.Spikes.Electrode));$/;"	v
num_folds	lib/analyzeTRT.m	/^    num_folds = 5;$/;"	v
num_folds	lib/coordCorr.m	/^    num_folds = 10; % 5 is default number of folds, no need to pass in$/;"	v
num_folds	lib/mwDecoders.m	/^    num_folds = 10;$/;"	v
num_folds	lib/mwEncoders.m	/^    num_folds = 5; % 5 is default number of folds, no need to pass in$/;"	v
num_freqs	lib/TrialData/Analysis/getLearningMetrics.m	/^                num_freqs = 3;$/;"	v
num_in_signals	lib/NeuronTable/getTDClassicalPDs.m	/^num_in_signals = size(in_signals,1);$/;"	v
num_in_signals	lib/NeuronTable/getTDPDs.m	/^num_in_signals = size(in_signals,1);$/;"	v
num_iter	lib/TrialData/Analysis/estimateDimensionality.m	/^num_iter      =  1000;$/;"	v
num_model_plots	makePlotsTRT.m	/^    num_model_plots = length(models_to_plot);$/;"	v
num_models	lib/coordCorr.m	/^    num_models = length(model_names);$/;"	v
num_models	lib/mwEncoders.m	/^    num_models = length(model_names);$/;"	v
num_models	lib/plotMWTuningSurfaces.m	/^    num_models = numel(model_names);$/;"	v
num_monks	makePlotsTRT.m	/^    num_monks = 2;$/;"	v
num_monks	makePlotsTRT.m	/^    num_monks = 3;$/;"	v
num_monks	makePlotsTRT.m	/^    num_monks = length(filename);$/;"	v
num_moves	lib/TrialData/Tools/getRWMovements.m	/^num_moves = sum(~isnan([trial_data.(go_cue_name)]));$/;"	v
num_moves	lib/TrialData/Tools/splitTD.m	/^num_moves = sum(~isnan([trial_data.(split_idx_name)]));$/;"	v
num_musc_pcs	calculateEncoders.m	/^num_musc_pcs = 9;$/;"	v
num_musc_pcs	lib/coordCorr.m	/^    num_musc_pcs = 5;$/;"	v
num_musc_pcs	lib/mwEncoders.m	/^    num_musc_pcs = 5;$/;"	v
num_neurons	makePlotsTRT.m	/^        num_neurons = height(encoderResults.tuning_curves{1,1});$/;"	v
num_out_signals	lib/NeuronTable/getTDClassicalPDs.m	/^num_out_signals = sum(cellfun(@(x) length(x),out_signals(:,2)));$/;"	v
num_out_signals	lib/NeuronTable/getTDModelWeights.m	/^num_out_signals = sum(cellfun(@(x) length(x),out_signals(:,2)));$/;"	v
num_repeats	lib/analyzeTRT.m	/^    num_repeats = 20;$/;"	v
num_repeats	lib/coordCorr.m	/^    num_repeats = 10; % 20 is default number of repeats, no need to pass in$/;"	v
num_repeats	lib/mwDecoders.m	/^    num_repeats = 10;$/;"	v
num_repeats	lib/mwEncoders.m	/^    num_repeats = 20; % 20 is default number of repeats, no need to pass in$/;"	v
num_rows	lib/TrialData/Plotting/visData.m	/^num_rows = length(plot_signals)*kin_rows + event_rows + num_arrays*spike_rows;$/;"	v
num_samp	lib/TrialData/Tools/stretchSignals.m	/^num_samp    =  100;$/;"	v
num_samp	lib/TrialData/Tools/trialAverage.m	/^num_samp    =  1000;$/;"	v
num_signals	lib/TrialData/DataProcessing/convertDataToTD.m	/^num_signals = sum(cellfun(@(x) length(x.name),signal_info));$/;"	v
num_signals	lib/TrialData/DataProcessing/initSignalStruct.m	/^    num_signals = 1;$/;"	v
num_signals	lib/TrialData/DataProcessing/initSignalStruct.m	/^    num_signals = length(signal_info.name);$/;"	v
num_trials	makePlotsTRT.m	/^    num_trials = 7;$/;"	v
num_trials_to_plot	lib/TrialData/Plotting/visData.m	/^num_trials_to_plot = length(trials_to_plot);$/;"	v
num_tuning_bins	lib/analyzeTRT.m	/^    num_tuning_bins = 8;$/;"	v
num_tuning_bins	lib/mwEncoders.m	/^    num_tuning_bins = 16;$/;"	v
num_unique	lib/circ-toolbox/CircStat/circ_clust.m	/^    num_unique = length(unique(cid));$/;"	v
num_unique	lib/circ-toolbox/CircStat/circ_clust.m	/^num_unique = length(unique(cid));$/;"	v
numclust	lib/circ-toolbox/CircStat/circ_clust.m	/^    numclust = 4;$/;"	v
objectIndex	lib/TrialData/util/openNEV_td.m	/^            objectIndex = [0 '1' '2' '3' '4' '1' '2' '3' '4'];$/;"	v
offset	lib/TrialData/Plotting/visData.m	/^            offset = [0 0];$/;"	v
offset	lib/TrialData/Plotting/visData.m	/^            offset = pos_offset;$/;"	v
offset	lib/TrialData/util/openNSx_td.m	/^		offset = double((headerIDX-1)*ExtHeaderLength);$/;"	v
offsetX	lib/TrialData/util/dpca/dpca_plot.m	/^    offsetX = 0.31;$/;"	v
og_idx	lib/TrialData/Tools/reorderTDfields.m	/^        og_idx = og_idx(end); % get the last one$/;"	v
og_idx	lib/TrialData/Tools/reorderTDfields.m	/^        og_idx = setdiff(find(~cellfun(@isempty,regexp(fn_cont_new,new_name,'ONCE'))),shift_idx)/;"	v
og_name	lib/TrialData/Tools/reorderTDfields.m	/^        og_name = fn_cont_new{the_val};$/;"	v
og_size	lib/TrialData/Tools/stretchSignals.m	/^        og_size = size(trial_data(trial).(time_vars{1}),1);$/;"	v
on_idx	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^                on_idx = NaN;$/;"	v
on_idx	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^            on_idx = NaN;$/;"	v
on_idx	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^            on_idx = find(ds<thresh & (1:length(ds))'<mvt_peak & move_inds,1,'last');$/;"	v
on_idx	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^        on_idx = find(s > s_thresh & move_inds,1,'first');$/;"	v
onset_name	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^onset_name    =  'movement_on';$/;"	v
onset_name	lib/TrialData/Tools/getRWMovements.m	/^onset_name         =  'movement_on';$/;"	v
openNEV_td	lib/TrialData/util/openNEV_td.m	/^function varargout = openNEV_td(varargin)$/;"	f
openNSx_td	lib/TrialData/util/openNSx_td.m	/^function varargout = openNSx_td(varargin)$/;"	f
opensimList	lib/TrialData/DataProcessing/parseFileByTrial.m	/^    opensimList = opensim.Properties.VariableNames;$/;"	v
opensim_analog_idx	lib/TrialData/DataProcessing/parseFileByTrial.m	/^        opensim_analog_idx = i;$/;"	v
opensim_analog_idx	lib/TrialData/DataProcessing/parseFileByTrial.m	/^opensim_analog_idx = 0;$/;"	v
opensim_elbowPos_idx	lib/coordCorr.m	/^            opensim_elbowPos_idx = find(contains(td(1).opensim_names,'_elbowPos'));$/;"	v
opensim_elbowVel_idx	lib/coordCorr.m	/^            opensim_elbowVel_idx = find(contains(td(1).opensim_names,'_elbowVel'));$/;"	v
opensim_elbow_idx	lib/mwEncoders.m	/^            opensim_elbow_idx = find(contains(td(1).opensim_names,'_elbowPos') | contains(td(1)./;"	v
opensim_handPos_idx	lib/coordCorr.m	/^            opensim_handPos_idx = find(contains(td(1).opensim_names,'_handPos'));$/;"	v
opensim_handVel_idx	lib/coordCorr.m	/^            opensim_handVel_idx = find(contains(td(1).opensim_names,'_handVel'));$/;"	v
opensim_hand_idx	lib/mwEncoders.m	/^            opensim_hand_idx = find(contains(td(1).opensim_names,'_handPos') | contains(td(1).op/;"	v
opensim_jointAng_idx	lib/coordCorr.m	/^            opensim_jointAng_idx = find(contains(td(1).opensim_names,'_ang'));$/;"	v
opensim_jointVel_idx	lib/coordCorr.m	/^            opensim_jointVel_idx = find(contains(td(1).opensim_names,'_vel'));$/;"	v
opensim_joint_idx	lib/mwEncoders.m	/^            opensim_joint_idx = find(contains(td(1).opensim_names,'_ang') | contains(td(1).opens/;"	v
optionNames	lib/TrialData/util/dpca/dpca.m	/^optionNames = fieldnames(options);$/;"	v
optionNames	lib/TrialData/util/dpca/dpca_explainedVariance.m	/^optionNames = fieldnames(options);$/;"	v
optionNames	lib/TrialData/util/dpca/dpca_marginalize.m	/^optionNames = fieldnames(options);$/;"	v
optionNames	lib/TrialData/util/dpca/dpca_plot.m	/^optionNames = fieldnames(options);$/;"	v
options	lib/TrialData/util/dpca/dpca.m	/^options = struct('combinedParams', [],       ...   $/;"	v
options	lib/TrialData/util/dpca/dpca_explainedVariance.m	/^options = struct('combinedParams', [], ...   $/;"	v
options	lib/TrialData/util/dpca/dpca_marginalize.m	/^options = struct('combinedParams', [],      ...   $/;"	v
options	lib/TrialData/util/dpca/dpca_plot.m	/^options = struct('time',           [], ...   $/;"	v
ord_seqTrain	lib/TrialData/Analysis/runGPFA.m	/^ord_seqTrain = seqTrain;$/;"	v
ori	lib/circ-toolbox/CircStat/examples/example2.m	/^ori = circ_axial(circ_ang2rad(ori),2);$/;"	v
orthogonalize	lib/TrialData/util/orthogonalize.m	/^function [Xorth, Lorth, TT] = orthogonalize(X, L)$/;"	f
other_hand_idx	data_testing/hand_elbow_xcorr.m	/^    other_hand_idx = 4:6;$/;"	v
other_hand_speed	data_testing/hand_elbow_xcorr.m	/^    other_hand_speed = sqrt(sum(other_hand_vel.^2,2));$/;"	v
other_hand_vel	data_testing/hand_elbow_xcorr.m	/^    other_hand_vel = get_vars(td,{'marker_vel',other_hand_idx});$/;"	v
out	lib/TrialData/DataProcessing/parseFileByTrial.m	/^    out = [];$/;"	v
out	lib/TrialData/DataProcessing/parseFileByTrial.m	/^    out = struct();$/;"	v
out	lib/TrialData/DataProcessing/parseFileByTrial.m	/^out = struct();$/;"	v
out	lib/TrialData/DataProcessing/processNEV.m	/^out = struct( ...$/;"	v
out	lib/TrialData/Tools/getSig.m	/^out = get_vars(trial_data,signals);$/;"	v
out	lib/TrialData/util/minusPi2Pi.m	/^out = atan2(sin(in), cos(in));$/;"	v
out	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^out = struct( ...$/;"	v
outArr	lib/NeuronTable/getTDClassicalPDs.m	/^    outArr = get_vars(trial_data,out_signals);$/;"	v
out_dims	lib/TrialData/Analysis/getPotentSpace.m	/^    out_dims = estimateDimensionality(trial_data,struct( ...$/;"	v
out_dims	lib/TrialData/Analysis/getPotentSpace.m	/^out_dims     =  [];$/;"	v
out_params	lib/TrialData/Analysis/getPotentSpace.m	/^out_params = struct( ...$/;"	v
out_params	lib/TrialData/DataProcessing/loadTDfiles.m	/^out_params = [];$/;"	v
out_signal_names	lib/NeuronTable/makeNeuronTableStarter.m	/^out_signal_names = {};$/;"	v
out_signals	lib/NeuronTable/getTDClassicalPDs.m	/^out_signals      =  [];$/;"	v
out_signals	lib/NeuronTable/getTDClassicalPDs.m	/^out_signals = check_signals(trial_data(1),out_signals);$/;"	v
out_signals	lib/NeuronTable/getTDModelWeights.m	/^out_signals      =  [];$/;"	v
out_signals	lib/NeuronTable/getTDModelWeights.m	/^out_signals = check_signals(trial_data(1),out_signals);$/;"	v
out_signals	lib/NeuronTable/getTDPDs.m	/^out_signals      =  [];$/;"	v
out_signals	lib/NeuronTable/getTDPDs.m	/^out_signals = check_signals(trial_data(1),out_signals);$/;"	v
out_signals	lib/NeuronTable/getTuningCurves.m	/^out_signals      =  [];$/;"	v
out_signals	lib/NeuronTable/getTuningCurves.m	/^out_signals = check_signals(trial_data(1),out_signals);$/;"	v
out_signals	lib/TrialData/Analysis/evalModel.m	/^out_signals      =  [];$/;"	v
out_signals	lib/TrialData/Analysis/evalModel.m	/^out_signals = check_signals(trial_data(1),out_signals);$/;"	v
out_signals	lib/TrialData/Analysis/getModel.m	/^out_signals   =  {};% {'name',idx};$/;"	v
out_signals	lib/TrialData/Analysis/getModel.m	/^out_signals = check_signals(trial_data(1),out_signals);$/;"	v
out_signals	lib/TrialData/Analysis/getPotentSpace.m	/^out_signals  =  [];$/;"	v
out_signals	lib/TrialData/Analysis/getPotentSpace.m	/^out_signals = check_signals(trial_data(1),out_signals);$/;"	v
out_signals_name	lib/TrialData/Tools/addProcessedSignal.m	/^out_signals_name = '';$/;"	v
outputName	lib/TrialData/util/openNSx_td.m	/^outputName = ['NS' fext(4)];$/;"	v
output_data	lib/TrialData/Tools/addProcessedSignal.m	/^    output_data = processor(input_data);$/;"	v
overWrite	lib/TrialData/util/openNEV_td.m	/^        overWrite = input('Would you like to overwrite (Y\/N)? ', 's');$/;"	v
overlay	lib/circ-toolbox/CircStat/circ_clust.m	/^    overlay = 0;$/;"	v
overlay	lib/circ-toolbox/CircStat/circ_clust.m	/^   overlay = varargin{4}; $/;"	v
p	lib/TrialData/Analysis/getDPCA.m	/^            p = valIdx(depthCount,:)==i;$/;"	v
p	lib/circ-toolbox/CircKSDensity/circ_iqr.m	/^p = circ_std(alpha)\/0.7413;$/;"	v
p	lib/circ-toolbox/CircStat/circ_axial.m	/^    p = 1;$/;"	v
p	lib/circ-toolbox/CircStat/circ_hktest.m	/^p = length(pu);$/;"	v
p	lib/circ-toolbox/CircStat/circ_kuipertest.m	/^  p = 1;$/;"	v
p	lib/circ-toolbox/CircStat/circ_kuipertest.m	/^  p = alpha(idx);$/;"	v
p	lib/circ-toolbox/CircStat/circ_moment.m	/^    p = 1;$/;"	v
p	lib/circ-toolbox/CircStat/circ_raotest.m	/^  p = .5;$/;"	v
p	lib/circ-toolbox/CircStat/circ_raotest.m	/^  p = alpha(cidx);$/;"	v
p	lib/circ-toolbox/CircStat/circ_vmpdf.m	/^p = C * exp(kappa*cos(alpha-thetahat));$/;"	v
p	lib/circ-toolbox/CircStat/examples/example1.m	/^p = circ_cmtest(theta1,theta2);$/;"	v
p	lib/circ-toolbox/CircStat/examples/example1.m	/^p = circ_hktest([theta1; theta2], idp,idq,true);$/;"	v
p	lib/circ-toolbox/CircStat/examples/example1.m	/^p = circ_wwtest(theta,idx);$/;"	v
p	lib/circ-toolbox/CircStat/examples/example1.m	/^p = circ_wwtest(theta1,theta2);$/;"	v
p	lib/stattestPDShiftErr.m	/^p = zeros(size(modelcompare,1),1);$/;"	v
p1	lib/circ-toolbox/CircStat/circ_hktest.m	/^  p1 = 1 - chi2cdf(chi1, df_1);$/;"	v
p1	lib/circ-toolbox/CircStat/circ_hktest.m	/^  p1 = 1 - fcdf(F1,df_1,df_r);$/;"	v
p2	lib/circ-toolbox/CircStat/circ_hktest.m	/^  p2 = 1 - chi2cdf(chi2, df_2);$/;"	v
p2	lib/circ-toolbox/CircStat/circ_hktest.m	/^  p2 = 1 - fcdf(F2,df_2,df_r);$/;"	v
pI	lib/circ-toolbox/CircStat/circ_hktest.m	/^    pI = 1-fcdf(FI,df_i,df_r);$/;"	v
pI	lib/circ-toolbox/CircStat/circ_hktest.m	/^    pI = NaN;$/;"	v
pI	lib/circ-toolbox/CircStat/circ_hktest.m	/^  pI = 1 - chi2cdf(chiI, df_i);$/;"	v
p_alpha	lib/circ-toolbox/CircStat/examples/example1.m	/^p_alpha = circ_otest(alpha_rad);$/;"	v
p_alpha	lib/circ-toolbox/CircStat/examples/example1.m	/^p_alpha = circ_raotest(alpha_rad);$/;"	v
p_alpha	lib/circ-toolbox/CircStat/examples/example1.m	/^p_alpha = circ_rtest(alpha_rad);$/;"	v
p_alpha	lib/circ-toolbox/CircStat/examples/example1.m	/^p_alpha = circ_vtest(alpha_rad,circ_ang2rad(0));$/;"	v
p_beta	lib/circ-toolbox/CircStat/examples/example1.m	/^p_beta = circ_otest(beta_rad);$/;"	v
p_beta	lib/circ-toolbox/CircStat/examples/example1.m	/^p_beta = circ_raotest(beta_rad);$/;"	v
p_beta	lib/circ-toolbox/CircStat/examples/example1.m	/^p_beta = circ_rtest(beta_rad);$/;"	v
p_beta	lib/circ-toolbox/CircStat/examples/example1.m	/^p_beta = circ_vtest(beta_rad,circ_ang2rad(0));$/;"	v
p_id	lib/circ-toolbox/CircStat/circ_hktest.m	/^    p_id = idp == pu(pp); % indices of factor1 = pp$/;"	v
p_val	makePlotsTRT.m	/^    p_val = cell(num_monks,1);$/;"	v
pairwiseCorr	lib/TrialData/Analysis/pairwiseCorr.m	/^function [rho,sort_idx] = pairwiseCorr(trial_data,params)$/;"	f
paramPCA	lib/TrialData/BBDemoScript.m	/^paramPCA = struct('signals', 'S1_spikes');$/;"	v
param_events	lib/TrialData/DataProcessing/parseFileByTrial.m	/^param_events = setdiff(event_list,time_events);$/;"	v
params	lib/TrialData/Analysis/getDPCA.m	/^params = varargin{end}; if ~isstruct(params), error('Last input must be params.'); end$/;"	v
params	lib/TrialData/DataProcessing/convertDataToTD.m	/^    params      = struct();$/;"	v
params	lib/TrialData/DataProcessing/convertDataToTD.m	/^    params      = varargin{2};$/;"	v
params	lib/TrialData/DataProcessing/parseFileByTrial.m	/^    params = struct();$/;"	v
params	lib/TrialData/Tools/dimReduce.m	/^    params = struct( ...$/;"	v
params	lib/TrialData/util/dpca/dpca_marginalize.m	/^params = 2:length(size(X));$/;"	v
params	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^    params = struct();$/;"	v
params	lib/TrialData/vis_script_demo.m	/^params = struct( ...$/;"	v
paramsubsets	lib/TrialData/util/dpca/dpca_marginalize.m	/^    paramsubsets = options.combinedParams;$/;"	v
paramsubsets	lib/TrialData/util/dpca/dpca_marginalize.m	/^paramsubsets = subsets(params);$/;"	v
paramsubsets	lib/TrialData/util/dpca/dpca_marginalize.m	/^paramsubsets = subsets(params-1);$/;"	v
paramsubsubsets	lib/TrialData/util/dpca/dpca_marginalize.m	/^    paramsubsubsets = subsets(indRest);$/;"	v
parseFileByTrial	lib/TrialData/DataProcessing/parseFileByTrial.m	/^function [trial_data,td_params] = parseFileByTrial(data,params)$/;"	f
parseFileByTrial_cds	lib/TrialData/DataProcessing/parseFileByTrial.m	/^function [trial_data,td_params] = parseFileByTrial_cds(cds,params)$/;"	f
parseVarArgs	lib/circ-toolbox/CircStat/examples/parseVarArgs.m	/^function params = parseVarArgs(params,varargin)$/;"	f
pass	lib/TrialData/Tools/Tests/coord_test.m	/^    pass = false(4,1);$/;"	v
path	lib/TrialData/util/openNSx_td.m	/^    path  = [path '\/'];$/;"	v
patientTrigPacketID	lib/TrialData/util/openNEV_td.m	/^patientTrigPacketID = 65532;$/;"	v
patientTrigPacketIDIndices	lib/TrialData/util/openNEV_td.m	/^patientTrigPacketIDIndices = find(PacketIDs == patientTrigPacketID);$/;"	v
pc	lib/TrialData/util/dpca/dpca_marginalize.m	/^pc = dec2bin(1:2^d-1) - '0';$/;"	v
pc	lib/TrialData/util/dpca/dpca_marginalize.m	/^pc = fliplr(pc(ind,:));$/;"	v
pcFields	lib/TrialData/util/openNEV_td.m	/^                            pcFields = fields(tempParsedCommand);$/;"	v
pca_algorithm	lib/TrialData/Analysis/estimateDimensionality.m	/^pca_algorithm   = 'svd'; % algorithm for PCA$/;"	v
pca_algorithm	lib/TrialData/Analysis/getPotentSpace.m	/^pca_algorithm      =  'svd';  % which PCA algorithm$/;"	v
pca_algorithm	lib/TrialData/Tools/dimReduce.m	/^pca_algorithm    = 'svd'; % algorithm for PCA$/;"	v
pca_array	lib/TrialData/Plotting/visData.m	/^pca_array         =   '';$/;"	v
pca_centered	lib/TrialData/Analysis/estimateDimensionality.m	/^pca_centered    = true;  % whether to center data$/;"	v
pca_centered	lib/TrialData/Analysis/getPotentSpace.m	/^pca_centered       =  true;   % whether to center data$/;"	v
pca_centered	lib/TrialData/Tools/dimReduce.m	/^pca_centered     = true;  % whether to center data$/;"	v
pca_dims	lib/TrialData/Plotting/visData.m	/^pca_dims          =   1:3;$/;"	v
pca_economy	lib/TrialData/Analysis/estimateDimensionality.m	/^pca_economy     = false; % if num samples < degrees of freedom, will pad with zeros to keep outp/;"	v
pca_economy	lib/TrialData/Tools/dimReduce.m	/^pca_economy      = false; % if num samples < degrees of freedom, will pad with zeros to keep out/;"	v
pca_info	lib/TrialData/Analysis/getPotentSpace.m	/^pca_info = struct(        ...$/;"	v
pca_params	lib/TrialData/Analysis/getPotentSpace.m	/^pca_params = params;$/;"	v
pca_params	lib/TrialData/subspace_demo.m	/^pca_params = struct( ...$/;"	v
pd	lib/plotMWTuningSurfaces.m	/^                pd = pdTables{spacenum,modelnum}.velPD(neuron_idx);$/;"	v
pdCI	lib/plotMWTuningSurfaces.m	/^                pdCI = pdTables{spacenum,modelnum}.velPDCI(neuron_idx,:);$/;"	v
pdParams	lib/analyzeTRT.m	/^            pdParams = struct('out_signals',model_names(modelnum),'prefix',model_names{modelnum}/;"	v
pdTable	lib/NeuronTable/compareTuning.m	/^        pdTable = pds{cond_idx};$/;"	v
pdTable	lib/NeuronTable/getPDsFromWeights.m	/^pdTable = horzcat(pdTable,tab_append{:});$/;"	v
pdTable	lib/NeuronTable/getPDsFromWeights.m	/^pdTable = unique(weightTable(:,key_cols));$/;"	v
pdTable	lib/NeuronTable/getTDClassicalPDs.m	/^pdTable = horzcat(starter,pdTable_cell{:});$/;"	v
pdTable	lib/NeuronTable/getTDPDs.m	/^pdTable = horzcat(starter,tab_append{:});$/;"	v
pdTable	lib/TrialData/BBDemoScript.m	/^pdTable= getTDPDs(trial_data_pca, paramsPDs);$/;"	v
pdTable_cell	lib/NeuronTable/getTDClassicalPDs.m	/^pdTable_cell = cell(1,num_in_signals*3);$/;"	v
pdTable_unit1	lib/NeuronTable/comparePDClouds.m	/^    pdTable_unit1 = pdTable1(unit_idx,:);$/;"	v
pdTable_unit2	lib/NeuronTable/comparePDClouds.m	/^    pdTable_unit2 = pdTable2(unit_idx,:);$/;"	v
pdTables	lib/mwEncoders.m	/^    pdTables = cell(2,num_models);$/;"	v
pd_params	lib/mwEncoders.m	/^            pd_params = struct('out_signals',model_names{modelnum},'out_signal_names',unit_guide/;"	v
pdf	lib/NeuronTable/getTDClassicalPDs.m	/^    pdf = circ_ksdensity(inDir,test_dirs,10);$/;"	v
pdf	lib/circ-toolbox/CircKSDensity/circ_ksdensity.m	/^pdf = ifft(fft(Tp).*fft(G));$/;"	v
pdf	lib/circ-toolbox/CircKSDensity/circ_ksdensity.m	/^pdf = pdf(tn-t2+1:tn-t2+tn);$/;"	v
pdf	lib/circ-toolbox/CircKSDensity/circ_ksdensity.m	/^pdf = pdf.\/sum(pdf);$/;"	v
peak_idx_offset	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^peak_idx_offset = 0;$/;"	v
peak_name	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^peak_name     =  'peak_speed';$/;"	v
peak_name	lib/TrialData/Tools/getRWMovements.m	/^peak_name          =  'peak_speed';$/;"	v
peaks	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^        peaks = [dds(1:end-1)>0 & dds(2:end)<0; 0];$/;"	v
phi	lib/circ-toolbox/CircStat/circ_plot.m	/^      phi = circ_mean(alpha);$/;"	v
phi	lib/circ-toolbox/CircStat/examples/example2.m	/^  phi = circ_mean(ori,w(j,:));$/;"	v
phiplot	lib/circ-toolbox/CircStat/circ_samplecdf.m	/^phiplot = [phisplottable 2*pi];$/;"	v
phis	lib/circ-toolbox/CircStat/circ_samplecdf.m	/^phis = 0;$/;"	v
phis	lib/circ-toolbox/CircStat/circ_samplecdf.m	/^phis = [phis 2*pi];$/;"	v
phis	lib/circ-toolbox/CircStat/circ_samplecdf.m	/^phis = linspace(0,2*pi,resolution+1);$/;"	v
phis	lib/circ-toolbox/CircStat/circ_samplecdf.m	/^phis = phis(1:end-1);$/;"	v
phis2	lib/circ-toolbox/CircStat/circ_samplecdf.m	/^phis2 = phis;$/;"	v
phisplottable	lib/circ-toolbox/CircStat/circ_samplecdf.m	/^   phisplottable = [phisplottable phis(j) phis2(j)]; %#ok<AGROW>$/;"	v
phisplottable	lib/circ-toolbox/CircStat/circ_samplecdf.m	/^phisplottable = [];$/;"	v
pidx	lib/circ-toolbox/CircStat/circ_cmtest.m	/^  pidx = idx == u(t);$/;"	v
pidx	lib/circ-toolbox/CircStat/circ_wwtest.m	/^  pidx = idx == u(t);$/;"	v
plot3D_td	lib/TrialData/util/gpfa/plot3D_td.m	/^function plot3D_td(seq, xspec, varargin)$/;"	f
plotColor	lib/circ-toolbox/CircStat/circ_clust.m	/^function plotColor(x, y, c, varargin)$/;"	f
plotEncoderPR2	lib/plotEncoderPR2.m	/^function plotEncoderPR2(encoderResults,x_model,y_model)$/;"	f
plotFlatTuning	lib/NeuronTable/plotFlatTuning.m	/^function plotFlatTuning(pdData,curve,maxRadius,color,linspec, move_corrIn)$/;"	f
plotMWTuningCloud	lib/plotMWTuningCloud.m	/^function plotMWTuningCloud(tuningHull,neuron_idx)$/;"	f
plotMWTuningSurfaces	lib/plotMWTuningSurfaces.m	/^function plotMWTuningSurfaces(td_test,pdTables,neuron_idx,model_aliases)$/;"	f
plotTRTTrials	lib/plotTRTTrials.m	/^function plotTRTTrials(trial_data,params)$/;"	f
plotTuning	lib/NeuronTable/plotTuning.m	/^function plotTuning(pdData,curve,maxRadius,color,linspec, move_corrIn)$/;"	f
plotWeightClouds	lib/NeuronTable/plotWeightClouds.m	/^function plotWeightClouds(tuningTable,params,varargin)$/;"	f
plot_pca	lib/TrialData/Plotting/visData.m	/^    plot_pca = false;$/;"	v
plot_pca	lib/TrialData/Plotting/visData.m	/^plot_pca          =   false;$/;"	v
plot_signals	lib/TrialData/Plotting/visData.m	/^plot_signals      =   {'vel'};$/;"	v
pm	lib/circ-toolbox/CircStat/circ_hktest.m	/^pm = zeros(p,1); pr = pm; pn = pm;$/;"	v
pm_PDs	lib/calculatePDShiftTables.m	/^        pm_PDs = pm_tuningTable.([model_names{modelnum} '_velPD']);$/;"	v
pn	lib/circ-toolbox/CircStat/circ_wwtest.m	/^pn = zeros(s,1); pr = pn;$/;"	v
point	lib/TrialData/Tools/addCoordPoint2TD.m	/^point = 'hand';$/;"	v
point_idx	lib/TrialData/Tools/addCoordPoint2TD.m	/^    point_idx = cell(1,3);$/;"	v
point_idx	lib/TrialData/Tools/addCoordPoint2TD.m	/^    point_idx = repmat({point_idx},length(coord_postfix),1);$/;"	v
pos	lib/TrialData/Tools/getRWTargetDirection.m	/^    pos = trial_data(i).(start_idx_name);$/;"	v
pos	lib/TrialData/Tools/getTargetDirection.m	/^    pos = trial_data(i).pos;$/;"	v
pos	lib/TrialData/util/dpca/dpca_plot.m	/^        pos = get(gca, 'Position');$/;"	v
pos	lib/TrialData/util/dpca/dpca_plot.m	/^    pos = get(axBar, 'Position');$/;"	v
pos	lib/TrialData/util/dpca/dpca_plot.m	/^    pos = get(axColormap, 'Position');$/;"	v
pos	lib/TrialData/util/dpca/dpca_plot.m	/^    pos = get(axCum, 'Position');$/;"	v
pos	lib/TrialData/util/dpca/dpca_plot.m	/^    pos = get(gca, 'Position');$/;"	v
pos	lib/TrialData/util/dpca/dpca_plot.m	/^pos = get(axColormap, 'Position');$/;"	v
pos	lib/TrialData/util/dpca/dpca_plot.m	/^pos = get(cb, 'Position');$/;"	v
pos	lib/TrialData/util/dpca/dpca_plot.m	/^pos = get(gca, 'Position');$/;"	v
pos	lib/plotTRTTrials.m	/^    pos = trial_data(trial_idx).pos;$/;"	v
pos_cols	lib/TrialData/Plotting/visData.m	/^pos_cols           =   2;        % how many columns for position plot$/;"	v
pos_dl	makePlotsTRT.m	/^        pos_dl = cat(1,results.td_test{2}.pos);$/;"	v
pos_location	lib/TrialData/Plotting/visData.m	/^pos_location       =   'right'; % if position plot is on 'left' or 'right'$/;"	v
pos_offset	lib/TrialData/DataProcessing/parseFileByTrial.m	/^pos_offset     =  [0,0];$/;"	v
pos_offset	lib/TrialData/Plotting/visData.m	/^pos_offset        =   [0, 0]; % offset to zero position$/;"	v
pos_pm	makePlotsTRT.m	/^        pos_pm = cat(1,results.td_test{1}.pos);$/;"	v
pos_range	lib/TrialData/Plotting/visData.m	/^pos_range          =   [-9,9];   % range for 2-D position plot axes$/;"	v
pos_rows_max	lib/TrialData/Plotting/visData.m	/^    pos_rows_max = floor(num_rows\/2);$/;"	v
pos_rows_max	lib/TrialData/Plotting/visData.m	/^    pos_rows_max = num_rows;$/;"	v
pos_start	lib/TrialData/Plotting/visData.m	/^        pos_start = 0;$/;"	v
pos_start	lib/TrialData/Plotting/visData.m	/^        pos_start = time_cols;$/;"	v
poss	lib/plotMWTuningSurfaces.m	/^            poss = cat(1,td.pos);$/;"	v
possible_corrs	lib/NeuronTable/getTuningCurves.m	/^possible_corrs = {'vel','acc','force'};$/;"	v
possible_metrics	lib/TrialData/Analysis/evalModel.m	/^possible_metrics = {'pr2','vaf','r2','r'};$/;"	v
postprocess	lib/TrialData/util/gpfa/postprocess.m	/^function [estParams, seqTrain, seqTest] = postprocess(ws, varargin)$/;"	f
prctile_cutoff	lib/TrialData/Tools/removeBadNeurons.m	/^prctile_cutoff  =  99.5;$/;"	v
prctile_dist	lib/TrialData/Tools/removeBadNeurons.m	/^        prctile_dist    =  get_master_dist();$/;"	v
prctile_dist	lib/TrialData/Tools/removeBadNeurons.m	/^prctile_dist = [ ...$/;"	v
precisionType	lib/TrialData/util/openNSx_td.m	/^				precisionType = '*int16=>int16';$/;"	v
precisionType	lib/TrialData/util/openNSx_td.m	/^                precisionType = '*int16';$/;"	v
precisionType	lib/TrialData/util/openNSx_td.m	/^                precisionType = '*short=>short';$/;"	v
precisionTypeRaw	lib/TrialData/util/openNSx_td.m	/^            precisionTypeRaw = varargin{i}(3:end);$/;"	v
precisionTypeRaw	lib/TrialData/util/openNSx_td.m	/^            precisionTypeRaw = varargin{i};$/;"	v
predVAF	lib/coordCorr.m	/^    predVAF = 1 - SSE\/SST;$/;"	v
prefix	lib/NeuronTable/getTDClassicalPDs.m	/^        prefix = [prefix '_'];$/;"	v
prefix	lib/NeuronTable/getTDClassicalPDs.m	/^prefix = '';$/;"	v
prefix	lib/NeuronTable/getTDModelWeights.m	/^        prefix = [prefix '_'];$/;"	v
prefix	lib/NeuronTable/getTDModelWeights.m	/^prefix = '';$/;"	v
prefix	lib/NeuronTable/getTDPDs.m	/^        prefix = [prefix '_'];$/;"	v
prefix	lib/NeuronTable/getTDPDs.m	/^prefix = '';$/;"	v
prefix	lib/NeuronTable/getTuningCurves.m	/^    prefix = strcat(prefix,'_');$/;"	v
prefix	lib/NeuronTable/getTuningCurves.m	/^prefix = '';$/;"	v
prepareOutput	lib/circ-toolbox/CircStat/circ_hktest.m	/^  function prepareOutput$/;"	f
prepareOutput	lib/circ-toolbox/CircStat/circ_wwtest.m	/^  function prepareOutput$/;"	f
preserveSign	lib/TrialData/util/angleDiff.m	/^    preserveSign = true;$/;"	v
printTable	lib/circ-toolbox/CircStat/circ_hktest.m	/^  function printTable$/;"	f
printTable	lib/circ-toolbox/CircStat/circ_wwtest.m	/^  function printTable$/;"	f
processInput	lib/circ-toolbox/CircStat/circ_cmtest.m	/^function [alpha, idx] = processInput(varargin)$/;"	f
processInput	lib/circ-toolbox/CircStat/circ_wwtest.m	/^function [alpha, idx, w] = processInput(varargin)$/;"	f
processNEV	lib/TrialData/DataProcessing/processNEV.m	/^function out = processNEV(filename,signal_info)$/;"	f
processNSx	lib/TrialData/DataProcessing/processNSx.m	/^function out = processNSx(filename,signal_info)$/;"	f
process_emg	lib/TrialData/DataProcessing/convertDataToTD.m	/^function binned_emg = process_emg(data,params)$/;"	f
processor	lib/TrialData/Tools/addProcessedSignal.m	/^processor = [];$/;"	v
pstring	lib/circ-toolbox/CircStat/circ_clust.m	/^    pstring = '.';$/;"	v
pstring	lib/circ-toolbox/CircStat/circ_clust.m	/^   pstring = varargin{2}; $/;"	v
pu	lib/circ-toolbox/CircStat/circ_hktest.m	/^pu = unique(idp);$/;"	v
pval	lib/circ-toolbox/CircStat/circ_cmtest.m	/^pval = 1 - chi2cdf(P,s-1);$/;"	v
pval	lib/circ-toolbox/CircStat/circ_corrcc.m	/^pval = 2 * (1 - normcdf(abs(ts)));$/;"	v
pval	lib/circ-toolbox/CircStat/circ_corrcl.m	/^pval = 1 - chi2cdf(n*rho^2,2);$/;"	v
pval	lib/circ-toolbox/CircStat/circ_hktest.m	/^    pval = [p1 p2 pI];    $/;"	v
pval	lib/circ-toolbox/CircStat/circ_ktest.m	/^  pval = 2*(1-fcdf(f, n1, n2));$/;"	v
pval	lib/circ-toolbox/CircStat/circ_ktest.m	/^  pval = 2*(1-fcdf(f, n2, n1));$/;"	v
pval	lib/circ-toolbox/CircStat/circ_medtest.m	/^pval = sum(binopdf([0:min(n1,n2) max(n1,n2):n],n,0.5));$/;"	v
pval	lib/circ-toolbox/CircStat/circ_otest.m	/^  pval = 2^(1-n) * (n-2*m) * nchoosek(n,m);  $/;"	v
pval	lib/circ-toolbox/CircStat/circ_otest.m	/^  pval = sqrt(2*pi) \/ A * exp(-pi^2\/8\/A^2);$/;"	v
pval	lib/circ-toolbox/CircStat/circ_rtest.m	/^pval = exp(sqrt(1+4*n+4*(n^2-R^2))-(1+2*n));$/;"	v
pval	lib/circ-toolbox/CircStat/circ_symtest.m	/^pval = signrank(d);$/;"	v
pval	lib/circ-toolbox/CircStat/circ_vtest.m	/^pval = 1 - normcdf(u);$/;"	v
pval	lib/circ-toolbox/CircStat/circ_wwtest.m	/^pval = 1 - fcdf(F,s-1,n-s);$/;"	v
q	lib/circ-toolbox/CircStat/circ_hktest.m	/^q = length(qu);$/;"	v
q_id	lib/circ-toolbox/CircStat/circ_hktest.m	/^        q_id = idq == qu(qq); % indices of factor2 = qq$/;"	v
q_id	lib/circ-toolbox/CircStat/circ_hktest.m	/^    q_id = idq == qu(qq);$/;"	v
qm	lib/circ-toolbox/CircStat/circ_hktest.m	/^qm = zeros(q,1); qr = qm; qn = qm;$/;"	v
qu	lib/circ-toolbox/CircStat/circ_hktest.m	/^qu = unique(idq);$/;"	v
qualFlag	lib/matlab-linspecer/linspecer.m	/^            qualFlag = 1;$/;"	v
qualFlag	lib/matlab-linspecer/linspecer.m	/^qualFlag = 0;$/;"	v
r	lib/TrialData/util/circular_mean.m	/^r = sum(w.*exp(1i*alpha),dim);$/;"	v
r	lib/TrialData/util/dpca/dpca_plot.m	/^r = [5 48 97]\/256;       %# end$/;"	v
r	lib/TrialData/util/gpfa/fastfa.m	/^    r     = rank(cX);$/;"	v
r	lib/circ-toolbox/CircStat/circ_axialmean.m	/^r = abs(zbarm);$/;"	v
r	lib/circ-toolbox/CircStat/circ_clust.m	/^r = NaN(num_unique,1);$/;"	v
r	lib/circ-toolbox/CircStat/circ_confmean.m	/^r = circ_r(alpha,w,d,dim);$/;"	v
r	lib/circ-toolbox/CircStat/circ_dist.m	/^r = angle(exp(1i*x).\/exp(1i*y));/;"	v
r	lib/circ-toolbox/CircStat/circ_dist2.m	/^r = angle(repmat(exp(1i*x),1,length(y)) ...$/;"	v
r	lib/circ-toolbox/CircStat/circ_mean.m	/^r = sum(w.*exp(1i*alpha),dim);$/;"	v
r	lib/circ-toolbox/CircStat/circ_plot.m	/^      r = circ_r(alpha) * mr;$/;"	v
r	lib/circ-toolbox/CircStat/circ_plot.m	/^      r = circ_r(alpha);$/;"	v
r	lib/circ-toolbox/CircStat/circ_r.m	/^  r = c*r;$/;"	v
r	lib/circ-toolbox/CircStat/circ_r.m	/^r = abs(r).\/sum(w,dim);$/;"	v
r	lib/circ-toolbox/CircStat/circ_r.m	/^r = sum(w.*exp(1i*alpha),dim);$/;"	v
r	lib/circ-toolbox/CircStat/circ_rtest.m	/^	r =  circ_r(alpha);$/;"	v
r	lib/circ-toolbox/CircStat/circ_rtest.m	/^  r =  circ_r(alpha,w(:),d);$/;"	v
r	lib/circ-toolbox/CircStat/circ_std.m	/^r = circ_r(alpha,w,d,dim);$/;"	v
r	lib/circ-toolbox/CircStat/circ_var.m	/^r = circ_r(alpha,w,d,dim);$/;"	v
r	lib/circ-toolbox/CircStat/circ_vmpar.m	/^r = circ_r(alpha,w,d);$/;"	v
r	lib/circ-toolbox/CircStat/circ_vmrnd.m	/^r = (1 + b^2)\/(2*b);$/;"	v
r	lib/circ-toolbox/CircStat/circ_vtest.m	/^r = circ_r(alpha,w,d);$/;"	v
r	lib/circ-toolbox/CircStat/circ_wwtest.m	/^r = circ_r(alpha,w);$/;"	v
r	lib/circ-toolbox/CircStat/examples/example2.m	/^  r = circ_r(ori,w(j,:),dori) * mw;$/;"	v
r2	lib/TrialData/util/compute_r2.m	/^r2 = zeros(numSigs,1);$/;"	v
r2_glm	lib/TrialData/BBDemoScript.m	/^r2_glm = evalModel(trial_data_glm, params);$/;"	v
r_fill	lib/NeuronTable/plotFlatTuning.m	/^    r_fill = [0 maxRadius maxRadius 0];$/;"	v
r_fill	lib/NeuronTable/plotFlatTuning.m	/^    r_fill = [repmat(curve.(sprintf('%sCurveCIlow',move_cor)),1,3) fliplr(repmat(curve.(sprintf(/;"	v
r_fill	lib/NeuronTable/plotFlatTuning.m	/^    r_fill = r_fill(~isnan(r_fill));$/;"	v
r_fill	lib/NeuronTable/plotTuning.m	/^    r_fill = [0 maxRadius maxRadius maxRadius 0];$/;"	v
r_fill	lib/NeuronTable/plotTuning.m	/^    r_fill = [fliplr(curve.CIhigh) curve.CIhigh(end) curve.CIlow(end) curve.CIlow];$/;"	v
r_scramble	lib/NeuronTable/getTDClassicalPDs.m	/^            r_scramble = zeros(num_boots,1);$/;"	v
r_true	lib/NeuronTable/getTDClassicalPDs.m	/^            r_true = mean(boot_r);$/;"	v
ranges	lib/TrialData/Tools/removeBadTrials.m	/^ranges         = [];$/;"	v
rbar	lib/circ-toolbox/CircStat/circ_ktest.m	/^rbar = (R1+R2)\/(n1+n2);$/;"	v
rcs	lib/circ-toolbox/CircStat/circ_corrcl.m	/^rcs = corr(sin(alpha),cos(alpha));$/;"	v
reach_distance	lib/TrialData/Tools/getTargetDirection.m	/^reach_distance  =  8; % cm$/;"	v
readSize	lib/TrialData/util/openNSx_td.m	/^    readSize                   = double(ChannelCount * ExtHeaderLength);$/;"	v
readTime	lib/TrialData/util/openNEV_td.m	/^                readTime = [temp(1), temp(end)];$/;"	v
read_waveforms	lib/TrialData/DataProcessing/processNEV.m	/^read_waveforms   = false; % (not implemented) whether to include waveforms for spikes. Big file /;"	v
real_hull	lib/plotMWTuningCloud.m	/^        real_hull = tuningHull_unit.S1_FR_velWeight{1};$/;"	v
recenter_for_proj	lib/TrialData/Tools/dimReduce.m	/^recenter_for_proj = false; % whether to recenter data before projecting into PC space$/;"	v
reconfigPacketID	lib/TrialData/util/openNEV_td.m	/^reconfigPacketID = 65531;$/;"	v
reconfigPacketIDIndices	lib/TrialData/util/openNEV_td.m	/^reconfigPacketIDIndices    = find(PacketIDs == reconfigPacketID);$/;"	v
record_flag	lib/TrialData/Tools/subtractConditionMean.m	/^record_flag = true; % will add a flag field$/;"	v
redBlue256	lib/TrialData/util/dpca/dpca_plot.m	/^redBlue256 = [c1;c2];$/;"	v
rejection_num_chans	lib/TrialData/DataProcessing/processNEV.m	/^rejection_num_chans = 10;$/;"	v
rejection_num_chans	lib/TrialData/util/remove_spike_artifacts.m	/^    rejection_num_chans = 3;$/;"	v
rejection_num_chans	lib/TrialData/util/remove_spike_artifacts.m	/^    rejection_num_chans = varargin{2};$/;"	v
rejection_samples	lib/TrialData/util/remove_spike_artifacts.m	/^rejection_samples = rejection_window*30000;$/;"	v
rejection_window	lib/TrialData/DataProcessing/processNEV.m	/^rejection_window = 0.0005;$/;"	v
rejection_window	lib/TrialData/util/remove_spike_artifacts.m	/^    rejection_window = 0.001;$/;"	v
rejection_window	lib/TrialData/util/remove_spike_artifacts.m	/^    rejection_window = varargin{3};  % in seconds$/;"	v
reload_NEV	lib/TrialData/DataProcessing/processNEV.m	/^reload_NEV       = false;$/;"	v
removeBadNeurons	lib/TrialData/Tools/removeBadNeurons.m	/^function [trial_data,bad_units] = removeBadNeurons(trial_data,params)$/;"	f
removeBadTrials	lib/TrialData/Tools/removeBadTrials.m	/^function [trial_data,bad_trials] = removeBadTrials(trial_data,params)$/;"	f
remove_artifacts	lib/TrialData/DataProcessing/processNEV.m	/^remove_artifacts = false; % whether to remove the artifacts$/;"	v
remove_incomplete	lib/TrialData/Tools/getRWMovements.m	/^remove_incomplete  =  false;$/;"	v
remove_nan_idx	lib/TrialData/Tools/removeBadTrials.m	/^remove_nan_idx = true;$/;"	v
remove_spike_artifacts	lib/TrialData/util/remove_spike_artifacts.m	/^function unit_structure = remove_spike_artifacts(varargin)$/;"	f
reorderTDfields	lib/TrialData/Tools/reorderTDfields.m	/^function trial_data = reorderTDfields(trial_data)$/;"	f
reorder_idx	lib/TrialData/Tools/reorderTDfields.m	/^        reorder_idx = (1:length(fn_cont_new))';$/;"	v
reorder_idx	lib/TrialData/Tools/reorderTDfields.m	/^        reorder_idx = [reorder_idx(1:og_idx); the_val; reorder_idx(og_idx+1:end)];$/;"	v
repeatEval	lib/analyzeTRT.m	/^    repeatEval = cell(num_repeats,1);$/;"	v
repeatTuning	lib/analyzeTRT.m	/^    repeatTuning = cell(num_repeats,1);$/;"	v
repeat_tic	lib/coordCorr.m	/^    repeat_tic = tic;$/;"	v
repeat_tic	lib/mwDecoders.m	/^    repeat_tic = tic;$/;"	v
repeat_timer	lib/analyzeTRT.m	/^        repeat_timer = tic;$/;"	v
res	lib/circ-toolbox/CircStat/circ_kuipertest.m	/^    res = 100;$/;"	v
resample_signals	lib/TrialData/DataProcessing/parseFileByTrial.m	/^function out = resample_signals(data,var_list,bin_size,start_time,end_time)$/;"	f
resolution	lib/circ-toolbox/CircStat/circ_samplecdf.m	/^    resolution = 100;$/;"	v
response_var	lib/NeuronTable/getTDPDs.m	/^response_var = get_vars(trial_data(trial_idx),out_signals);$/;"	v
response_var	lib/NeuronTable/getTuningCurves.m	/^response_var = get_vars(trial_data,out_signals);$/;"	v
response_var_in_bin	lib/NeuronTable/getTuningCurves.m	/^    response_var_in_bin = response_var(dir_bins==bins(i),:)';$/;"	v
result	lib/TrialData/Analysis/runGPFA.m	/^result = neuralTraj_td(runIdx, dat, save_dir, 'method', method, 'xDim', xDim,...$/;"	v
result	lib/TrialData/util/gpfa/neuralTraj_td.m	/^        result = gpfaEngine_td(seqTrain, seqTest, fname,...$/;"	v
result	lib/TrialData/util/gpfa/neuralTraj_td.m	/^        result = twoStageEngine_matt(seqTrain, seqTest, fname,...$/;"	v
result	lib/TrialData/util/gpfa/neuralTraj_td.m	/^    result = [];$/;"	v
result	lib/TrialData/util/gpfa/twoStageEngine_td.m	/^result = [];$/;"	v
return_idx	lib/NeuronTable/getNTidx.m	/^                return_idx = return_idx(1:bounds{2});$/;"	v
return_idx	lib/NeuronTable/getNTidx.m	/^                return_idx = return_idx(end-(bounds{2}-1):end);$/;"	v
return_idx	lib/NeuronTable/getNTidx.m	/^        return_idx = return_idx( 1+floor(bounds(1)*length(return_idx)) : floor(bounds(2)*length(/;"	v
return_idx	lib/NeuronTable/getNTidx.m	/^        return_idx = return_idx(bounds(1):bounds(2));$/;"	v
return_idx	lib/NeuronTable/getNTidx.m	/^    return_idx = return_idx(temp(1:n));$/;"	v
return_idx	lib/NeuronTable/getNTidx.m	/^return_idx = find(idx);$/;"	v
return_idx	lib/TrialData/Tools/getTDidx.m	/^                return_idx = return_idx(1:bounds{2});$/;"	v
return_idx	lib/TrialData/Tools/getTDidx.m	/^                return_idx = return_idx(end-(bounds{2}-1):end);$/;"	v
return_idx	lib/TrialData/Tools/getTDidx.m	/^            return_idx = return_idx( 1+floor(bounds(1)*length(return_idx)) : floor(bounds(2)*len/;"	v
return_idx	lib/TrialData/Tools/getTDidx.m	/^            return_idx = return_idx(bounds(1):bounds(2));$/;"	v
return_idx	lib/TrialData/Tools/getTDidx.m	/^    return_idx = return_idx(temp(1:n));$/;"	v
return_idx	lib/TrialData/Tools/getTDidx.m	/^return_idx = find(idx);$/;"	v
rho	lib/TrialData/Analysis/pairwiseCorr.m	/^    rho = rho(sort_idx,sort_idx);$/;"	v
rho	lib/TrialData/Analysis/pairwiseCorr.m	/^    rho = temp1 + temp2;$/;"	v
rho	lib/TrialData/Analysis/pairwiseCorr.m	/^rho = method(data).*(-1*eye(size(data,2))+ones(size(data,2)));$/;"	v
rho	lib/circ-toolbox/CircStat/circ_corrcc.m	/^rho = num \/ den;	$/;"	v
rho	lib/circ-toolbox/CircStat/circ_corrcl.m	/^rho = sqrt((rxc^2 + rxs^2 - 2*rxc*rxs*rcs)\/(1-rcs^2));$/;"	v
rho_p	lib/circ-toolbox/CircStat/circ_moment.m	/^rho_p = abs(mp);$/;"	v
ridx	lib/circ-toolbox/CircStat/circ_raotest.m	/^ridx = find(table(:,1)>=N,1);    $/;"	v
roundedD	lib/TrialData/util/dpca/dpca_plot.m	/^    roundedD = floor(d);$/;"	v
row	lib/TrialData/util/dpca/dpca_plot.m	/^        row = find(margRowSeq == m, 1);$/;"	v
row	lib/circ-toolbox/CircStat/circ_kuipertest.m	/^   row = length(nn) - sum(n<nn); $/;"	v
row_tally	lib/TrialData/Plotting/visData.m	/^            row_tally = row_tally + traj_rows;$/;"	v
row_tally	lib/TrialData/Plotting/visData.m	/^        row_tally = row_tally + kin_rows;$/;"	v
row_tally	lib/TrialData/Plotting/visData.m	/^        row_tally = row_tally + spike_rows;$/;"	v
row_tally	lib/TrialData/Plotting/visData.m	/^    row_tally = 0;$/;"	v
row_tally	lib/TrialData/Plotting/visData.m	/^    row_tally = row_tally + event_rows;$/;"	v
rr	lib/circ-toolbox/CircStat/circ_hktest.m	/^  rr = besseli(1,kk) \/ besseli(0,kk);$/;"	v
runDir	lib/TrialData/util/gpfa/neuralTraj_td.m	/^    runDir = sprintf([directory '\\\\mat_resultsgpfa\\\\run%s'], runIdx);$/;"	v
runGPFA	lib/TrialData/Analysis/runGPFA.m	/^function [trial_data, gpfa_out] = runGPFA(trial_data, params)$/;"	f
runIdx	lib/TrialData/Analysis/runGPFA.m	/^runIdx = ['-' [arrays{:}]];$/;"	v
run_func	lib/TrialData/DataProcessing/loadTDfiles.m	/^function [trial_data,out_params] = run_func(trial_data,funcCall)$/;"	f
rw	lib/circ-toolbox/CircStat/circ_wwtest.m	/^rw = sum(pn.*pr)\/n;$/;"	v
rw_td	lib/TrialData/Tools/getRWMovements.m	/^    rw_td = getMoveOnsetAndPeak(rw_td,struct( ...$/;"	v
rw_td	lib/TrialData/Tools/getRWMovements.m	/^rw_td = reorderTDfields(rw_td);$/;"	v
rw_td	lib/TrialData/Tools/getRWMovements.m	/^rw_td = repmat(struct(),1,num_moves);$/;"	v
rxc	lib/circ-toolbox/CircStat/circ_corrcl.m	/^rxc = corr(x,cos(alpha));$/;"	v
rxs	lib/circ-toolbox/CircStat/circ_corrcl.m	/^rxs = corr(x,sin(alpha));$/;"	v
s	lib/TrialData/Analysis/getModel.m	/^                    s = s_temp;$/;"	v
s	lib/TrialData/Analysis/getModel.m	/^                s = rmfield(s,{'resid','residp','residd','resida','wts'});$/;"	v
s	lib/TrialData/Analysis/getModel.m	/^s                    =  [];          %    provided as a params input$/;"	v
s	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^    s = td(trial).(which_field)(:,field_idx);$/;"	v
s	lib/TrialData/util/dpca/dpca_plot.m	/^    s = subplot(4,4,options.legendSubplot);$/;"	v
s	lib/circ-toolbox/CircKSDensity/circ_ksdensity.m	/^                s = circ_median(abs(T - circ_median(T)))\/0.6745;$/;"	v
s	lib/circ-toolbox/CircKSDensity/circ_ksdensity.m	/^                s = circ_std(T);$/;"	v
s	lib/circ-toolbox/CircKSDensity/circ_ksdensity.m	/^                s = iqr(T)\/1.349;$/;"	v
s	lib/circ-toolbox/CircKSDensity/circ_ksdensity.m	/^                s = median(abs(T - median(T)))\/0.6745;$/;"	v
s	lib/circ-toolbox/CircKSDensity/circ_ksdensity.m	/^                s = min(circ_std(T), circ_iqr(T)\/1.349);$/;"	v
s	lib/circ-toolbox/CircKSDensity/circ_ksdensity.m	/^                s = min(std(T), iqr(T)\/1.349);$/;"	v
s	lib/circ-toolbox/CircKSDensity/circ_ksdensity.m	/^                s = std(T);$/;"	v
s	lib/circ-toolbox/CircStat/circ_cmtest.m	/^s = length(u);$/;"	v
s	lib/circ-toolbox/CircStat/circ_plot.m	/^      s = true;$/;"	v
s	lib/circ-toolbox/CircStat/circ_plot.m	/^      s = varargin{1};$/;"	v
s	lib/circ-toolbox/CircStat/circ_plot.m	/^      s = varargin{3};$/;"	v
s	lib/circ-toolbox/CircStat/circ_std.m	/^s = sqrt(2*(1-r));      % 26.20$/;"	v
s	lib/circ-toolbox/CircStat/circ_var.m	/^s = 2 * S;/;"	v
s	lib/circ-toolbox/CircStat/circ_wwtest.m	/^s = length(u);$/;"	v
s0	lib/circ-toolbox/CircStat/circ_std.m	/^s0 = sqrt(-2*log(r));    % 26.21$/;"	v
s1	lib/TrialData/util/dpca/dpca.m	/^    s1 = warning('error','MATLAB:singularMatrix');$/;"	v
s1PCADown	lib/TrialData/BBDemoScript.m	/^s1PCADown = cat(1,downMove.S1_pca);$/;"	v
s1PCARight	lib/TrialData/BBDemoScript.m	/^s1PCARight = cat(1, rightMove.S1_pca);$/;"	v
s1PCAUp	lib/TrialData/BBDemoScript.m	/^s1PCAUp = cat(1, upMove.S1_pca);$/;"	v
s2	lib/TrialData/util/dpca/dpca.m	/^    s2 = warning('error','MATLAB:nearlySingularMatrix');$/;"	v
s_thresh	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^s_thresh      =  10;$/;"	v
sample_weight	lib/NeuronTable/getTDClassicalPDs.m	/^    sample_weight = 1.\/interp1(test_dirs,pdf,inDir);$/;"	v
samprate	lib/TrialData/DataProcessing/convertDataToTD.m	/^samprate        =  [];$/;"	v
samprate	lib/TrialData/DataProcessing/parseFileByTrial.m	/^    samprate = 1\/mode(diff(emg.t));$/;"	v
save_NEV_mat	lib/TrialData/DataProcessing/processNEV.m	/^save_NEV_mat     = false;$/;"	v
save_dir	lib/TrialData/Analysis/runGPFA.m	/^save_dir    =  [];$/;"	v
savesuffix	calculateCoordCorrespondence.m	/^savesuffix = '_coordResults_run20180813.mat';$/;"	v
savesuffix	calculateDecoders.m	/^savesuffix = '_decodingResults_run20181029.mat';$/;"	v
savesuffix	calculateEncoders.m	/^savesuffix = '_encodingResults_9MuscPCs_run20180924.mat';$/;"	v
sbar	lib/circ-toolbox/CircStat/circ_moment.m	/^sbar = sum(sin(p*alpha).*w,dim)\/n;$/;"	v
scale	lib/TrialData/util/gpfa/fastfa.m	/^    scale = exp(2*sum(log(diag(chol(cX))))\/xDim);$/;"	v
scale	lib/TrialData/util/gpfa/fastfa.m	/^    scale = geomean(e(1:r));$/;"	v
scalingFactor	lib/TrialData/util/dpca/dpca.m	/^            scalingFactor = (A(:)'*B(:))\/(B(:)'*B(:));$/;"	v
scatters	makePlotsTRT.m	/^    scatters = figure('defaultaxesfontsize',18);$/;"	v
score_in	lib/TrialData/Analysis/getPotentSpace.m	/^score_in = pca_info_in.scores;$/;"	v
score_out	lib/TrialData/Analysis/getPotentSpace.m	/^score_out = pca_info_out.scores;$/;"	v
scramble_coef	lib/NeuronTable/getTDPDs.m	/^        scramble_coef = bootstrp(num_boots,@(response) scramblefunc(response), response_var(:,ui/;"	v
scramble_high	lib/NeuronTable/getTDClassicalPDs.m	/^            scramble_high = prctile(r_scramble,(1-alpha_cutoff)*100);$/;"	v
scramble_high	lib/NeuronTable/getTDPDs.m	/^                scramble_high = prctile(scramble_moddepths,95);$/;"	v
scramble_moddepths	lib/NeuronTable/getTDPDs.m	/^                scramble_moddepths = sqrt(sum(scramble_coef(:,(2*in_signal_idx):(2*in_signal_idx/;"	v
scramblefunc	lib/NeuronTable/getTDPDs.m	/^scramblefunc = @(data) transpose(glmfit(input_var,data,distribution));$/;"	v
scree_noise	lib/TrialData/Analysis/estimateDimensionality.m	/^scree_noise         = zeros(size(eigenv_noise,1),num_iter);$/;"	v
screenNames	lib/TrialData/DataProcessing/parseFileByTrial.m	/^            screenNames = {sortedUnits.label};$/;"	v
sd	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^            sd = -rms(d);$/;"	v
segmentCount	lib/TrialData/util/openNSx_td.m	/^        segmentCount = segmentCount + 1;$/;"	v
segmentCount	lib/TrialData/util/openNSx_td.m	/^    segmentCount = 0;$/;"	v
segmentCount	lib/TrialData/util/openNSx_td.m	/^    segmentCount = 1;$/;"	v
segmentsThatAreZero	lib/TrialData/util/openNSx_td.m	/^    segmentsThatAreZero = find(NSx.MetaTags.DataPoints == 0);$/;"	v
seq	lib/TrialData/util/gpfa/getSeq_td.m	/^    seq = seq(trialsToKeep);$/;"	v
seq	lib/TrialData/util/gpfa/getSeq_td.m	/^  seq = [];$/;"	v
seq	lib/TrialData/util/gpfa/neuralTraj_td.m	/^seq  = getSeq_td(dat, binWidth, extraOpts{:});$/;"	v
seqTest	lib/TrialData/util/gpfa/gpfaEngine_td.m	/^        seqTest = cosmoother_gpfa_viaOrth(seqTest, estParams, 1:xDim);$/;"	v
seqTest	lib/TrialData/util/gpfa/gpfaEngine_td.m	/^        seqTest = cosmoother_gpfa_viaOrth_fast(seqTest, estParams, 1:xDim);$/;"	v
seqTest	lib/TrialData/util/gpfa/neuralTraj_td.m	/^    seqTest       = seq(testTrialIdx);$/;"	v
seqTest	lib/TrialData/util/gpfa/postprocess.m	/^      seqTest        = segmentByTrial(ws.kern(k).seqTest, Xorth, 'xorth');    $/;"	v
seqTest	lib/TrialData/util/gpfa/postprocess.m	/^      seqTest        = segmentByTrial(ws.seqTest, Xorth, 'xorth');            $/;"	v
seqTest	lib/TrialData/util/gpfa/postprocess.m	/^      seqTest = segmentByTrial(ws.kern(k).seqTest, Xorth, 'xorth');$/;"	v
seqTest	lib/TrialData/util/gpfa/postprocess.m	/^  seqTest   = [];$/;"	v
seqTrain	lib/TrialData/Analysis/runGPFA.m	/^seqTrain = ord_seqTrain;$/;"	v
seqTrain	lib/TrialData/util/gpfa/neuralTraj_td.m	/^    seqTrain      = seq(trainTrialIdx);$/;"	v
seqTrain	lib/TrialData/util/gpfa/postprocess.m	/^    seqTrain        = segmentByTrial(ws.kern(k).seqTrain, X, 'xorth');$/;"	v
seqTrain	lib/TrialData/util/gpfa/postprocess.m	/^    seqTrain        = segmentByTrial(ws.kern(k).seqTrain, Xorth, 'xorth');    $/;"	v
seqTrain	lib/TrialData/util/gpfa/postprocess.m	/^    seqTrain        = segmentByTrial(ws.seqTrain, Xorth, 'xorth');$/;"	v
seqTrain	lib/TrialData/util/gpfa/postprocess.m	/^  seqTrain  = [];$/;"	v
seqTrainCut	lib/TrialData/util/gpfa/gpfaEngine_td.m	/^    seqTrainCut = cutTrials(seqTrain, 'segLength', Inf);$/;"	v
seqTrainCut	lib/TrialData/util/gpfa/gpfaEngine_td.m	/^seqTrainCut = cutTrials(seqTrain, extraOpts{:});$/;"	v
set1	lib/matlab-linspecer/linspecer.m	/^set1 = brighten(colorBrew2mat({[ 55, 126, 184]*.85;[228, 26, 28];[ 77, 175, 74];[ 255, 127, 0];[/;"	v
set1JL	lib/matlab-linspecer/linspecer.m	/^set1JL = brighten(colorBrew2mat({[228, 26, 28];[ 55, 126, 184]; [ 77, 175, 74];[ 255, 127, 0];[ /;"	v
set3	lib/matlab-linspecer/linspecer.m	/^  set3 = colorBrew2mat({[141, 211, 199];[ 255, 237, 111];[ 190, 186, 218];[ 251, 128, 114];[ 128/;"	v
set3	lib/matlab-linspecer/linspecer.m	/^set3 = dim(set3,.93);$/;"	v
sfr_noise_diff	lib/TrialData/Analysis/estimateDimensionality.m	/^    sfr_noise_diff  = (sfr_noise1 - sfr_noise2)\/sqrt(2*min(nbr_trials));$/;"	v
sg	lib/TrialData/DataProcessing/parseFileByTrial.m	/^sg = zeros(length(unit_idx),2);$/;"	v
sg	lib/TrialData/Tools/stripSpikeSorting.m	/^    sg = trial_data(1).([fn_array{iArray} '_unit_guide']);$/;"	v
sg_new	lib/TrialData/Tools/stripSpikeSorting.m	/^    sg_new = [elecs, zeros(length(elecs),1)];$/;"	v
shift_idx	lib/TrialData/Tools/reorderTDfields.m	/^        shift_idx = find(~cellfun(@isempty,regexp(fn_cont_new,shift_idx_all{i},'ONCE')));$/;"	v
shift_idx_all	lib/TrialData/Tools/reorderTDfields.m	/^shift_idx_all = fn_cont(~cellfun(@isempty,regexp(fn_cont,'_shift','ONCE')));$/;"	v
shift_tables	lib/calculateEncoderPDShiftErr.m	/^    shift_tables = calculatePDShiftTables(encoderResults,[strcat('glm_',model_aliases,'_model') /;"	v
shift_tables	lib/calculatePDShiftTables.m	/^    shift_tables = cell(1,length(model_names));$/;"	v
shift_tables	makePlotsTRT.m	/^        shift_tables = calculatePDShiftTables(encoderResults);$/;"	v
shift_tables	makePlotsTRT.m	/^        shift_tables = calculatePDShiftTables(encoderResults,[strcat('glm_',models_to_plot,'_mod/;"	v
sig	lib/TrialData/Tools/getEnvelope.m	/^        sig  = sig - repmat(m,size(sig,1),1);$/;"	v
sig	lib/TrialData/Tools/getEnvelope.m	/^        sig = 2 * sig.*sig;$/;"	v
sig	lib/TrialData/Tools/getEnvelope.m	/^        sig = abs(sqrt(sig));$/;"	v
sig	lib/TrialData/Tools/getEnvelope.m	/^        sig = sig(:,signals{iSig,2});$/;"	v
sig	lib/TrialData/Tools/getEnvelope.m	/^        sig = trial_data(trial).(signals{iSig,1});$/;"	v
sig	lib/TrialData/Tools/getNorm.m	/^        sig = trial_data(trial).(signals{iSig,1});$/;"	v
sigID	lib/plotEncoderPR2.m	/^        sigID = avgEval.signalID(i,:);$/;"	v
sig_data	lib/TrialData/DataProcessing/convertDataToTD.m	/^sig_data = repmat(struct('type',[],'meta',[],'name',[],'duration',[],'samprate',[],'labels',[],'/;"	v
sig_name	lib/TrialData/Tools/dimReduce.m	/^        sig_name = cellfun(@(x) strrep(x,'_spikes',''),signals(:,1),'uni',0);$/;"	v
sig_name	lib/TrialData/Tools/dimReduce.m	/^sig_name         = '';    % output will be in field "SIG_NAMES_ALGORITHM". Defaults to concatena/;"	v
sig_name_in	lib/TrialData/Analysis/getPotentSpace.m	/^sig_name_in = cellfun(@(x) strrep(x,'_spikes',''),in_signals(:,1),'uni',0);$/;"	v
sig_name_out	lib/TrialData/Analysis/getPotentSpace.m	/^sig_name_out = cellfun(@(x) strrep(x,'_spikes',''),out_signals(:,1),'uni',0);$/;"	v
sig_names	lib/TrialData/Tools/addCorrelatedNoise.m	/^sig_names = cellfun(@(x) strrep(x,'_spikes',''),signals(:,1),'uni',0);$/;"	v
sig_tic	lib/NeuronTable/getTDClassicalPDs.m	/^    sig_tic = tic;$/;"	v
sigma	lib/circ-toolbox/CircKSDensity/circ_ksdensity.m	/^        sigma = k*s*length(T)^-0.2;$/;"	v
sigma	lib/circ-toolbox/CircKSDensity/circ_ksdensity.m	/^        sigma = sigma*180\/pi;$/;"	v
signal	lib/TrialData/Analysis/estimateDimensionality.m	/^    signal = [signals{:,1}];$/;"	v
signal	lib/TrialData/Analysis/estimateDimensionality.m	/^    signal = signals{1,1};$/;"	v
signal	lib/TrialData/Tools/getDifferential.m	/^    signal = signals{iSig,1};$/;"	v
signalID	lib/NeuronTable/compareTuning.m	/^signalID = curves{1}.signalID;$/;"	v
signalIDs	lib/mwEncoders.m	/^    signalIDs = unit_guide;$/;"	v
signalIDs	lib/plotMWTuningCloud.m	/^    signalIDs = unique(tuningHull(:,{'monkey','date','signalID'}));$/;"	v
signal_idx	lib/TrialData/util/subfcn/check_signals.m	/^        signal_idx = repmat({'all'},length(signals),1);$/;"	v
signal_idx	lib/TrialData/util/subfcn/check_signals.m	/^        signal_idx = signals(2);$/;"	v
signal_idx	lib/TrialData/util/subfcn/check_signals.m	/^        signal_idx = {1:size(trial_data(1).(signals{1}),2)};$/;"	v
signal_info	lib/TrialData/DataProcessing/convertDataToTD.m	/^    signal_info = varargin{1};$/;"	v
signal_info	lib/TrialData/DataProcessing/initSignalStruct.m	/^signal_info = struct( ...$/;"	v
signals	lib/TrialData/Analysis/estimateDimensionality.m	/^signals       =  [];$/;"	v
signals	lib/TrialData/Analysis/estimateDimensionality.m	/^signals = check_signals(trial_data(1),signals);$/;"	v
signals	lib/TrialData/Analysis/getDPCA.m	/^signals        =  [];$/;"	v
signals	lib/TrialData/Analysis/getDPCA.m	/^signals        = check_signals(trial_data(1),signals);$/;"	v
signals	lib/TrialData/Analysis/pairwiseCorr.m	/^signals          =  [];$/;"	v
signals	lib/TrialData/Analysis/pairwiseCorr.m	/^signals = check_signals(trial_data(1),signals);$/;"	v
signals	lib/TrialData/Tools/addCorrelatedNoise.m	/^signals  =  {};$/;"	v
signals	lib/TrialData/Tools/addCorrelatedNoise.m	/^signals = check_signals(td(1),signals);$/;"	v
signals	lib/TrialData/Tools/dimReduce.m	/^        signals = params;$/;"	v
signals	lib/TrialData/Tools/dimReduce.m	/^signals         =  getTDfields(trial_data,'spikes');$/;"	v
signals	lib/TrialData/Tools/dimReduce.m	/^signals = check_signals(trial_data(1),signals);$/;"	v
signals	lib/TrialData/Tools/getDifferential.m	/^        signals = params;$/;"	v
signals	lib/TrialData/Tools/getDifferential.m	/^signals   = ''; % signal to process$/;"	v
signals	lib/TrialData/Tools/getDifferential.m	/^signals = check_signals(trial_data,signals);$/;"	v
signals	lib/TrialData/Tools/getEnvelope.m	/^    signals = params;$/;"	v
signals	lib/TrialData/Tools/getEnvelope.m	/^signals  = '';$/;"	v
signals	lib/TrialData/Tools/getEnvelope.m	/^signals = check_signals(trial_data,signals);$/;"	v
signals	lib/TrialData/Tools/getNorm.m	/^    signals = params;$/;"	v
signals	lib/TrialData/Tools/getNorm.m	/^signals = check_signals(trial_data,signals);$/;"	v
signals	lib/TrialData/Tools/getSig.m	/^    signals = {signals};$/;"	v
signals	lib/TrialData/Tools/getSig.m	/^signals = check_signals(trial_data,signals);$/;"	v
signals	lib/TrialData/Tools/smoothSignals.m	/^        signals = params;$/;"	v
signals	lib/TrialData/Tools/smoothSignals.m	/^signals         =  []; $/;"	v
signals	lib/TrialData/Tools/smoothSignals.m	/^signals = check_signals(trial_data(1),signals);$/;"	v
signals	lib/TrialData/Tools/smoothSignals.m	/^signals = signals(:,1); % don't need the idx if they exist$/;"	v
signals	lib/TrialData/Tools/softNormalize.m	/^        signals = params;$/;"	v
signals	lib/TrialData/Tools/softNormalize.m	/^signals  =  getTDfields(trial_data,'spikes');$/;"	v
signals	lib/TrialData/Tools/softNormalize.m	/^signals = check_signals(trial_data,signals);$/;"	v
signals	lib/TrialData/Tools/sqrtTransform.m	/^    signals = getTDfields(trial_data,'spikes');$/;"	v
signals	lib/TrialData/Tools/sqrtTransform.m	/^signals = check_signals(trial_data(1),signals);$/;"	v
signals	lib/TrialData/Tools/sqrtTransform.m	/^signals = signals(:,1); % don't need the idx if they exist$/;"	v
signals	lib/TrialData/Tools/zscoreSignals.m	/^        signals = params;$/;"	v
signals	lib/TrialData/Tools/zscoreSignals.m	/^signals  =  getTDfields(trial_data,'spikes');$/;"	v
signals	lib/TrialData/Tools/zscoreSignals.m	/^signals = check_signals(trial_data,signals);$/;"	v
signals	lib/TrialData/Tools/zscoreSignals.m	/^signals = signals(:,1); % you don't need the idx if they exist, just do it for them all$/;"	v
signals	lib/TrialData/dPCA_demo.m	/^signals = {'PMd_spikes', 'all'; 'M1_spikes','all'};$/;"	v
signals	lib/TrialData/util/subfcn/check_signals.m	/^        signals = signals(1);$/;"	v
signals	lib/TrialData/util/subfcn/check_signals.m	/^    signals = [signals, signal_idx];$/;"	v
signifTrace	lib/TrialData/util/dpca/dpca_plot.m	/^        signifTrace = [];$/;"	v
signifTrace	lib/TrialData/util/dpca/dpca_plot.m	/^        signifTrace = options.componentsSignif(cc,:);$/;"	v
sincos	lib/TrialData/Analysis/getLearningMetrics.m	/^                sincos = [sin(theta'*(1:num_freqs)) cos(theta'*(1:num_freqs))];$/;"	v
skipFactor	lib/TrialData/util/openNSx_td.m	/^            skipFactor = inputArgument;$/;"	v
skipFactor	lib/TrialData/util/openNSx_td.m	/^            skipFactor = str2num(inputArgument(3:end)); %#ok<ST2NM>$/;"	v
smoothSignals	lib/TrialData/Tools/smoothSignals.m	/^function trial_data = smoothSignals(trial_data,params)$/;"	f
smooth_data	lib/TrialData/util/smooth_data.m	/^function data_smooth = smooth_data(data,dt,kernel_SD)$/;"	f
softNormalize	lib/TrialData/Tools/softNormalize.m	/^function trial_data = softNormalize(trial_data,params)$/;"	f
sort_idx	lib/TrialData/Analysis/pairwiseCorr.m	/^        sort_idx = cat(1,temp{:});$/;"	v
sort_idx	lib/TrialData/Analysis/pairwiseCorr.m	/^        sort_idx = cluster_rho(rho);$/;"	v
sort_idx	lib/TrialData/Analysis/pairwiseCorr.m	/^    sort_idx = 1:size(rho,2);$/;"	v
sort_idx	lib/TrialData/Analysis/pairwiseCorr.m	/^    sort_idx = [sort_idx; idx(I)];$/;"	v
sort_idx	lib/TrialData/Analysis/pairwiseCorr.m	/^sort_idx = [];$/;"	v
sortedUnits	lib/TrialData/DataProcessing/parseFileByTrial.m	/^            sortedUnits = chanNames(find(~ismember([chanNames.ID],exclude_units) & strcmpi({chan/;"	v
space_alias	lib/plotMWTuningSurfaces.m	/^    space_alias = {'PM','DL'};$/;"	v
space_idx	lib/plotMWTuningCloud.m	/^        space_idx = tuningHull.spaceNum == spacenum;$/;"	v
speed1	lib/TrialData/BBDemoScript.m	/^speed1 = cat(2, trial_data_movement.speed);$/;"	v
sph	lib/TrialData/Tools/addCoordPoint2TD.m	/^    sph = [az el r];$/;"	v
spike_method	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^spike_method    = 'threshold'; % 'threshold', later: 'template'?$/;"	v
spike_rows	lib/TrialData/Plotting/visData.m	/^spike_rows         =   4;        % how many rows for spike markers$/;"	v
spike_threshold	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^spike_threshold = 3;   % x RMS$/;"	v
spikes	lib/TrialData/Tools/addFiringRates.m	/^            spikes = trial_data(trial_idx).([array '_spikes']);$/;"	v
spikes_resamp	lib/NeuronTable/getTDClassicalPDs.m	/^                spikes_resamp = datasample(outArr(:,out_signal_idx),length(inDir),'Weights',samp/;"	v
spikes_resamp	lib/NeuronTable/getTDClassicalPDs.m	/^            spikes_resamp = outArr(resamp_idx,out_signal_idx);$/;"	v
spiking_chans	lib/TrialData/DataProcessing/processNEV.m	/^spiking_chans    = 1:96;$/;"	v
spiking_chans	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^spiking_chans   = 1:96;$/;"	v
spiking_inputs	lib/TrialData/subspace_demo.m	/^spiking_inputs = {'M1_spikes'};$/;"	v
spk	lib/circ-toolbox/CircStat/examples/example2.m	/^    spk = reshape(w([i j],:)',1,numel(w([i j],:)));$/;"	v
spk	lib/circ-toolbox/CircStat/examples/example2.m	/^  spk = w(i,:);$/;"	v
spk	lib/circ-toolbox/CircStat/examples/example2.m	/^spk = reshape(w',1,numel(w));$/;"	v
splitDigiValues	lib/TrialData/util/openNEV_td.m	/^            splitDigiValues = regexp(DigiValues(2:end), '*', 'split')';$/;"	v
splitTD	lib/TrialData/Tools/splitTD.m	/^function td_s = splitTD(trial_data,params)$/;"	f
split_idx	lib/TrialData/Tools/splitTD.m	/^    split_idx = td.(split_idx_name);$/;"	v
split_idx_name	lib/TrialData/Tools/splitTD.m	/^        split_idx_name = params;$/;"	v
split_idx_name	lib/TrialData/Tools/splitTD.m	/^split_idx_name     =  'idx_trial_start';$/;"	v
sqrtTransform	lib/TrialData/Tools/sqrtTransform.m	/^function trial_data = sqrtTransform(trial_data,signals)$/;"	f
sqrt_transform	lib/TrialData/Tools/dimReduce.m	/^sqrt_transform   = false; % square root transform before reduction (projections don't have it) $/;"	v
square_sum	lib/mwDecoders.m	/^    square_sum = @(x) sum(x.^2,1)*[1 1 1 0 0 0; 0 0 0 1 1 1]';$/;"	v
startEps	lib/TrialData/util/gpfa/gpfaEngine_td.m	/^startEps      = 1e-3;$/;"	v
startTau	lib/TrialData/util/gpfa/gpfaEngine_td.m	/^startTau      = 100; % in msec$/;"	v
start_idx	lib/TrialData/Analysis/pairwiseCorr.m	/^        start_idx = [0 cellfun(@length,neurons)];$/;"	v
start_idx	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^start_idx     =  'idx_goCueTime';$/;"	v
start_idx_name	lib/TrialData/Tools/getRWTargetDirection.m	/^start_idx_name = 'cursor_start';$/;"	v
start_idx_offset	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^start_idx_offset = 0;$/;"	v
start_name	lib/TrialData/Tools/getRWMovements.m	/^start_name         =  'idx_trial_start';$/;"	v
start_name	lib/TrialData/Tools/splitTD.m	/^start_name         =  'idx_trial_start';$/;"	v
starter	lib/NeuronTable/getTDClassicalPDs.m	/^starter = makeNeuronTableStarter(trial_data,params);$/;"	v
starter	lib/NeuronTable/getTDPDs.m	/^starter = makeNeuronTableStarter(trial_data,params);$/;"	v
stats	lib/TrialData/Tools/dimReduce.m	/^            stats = [];$/;"	v
stats	lib/circ-toolbox/CircStat/examples/example2.m	/^stats = zeros(3,10);$/;"	v
stattestPDShiftErr	lib/stattestPDShiftErr.m	/^function [h,p] = stattestPDShiftErr(err,modelcompare,tails,num_repeats,num_folds)$/;"	f
std_err	lib/stattestPDShiftErr.m	/^    std_err = sqrt(var(diffstat)*correction);$/;"	v
std_err_err	makePlotsTRT.m	/^            std_err_err = sqrt(correction*var_err);$/;"	v
str1	lib/TrialData/util/gpfa/plot3D_td.m	/^    str1 = sprintf('$$\\\\tilde{\\\\mathbf x}_{%d,:}$$', dimsToPlot(1));$/;"	v
str1	lib/TrialData/util/gpfa/plot3D_td.m	/^    str1 = sprintf('$${\\\\mathbf x}_{%d,:}$$', dimsToPlot(1));$/;"	v
str2	lib/TrialData/util/gpfa/plot3D_td.m	/^    str2 = sprintf('$$\\\\tilde{\\\\mathbf x}_{%d,:}$$', dimsToPlot(2));$/;"	v
str2	lib/TrialData/util/gpfa/plot3D_td.m	/^    str2 = sprintf('$${\\\\mathbf x}_{%d,:}$$', dimsToPlot(2));$/;"	v
str3	lib/TrialData/util/gpfa/plot3D_td.m	/^    str3 = sprintf('$$\\\\tilde{\\\\mathbf x}_{%d,:}$$', dimsToPlot(3));$/;"	v
str3	lib/TrialData/util/gpfa/plot3D_td.m	/^    str3 = sprintf('$${\\\\mathbf x}_{%d,:}$$', dimsToPlot(3));$/;"	v
stretchSignals	lib/TrialData/Tools/stretchSignals.m	/^function trial_data = stretchSignals(trial_data,params)$/;"	f
stretch_flag	lib/TrialData/Tools/stretchSignals.m	/^stretch_flag = true; % will add a flag field saying it's stretched$/;"	v
stripSpikeSorting	lib/TrialData/Tools/stripSpikeSorting.m	/^function trial_data = stripSpikeSorting(trial_data)$/;"	f
strip_sort	lib/TrialData/DataProcessing/processNEV.m	/^strip_sort       = false;  % whether to ignore unit sort codes$/;"	v
subplot_grid	lib/TrialData/Plotting/visData.m	/^subplot_grid = repmat((0:num_rows-1)'*num_cols,1,num_cols) + repmat(1:num_cols,num_rows,1);$/;"	v
subplots	lib/TrialData/util/dpca/dpca_plot.m	/^        subplots = [subplots (i-1)*4+2:(i-1)*4+2 + length(moreComponents) - 1];$/;"	v
subplots	lib/TrialData/util/dpca/dpca_plot.m	/^        subplots = subplots(1:numCompToShow);$/;"	v
subplots	lib/TrialData/util/dpca/dpca_plot.m	/^    subplots = [2 3 4 6 7 8 10 11 12 14 15 16];$/;"	v
subplots	lib/TrialData/util/dpca/dpca_plot.m	/^    subplots = [];$/;"	v
subsets	lib/TrialData/util/dpca/dpca_marginalize.m	/^function S = subsets(X)$/;"	f
subtractConditionMean	lib/TrialData/Tools/subtractConditionMean.m	/^function trial_data = subtractConditionMean(trial_data,params)$/;"	f
sz	lib/circ-toolbox/CircStat/circ_otest.m	/^  sz = circ_ang2rad(1);$/;"	v
t	lib/TrialData/Tools/binTD.m	/^        t = 1:size(trial_data(trial).(fn_time{1}),1);$/;"	v
t	lib/TrialData/Tools/binTD.m	/^    t = 1:size(cat(1,trial_data.(fn_time{1})),1);$/;"	v
t	lib/TrialData/Tools/getTDfields.m	/^        t = 0;$/;"	v
t	lib/TrialData/Tools/trimTD.m	/^    t = 1:size(trial_data(trial).(fn_time{1}),1);$/;"	v
t	lib/TrialData/util/circular_mean.m	/^  t = circular_confmean(alpha,0.05,w,[],dim);$/;"	v
t	lib/TrialData/util/openNEV_td.m	/^t                         = double(typecast(BasicHeader(29:44), 'uint16'));$/;"	v
t	lib/TrialData/util/openNSx_td.m	/^    	t                          = dir([path fname]);$/;"	v
t	lib/TrialData/util/openNSx_td.m	/^    t                          = double(typecast(BasicHeader(287:302), 'uint16'));$/;"	v
t	lib/circ-toolbox/CircStat/circ_confmean.m	/^t = acos(t.\/R);$/;"	v
t	lib/circ-toolbox/CircStat/circ_confmean.m	/^t = zeros(size(r));$/;"	v
t	lib/circ-toolbox/CircStat/circ_mean.m	/^  t = circ_confmean(alpha,0.05,w,[],dim);$/;"	v
t	lib/circ-toolbox/CircStat/circ_mtest.m	/^t = circ_confmean(alpha,xi,w,d);$/;"	v
t	lib/circ-toolbox/CircStat/examples/example2.m	/^  t = circ_confmean(ori,[],spk,dori,2);$/;"	v
t1	lib/TrialData/Analysis/getLearningMetrics.m	/^                        t1 = trial_data(bl_idx(iTrial)).(time_window{1,1})+time_window{1,2};$/;"	v
t1	lib/TrialData/Analysis/getLearningMetrics.m	/^                    t1 = trial_data(bl_idx(iTrial)).(time_window{1,1})+time_window{1,2};$/;"	v
t1	lib/TrialData/Analysis/getLearningMetrics.m	/^                t1 = trial_data(bl_idx(iTrial)).(time_window{1,1})+time_window{1,2};$/;"	v
t1	lib/TrialData/Analysis/getLearningMetrics.m	/^            t1 = trial_data(iTrial).(time_window{1,1})+time_window{1,2};$/;"	v
t2	lib/TrialData/Analysis/getLearningMetrics.m	/^                        t2 = trial_data(bl_idx(iTrial)).(time_window{2,1})+time_window{2,2};$/;"	v
t2	lib/TrialData/Analysis/getLearningMetrics.m	/^                    t2 = trial_data(bl_idx(iTrial)).(time_window{2,1})+time_window{2,2};$/;"	v
t2	lib/TrialData/Analysis/getLearningMetrics.m	/^                t2 = trial_data(bl_idx(iTrial)).(time_window{2,1})+time_window{2,2};$/;"	v
t2	lib/TrialData/Analysis/getLearningMetrics.m	/^            t2 = trial_data(iTrial).(time_window{2,1})+time_window{2,2};$/;"	v
t2	lib/circ-toolbox/CircKSDensity/circ_ksdensity.m	/^t2 = floor(tn\/2);$/;"	v
tId	lib/TrialData/Analysis/runGPFA.m	/^    tId = seqTrain(tr).trialId;$/;"	v
tRawData	lib/TrialData/util/openNEV_td.m	/^        tRawData  = fread(FID, [Trackers.countPacketBytes Trackers.readPackets(2)], ...$/;"	v
tRawData	lib/TrialData/util/openNEV_td.m	/^    tRawData  = fread(FID, [10 Trackers.countDataPacket], '10*uint8=>uint8', Trackers.countPacke/;"	v
t_alpha	lib/circ-toolbox/CircStat/examples/example1.m	/^t_alpha = circ_confmean(alpha_rad,0.05);$/;"	v
t_beta	lib/circ-toolbox/CircStat/examples/example1.m	/^t_beta = circ_confmean(beta_rad,0.05);$/;"	v
t_bin	lib/TrialData/DataProcessing/convertDataToTD.m	/^                t_bin = (0:bin_size:sig_data(count).duration)';$/;"	v
t_bin	lib/TrialData/DataProcessing/convertDataToTD.m	/^                t_bin = (0:bin_size:sig_data(count).duration+bin_size)';$/;"	v
t_bin	lib/TrialData/DataProcessing/convertDataToTD.m	/^                t_bin = [];$/;"	v
t_bin	lib/TrialData/DataProcessing/convertDataToTD.m	/^t_bin = [t_bin; t_bin(end)+mode(diff(t_bin))];$/;"	v
t_bin	lib/TrialData/DataProcessing/parseFileByTrial.m	/^t_bin = [t_bin; t_bin(end)+mode(diff(t_bin))];$/;"	v
t_bin	lib/TrialData/Tools/binTD.m	/^            t_bin = 1:num_bins:t(end)+1;$/;"	v
t_bin	lib/TrialData/Tools/binTD.m	/^            t_bin = [1 t(end)+1];$/;"	v
t_bin	lib/TrialData/Tools/binTD.m	/^    t_bin = 1:num_bins:t(end)+1;$/;"	v
t_bin_temp	lib/TrialData/DataProcessing/convertDataToTD.m	/^        t_bin_temp = [t_bin; t_bin(end)+mode(diff(t_bin))];$/;"	v
t_end	lib/TrialData/DataProcessing/parseFileByTrial.m	/^        t_end = cds_bin.trials.endTime(iTrial) + extra_time(2);$/;"	v
t_end	lib/TrialData/Tools/trimTD.m	/^            t_end = 1+idx_end{2};$/;"	v
t_end	lib/TrialData/Tools/trimTD.m	/^            t_end = ceil(trial_data(trial).(idx_end{1}) + idx_end{2});$/;"	v
t_end	lib/TrialData/Tools/trimTD.m	/^            t_end = ceil(trial_data(trial).(idx_end{1}));$/;"	v
t_end	lib/TrialData/Tools/trimTD.m	/^            t_end = int32(idx_end{1});$/;"	v
t_end	lib/TrialData/Tools/trimTD.m	/^            t_end = length(t);$/;"	v
t_end	lib/TrialData/Tools/trimTD.m	/^            t_end = size(trial_data(trial).(fn_time{1}),1) + idx_end{2};$/;"	v
t_end	lib/TrialData/Tools/trimTD.m	/^        t_end = size(trial_data(trial).(fn_time{1}),1);$/;"	v
t_end	lib/TrialData/Tools/trimTD.m	/^        t_end = t_end(end);$/;"	v
t_fn	lib/TrialData/DataProcessing/convertDataToTD.m	/^t_fn = fn(cellfun(@(x) ~isempty(x),strfind(fn,'_t')));$/;"	v
t_lengths	lib/TrialData/DataProcessing/convertDataToTD.m	/^t_lengths = cellfun(@(x) size(trial_data.(x),1),t_fn);$/;"	v
t_max	lib/TrialData/Tools/splitTD.m	/^    t_max = size(td.(fn_time{1}),1);$/;"	v
t_min	lib/TrialData/DataProcessing/convertDataToTD.m	/^t_min = min(t_lengths);$/;"	v
t_new	lib/TrialData/Tools/trimTD.m	/^    t_new = t_start:t_end;$/;"	v
t_score	lib/stattestPDShiftErr.m	/^    t_score = mean(diffstat)\/std_err;$/;"	v
t_start	lib/TrialData/DataProcessing/parseFileByTrial.m	/^        t_start = cds_bin.trials.startTime(iTrial) - extra_time(1);$/;"	v
t_start	lib/TrialData/Tools/trimTD.m	/^            t_start = 1+idx_start{2};$/;"	v
t_start	lib/TrialData/Tools/trimTD.m	/^            t_start = floor(trial_data(trial).(idx_start{1}) + idx_start{2});$/;"	v
t_start	lib/TrialData/Tools/trimTD.m	/^            t_start = floor(trial_data(trial).(idx_start{1}));$/;"	v
t_start	lib/TrialData/Tools/trimTD.m	/^            t_start = int32(idx_start{1});$/;"	v
t_start	lib/TrialData/Tools/trimTD.m	/^            t_start = size(trial_data(trial).(fn_time{1}),1) + idx_start{2};$/;"	v
t_start	lib/TrialData/Tools/trimTD.m	/^        t_start = 1;$/;"	v
t_start	lib/TrialData/Tools/trimTD.m	/^        t_start = t_start(1);$/;"	v
tab_append	lib/NeuronTable/getPDsFromWeights.m	/^tab_append = cell(1,length(baseline_cols_idx));$/;"	v
tab_append	lib/NeuronTable/getPDsFromWeights.m	/^tab_append = cell(1,length(weight_cols_idx));$/;"	v
tab_append	lib/NeuronTable/getTDModelWeights.m	/^    tab_append = table(weightArr, 'VariableNames',{[prefix in_signals{in_signal_idx,1} 'Weight']/;"	v
tab_append	lib/NeuronTable/getTDPDs.m	/^tab_append = cell(1,size(in_signals,1));$/;"	v
tab_append	lib/NeuronTable/getTuningCurves.m	/^    tab_append = table(repmat(bins,size(response_var,2),1),curve,...$/;"	v
tab_append	lib/NeuronTable/getTuningCurves.m	/^    tab_append = table(repmat(bins,size(response_var,2),1),curve,curve_CIlow,curve_CIhigh,...$/;"	v
tab_append	lib/NeuronTable/makeNeuronTableStarter.m	/^    tab_append = cell(1,numel(fields));$/;"	v
tab_append	lib/NeuronTable/neuronAverage.m	/^tab_append = cell(height(keyTable),1);$/;"	v
tab_append	lib/calculatePDShiftTables.m	/^        tab_append = table(dPDs,'VariableNames',{'velPD'});$/;"	v
tab_height	lib/NeuronTable/makeNeuronTableStarter.m	/^tab_height = size(out_signal_names,1);$/;"	v
table	lib/circ-toolbox/CircStat/circ_hktest.m	/^        table = {'Source','d.f.','CHI2','P-Value'; ...$/;"	v
table	lib/circ-toolbox/CircStat/circ_hktest.m	/^        table = {'Source','d.f.','SS','MS','F','P-Value'; ...$/;"	v
table	lib/circ-toolbox/CircStat/circ_raotest.m	/^table = [ 4   247.32, 221.14, 186.45, 168.02;$/;"	v
table	lib/circ-toolbox/CircStat/circ_wwtest.m	/^      table = {'Source','d.f.','SS','MS','F','P-Value'; ...$/;"	v
tableStarter	lib/NeuronTable/getTDModelWeights.m	/^tableStarter = makeNeuronTableStarter(trial_data,params);$/;"	v
targ	lib/TrialData/Tools/getRWTargetDirection.m	/^    targ = atan2(tgt_pos(:,2)-pos(:,2),tgt_pos(:,1)-pos(:,1));$/;"	v
targ	lib/TrialData/Tools/getTargetDirection.m	/^    targ = atan2(tgt_pos(:,2)-pos(:,2),tgt_pos(:,1)-pos(:,1));$/;"	v
targ_angs	lib/TrialData/DataProcessing/parseFileByTrial.m	/^            targ_angs = [pi\/2, pi\/4, 0, -pi\/4, -pi\/2, -3*pi\/4, pi, 3*pi\/4];$/;"	v
targ_y	makePlotsTRT.m	/^        targ_y = [0.9 0.1] * ylims;$/;"	v
target_distance	lib/TrialData/Plotting/visData.m	/^target_distance   =   8; % distance of outer targets in cm$/;"	v
target_pos_name	lib/TrialData/Tools/getRWTargetDirection.m	/^target_pos_name = 'target_center';$/;"	v
target_size	lib/TrialData/Plotting/visData.m	/^target_size       =   2; % target size in cm$/;"	v
targetcolor	lib/plotTRTTrials.m	/^targetcolor = [1 0 0];$/;"	v
targets	lib/plotTRTTrials.m	/^    targets = trial_data(trial_idx).target_center-repmat([0 35],4,1);$/;"	v
targetsize	lib/plotTRTTrials.m	/^targetsize = 100;$/;"	v
task	lib/NeuronTable/makeNeuronTableStarter.m	/^    task = cell(tab_height,1);$/;"	v
task	lib/NeuronTable/makeNeuronTableStarter.m	/^    task = repmat({trial_data(1).task},tab_height,1);$/;"	v
tcs	lib/TrialData/Analysis/getNeuronTuning.m	/^        tcs = regressTuningCurves(fr,covar,{'none'},'doparallel',false);$/;"	v
td	calculateCoordCorrespondence.m	/^    td = binTD(td,5);$/;"	v
td	calculateCoordCorrespondence.m	/^    td = getDifferential(td,struct('signals','markers','alias','marker_vel'));$/;"	v
td	calculateCoordCorrespondence.m	/^    td = smoothSignals(td,struct('signals','markers'));$/;"	v
td	calculateCoordCorrespondence.m	/^    td = trial_data;$/;"	v
td	calculateCoordCorrespondence.m	/^    td = trimTD(td,{'idx_targetStartTime',0},{'idx_endTime',0});$/;"	v
td	calculateDecoders.m	/^    td = binTD(td,5);$/;"	v
td	calculateDecoders.m	/^    td = cat(2,td_act,td_pas);$/;"	v
td	calculateDecoders.m	/^    td = dupeAndShift(td,neur_name,-3);$/;"	v
td	calculateDecoders.m	/^    td = getDifferential(td,struct('signals','markers','alias','marker_vel'));$/;"	v
td	calculateDecoders.m	/^    td = getMoveOnsetAndPeak(td,struct('start_idx','idx_goCueTime','end_idx','idx_endTime','meth/;"	v
td	calculateDecoders.m	/^    td = removeBadNeurons(td,struct('min_fr',0.1));$/;"	v
td	calculateDecoders.m	/^    td = smoothSignals(td,struct('signals','markers'));$/;"	v
td	calculateDecoders.m	/^    td = trial_data;$/;"	v
td	calculateEncoders.m	/^    td = addFiringRates(td,struct('array',arrayname));$/;"	v
td	calculateEncoders.m	/^    td = binTD(td,5);$/;"	v
td	calculateEncoders.m	/^    td = getDifferential(td,struct('signals','markers','alias','marker_vel'));$/;"	v
td	calculateEncoders.m	/^    td = smoothSignals(td,struct('signals','markers'));$/;"	v
td	calculateEncoders.m	/^    td = trial_data;$/;"	v
td	calculateEncoders.m	/^    td = trimTD(td,{'idx_targetStartTime',0},{'idx_endTime',0});$/;"	v
td	data_testing/hand_elbow_xcorr.m	/^    td = [td_pm td_dl];$/;"	v
td	data_testing/hand_elbow_xcorr.m	/^    td = getDifferential(td,struct('signals','markers','alias','marker_vel'));$/;"	v
td	data_testing/hand_elbow_xcorr.m	/^    td = smoothSignals(td,struct('signals','markers'));$/;"	v
td	data_testing/hand_elbow_xcorr.m	/^    td = trial_data;$/;"	v
td	data_testing/testCoordFrameLinearity.m	/^    td = [td_pm td_dl];$/;"	v
td	data_testing/testCoordFrameLinearity.m	/^    td = addCylHand2TD(td);$/;"	v
td	data_testing/testCoordFrameLinearity.m	/^    td = addFiringRates(td,struct('array','S1'));$/;"	v
td	data_testing/testCoordFrameLinearity.m	/^    td = addSphereHand2TD(td);$/;"	v
td	data_testing/testCoordFrameLinearity.m	/^    td = binTD(td,5);$/;"	v
td	data_testing/testCoordFrameLinearity.m	/^    td = getDifferential(td,struct('signal','markers','alias','marker_vel'));$/;"	v
td	data_testing/testCoordFrameLinearity.m	/^    td = getPCA(td,struct('signals','marker_vel'));$/;"	v
td	data_testing/testCoordFrameLinearity.m	/^    td = getPCA(td,struct('signals','markers'));$/;"	v
td	data_testing/testCoordFrameLinearity.m	/^    td = rmfield(td,'opensim_pca');$/;"	v
td	data_testing/testCoordFrameLinearity.m	/^    td = smoothSignals(td,struct('signals','markers'));$/;"	v
td	data_testing/testCoordFrameLinearity.m	/^    td = trial_data;$/;"	v
td	data_testing/testCoordFrameLinearity.m	/^    td = trimTD(td,{'idx_targetStartTime',0},{'idx_endTime',0});$/;"	v
td	lib/TrialData/Analysis/estimateDimensionality.m	/^td = trialAverage(trial_data,condition);$/;"	v
td	lib/TrialData/Tools/addCorrelatedNoise.m	/^td = trial_data(use_trials);$/;"	v
td	lib/TrialData/Tools/addFiringRates.m	/^td = trial_data;$/;"	v
td	lib/TrialData/Tools/appendTDs.m	/^        td = varargin{i};$/;"	v
td	lib/TrialData/Tools/catTDs.m	/^        td = varargin{iTD};$/;"	v
td	lib/TrialData/Tools/dimReduce.m	/^        td = smoothSignals(td,struct('signals',{signals},'kernel_SD',kernel_SD));$/;"	v
td	lib/TrialData/Tools/dimReduce.m	/^        td = sqrtTransform(td,signals);$/;"	v
td	lib/TrialData/Tools/dimReduce.m	/^    td = trial_data(use_trials);$/;"	v
td	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^td = getSpeed(trial_data);$/;"	v
td	lib/TrialData/Tools/getNoiseCovar.m	/^td = trial_data;$/;"	v
td	lib/TrialData/Tools/getRWMovements.m	/^    td = trial_data(trial);$/;"	v
td	lib/TrialData/Tools/removeBadNeurons.m	/^        td = trimTD(trial_data(use_trials),fr_window(1,:),fr_window(2,:));$/;"	v
td	lib/TrialData/Tools/removeBadTrials.m	/^    td = trial_data(trial);$/;"	v
td	lib/TrialData/Tools/splitTD.m	/^    td = trial_data(trial);$/;"	v
td	lib/TrialData/Tools/subtractConditionMean.m	/^td = trial_data(cond_idx);$/;"	v
td	lib/TrialData/dPCA_demo.m	/^td = removeBadNeurons(trial_data,struct('min_fr',1,'do_shunt_check',false));$/;"	v
td	lib/TrialData/dPCA_demo.m	/^td = removeBadTrials(td,struct('ranges',{{'idx_go_cue','idx_movement_on',[5 50];'idx_movement_on/;"	v
td	lib/TrialData/dPCA_demo.m	/^td = smoothSignals(td,struct('signals',{signals},'sqrt_transform',true,'do_smoothing',true,'kern/;"	v
td	lib/TrialData/dPCA_demo.m	/^td = trimTD(td,{'idx_movement_on',-20},{'idx_movement_on',50});$/;"	v
td	lib/TrialData/subspace_demo.m	/^td = binTD(td,n_bins);$/;"	v
td	lib/TrialData/subspace_demo.m	/^td = trialAverage(td,'target_direction');$/;"	v
td	lib/TrialData/subspace_demo.m	/^td = trimTD(trial_data,{'idx_movement_on',-50},{'idx_movement_on',70});$/;"	v
td	lib/TrialData/vis_script_demo.m	/^td = removeBadNeurons(td,struct('min_fr',3));$/;"	v
td	lib/TrialData/vis_script_demo.m	/^td = removeBadTrials(td);$/;"	v
td	lib/TrialData/vis_script_demo.m	/^td = trimTD(td,{'idx_target_on',0},{'idx_trial_end',-20});$/;"	v
td	lib/coordCorr.m	/^            td = addCoordPoint2TD(td,struct('method','markers','coord','cyl','point','hand'));$/;"	v
td	lib/coordCorr.m	/^            td = addCoordPoint2TD(td,struct('method','markers','coord','sph','point','elbow'));$/;"	v
td	lib/coordCorr.m	/^            td = addCoordPoint2TD(td,struct('method','markers','coord','sph','point','hand'));$/;"	v
td	lib/coordCorr.m	/^            td = addCoordPoint2TD(td,struct('method','opensim','coord','cyl','point','hand'));$/;"	v
td	lib/coordCorr.m	/^            td = addCoordPoint2TD(td,struct('method','opensim','coord','sph','point','hand'));$/;"	v
td	lib/coordCorr.m	/^            td = dimReduce(td,struct('signals','marker_vel'));$/;"	v
td	lib/coordCorr.m	/^            td = dimReduce(td,struct('signals','markers'));$/;"	v
td	lib/get_alpha_potent.m	/^    td = binTD(td,5);$/;"	v
td	lib/get_alpha_potent.m	/^    td = trimTD(td,{'idx_targetStartTime',0},{'idx_endTime',0});$/;"	v
td	lib/mwEncoders.m	/^            td = addCoordPoint2TD(td,struct('method','markers','coord','cyl','point','hand'));$/;"	v
td	lib/mwEncoders.m	/^            td = addCoordPoint2TD(td,struct('method','markers','coord','sph','point','elbow'));$/;"	v
td	lib/mwEncoders.m	/^            td = addCoordPoint2TD(td,struct('method','markers','coord','sph','point','hand'));$/;"	v
td	lib/mwEncoders.m	/^            td = addCoordPoint2TD(td,struct('method','opensim','coord','cyl','point','hand'));$/;"	v
td	lib/mwEncoders.m	/^            td = addCoordPoint2TD(td,struct('method','opensim','coord','sph','point','hand'));$/;"	v
td	lib/mwEncoders.m	/^            td = dimReduce(td,struct('signals','marker_vel'));$/;"	v
td	lib/mwEncoders.m	/^            td = dimReduce(td,struct('signals','markers'));$/;"	v
td	lib/mwEncoders.m	/^    td = [td_pm td_dl];$/;"	v
td	lib/plotMWTuningSurfaces.m	/^            td = td_test{spacenum};$/;"	v
td_act	calculateDecoders.m	/^    td_act = td_act(~nanners);$/;"	v
td_act	calculateDecoders.m	/^    td_act = trimTD(td_act,{'idx_movement_on',-3},{'idx_movement_on',5});$/;"	v
td_dl	data_testing/hand_elbow_xcorr.m	/^    td_dl = td_dl(1:minsize);$/;"	v
td_dl	data_testing/testCoordFrameLinearity.m	/^    td_dl = td_dl(1:minsize);$/;"	v
td_dl	lib/get_alpha_potent.m	/^    td_dl = getPCA(td_dl,pca_info_vel);$/;"	v
td_dl	lib/get_alpha_potent.m	/^    td_dl = rmfield(td_dl,'opensim_pca');$/;"	v
td_dl	lib/get_alpha_potent.m	/^    td_dl = td_dl(1:minsize);$/;"	v
td_dl	lib/mwEncoders.m	/^    td_dl = td_dl(1:minsize);$/;"	v
td_ex	makePlotsTRT.m	/^    td_ex = trimTD([td_pm_ex td_dl_ex],{'idx_ctHoldTime',0},{'idx_endTime',0});$/;"	v
td_fn_prefix	lib/TrialData/Analysis/evalModel.m	/^td_fn_prefix     =  '';    % prefix for fieldname$/;"	v
td_fn_prefix	lib/TrialData/Analysis/getModel.m	/^td_fn_prefix         =  '';  % name prefix for trial_data field$/;"	v
td_move	lib/TrialData/subspace_demo.m	/^td_move = binTD(td_move,n_bins);$/;"	v
td_move	lib/TrialData/subspace_demo.m	/^td_move = trialAverage(td_move,'target_direction');$/;"	v
td_move	lib/TrialData/subspace_demo.m	/^td_move = trimTD(trial_data,{'idx_movement_on',10},{'idx_movement_on',40});$/;"	v
td_params	lib/TrialData/DataProcessing/convertDataToTD.m	/^            td_params = [];$/;"	v
td_params	lib/TrialData/DataProcessing/convertDataToTD.m	/^        td_params = [];$/;"	v
td_params	lib/TrialData/DataProcessing/convertDataToTD.m	/^td_params = struct( ...$/;"	v
td_params	lib/TrialData/DataProcessing/parseFileByTrial.m	/^td_params = struct( ...$/;"	v
td_pas	calculateDecoders.m	/^    td_pas = trimTD(td_pas,{'idx_bumpTime',-3},{'idx_bumpTime',5});$/;"	v
td_pm	data_testing/hand_elbow_xcorr.m	/^    td_pm = td_pm(1:minsize);$/;"	v
td_pm	data_testing/testCoordFrameLinearity.m	/^    td_pm = td_pm(1:minsize);$/;"	v
td_pm	lib/get_alpha_potent.m	/^    td_pm = getPCA(td_pm,pca_info_vel);$/;"	v
td_pm	lib/get_alpha_potent.m	/^    td_pm = rmfield(td_pm,'opensim_pca');$/;"	v
td_pm	lib/get_alpha_potent.m	/^    td_pm = td_pm(1:minsize);$/;"	v
td_pm	lib/mwEncoders.m	/^    td_pm = td_pm(1:minsize);$/;"	v
td_prep	lib/TrialData/subspace_demo.m	/^td_prep = binTD(td_prep,n_bins);$/;"	v
td_prep	lib/TrialData/subspace_demo.m	/^td_prep = trialAverage(td_prep,'target_direction');$/;"	v
td_prep	lib/TrialData/subspace_demo.m	/^td_prep = trimTD(trial_data,{'idx_go_cue',-30},{'idx_go_cue',0});$/;"	v
td_s	lib/TrialData/Tools/splitTD.m	/^td_s = reorderTDfields(td_s);$/;"	v
td_s	lib/TrialData/Tools/splitTD.m	/^td_s = repmat(struct(),1,num_moves);$/;"	v
td_td_move	lib/TrialData/subspace_demo.m	/^td_td_move   = getPCA(td,setfield(pca_params,'w',pca_move.w));$/;"	v
td_td_prep	lib/TrialData/subspace_demo.m	/^td_td_prep   = getPCA(td,setfield(pca_params,'w',pca_prep.w));$/;"	v
td_test	lib/TrialData/Tools/Tests/coord_test.m	/^        td_test = addCoordPoint2TD(trial_data,struct('method',method{i},'point','hand','coord','/;"	v
td_test	lib/analyzeTRT.m	/^            td_test = {td_pm(test_idx); td_dl(test_idx)};$/;"	v
td_test	lib/coordCorr.m	/^    td_test = cell(num_repeats,num_folds);$/;"	v
td_test	lib/coordCorr.m	/^    td_test = getModel(td_test,model_info);$/;"	v
td_test	lib/mwDecoders.m	/^            td_test = getModel(td_test,hand_decoder);$/;"	v
td_test	lib/mwDecoders.m	/^            td_test = getModel(td_test,neur_decoder);$/;"	v
td_test	lib/mwDecoders.m	/^            td_test = td(inds==foldnum);$/;"	v
td_test	lib/mwEncoders.m	/^    td_test = cell(2,num_folds);$/;"	v
td_train	lib/analyzeTRT.m	/^            td_train = [td_pm(train_idx) td_dl(train_idx)];$/;"	v
td_train	lib/coordCorr.m	/^            td_train = td(train_idx);$/;"	v
td_train	lib/mwEncoders.m	/^        td_train = [td_pm(train_idx) td_dl(train_idx)];$/;"	v
td_true	lib/TrialData/Tools/Tests/coord_test.m	/^        td_true = addCylHand2TD(trial_data,method{i});$/;"	v
td_true	lib/TrialData/Tools/Tests/coord_test.m	/^        td_true = addSphereHand2TD(trial_data,method{i});$/;"	v
td_tuning	lib/mwEncoders.m	/^    td_tuning = {horzcat(td_test{1,:}); horzcat(td_test{2,:})};$/;"	v
temp	lib/NeuronTable/getNTidx.m	/^    temp = randperm(length(return_idx));$/;"	v
temp	lib/TrialData/Analysis/estimateDimensionality.m	/^            temp = trial_data(trial).(signals{i,1});$/;"	v
temp	lib/TrialData/Analysis/estimateDimensionality.m	/^        temp = trial_data(trial).(signal);$/;"	v
temp	lib/TrialData/Analysis/getDPCA.m	/^            temp = cat(dim,val{:});$/;"	v
temp	lib/TrialData/Analysis/getDPCA.m	/^            temp = varargin;$/;"	v
temp	lib/TrialData/Analysis/getLearningMetrics.m	/^                        temp = trial_data(bl_idx(iTrial)).(vel_or_pos);$/;"	v
temp	lib/TrialData/Analysis/getLearningMetrics.m	/^                    temp = trial_data(bl_idx(iTrial)).(vel_or_pos);$/;"	v
temp	lib/TrialData/Analysis/getLearningMetrics.m	/^                temp = trial_data(bl_idx(iTrial)).vel;$/;"	v
temp	lib/TrialData/Analysis/getLearningMetrics.m	/^            temp = [interp1(1:length(idx),temp(idx,1),linspace(1,length(idx),corr_samples))', ../;"	v
temp	lib/TrialData/Analysis/getLearningMetrics.m	/^            temp = trial_data(iTrial).(vel_or_pos);$/;"	v
temp	lib/TrialData/Analysis/getLearningMetrics.m	/^            temp = trial_data(iTrial).vel;$/;"	v
temp	lib/TrialData/Analysis/getNeuronTuning.m	/^            temp = trial_data(trial).([array '_spikes']);$/;"	v
temp	lib/TrialData/Analysis/pairwiseCorr.m	/^        temp = cell(1,size(signals,1));$/;"	v
temp	lib/TrialData/Analysis/pairwiseCorr.m	/^    temp = cat(1,trial_data.(signals{i,1}));$/;"	v
temp	lib/TrialData/Analysis/runGPFA.m	/^        temp = [temp, trial_data(iTrial).([arrays '_spikes'])];$/;"	v
temp	lib/TrialData/Analysis/runGPFA.m	/^    temp = [];$/;"	v
temp	lib/TrialData/DataProcessing/convertDataToTD.m	/^            temp = temp';$/;"	v
temp	lib/TrialData/DataProcessing/convertDataToTD.m	/^        temp = find(sig_data(idx(i)).data)';$/;"	v
temp	lib/TrialData/DataProcessing/convertDataToTD.m	/^        temp = trial_data.(fn{i});$/;"	v
temp	lib/TrialData/DataProcessing/initSignalStruct.m	/^                temp = signal_info.(fn{i});$/;"	v
temp	lib/TrialData/DataProcessing/initSignalStruct.m	/^temp = signal_info.type;$/;"	v
temp	lib/TrialData/DataProcessing/parseFileByTrial.m	/^                temp = cds_bin.emg.(fn{muscle});$/;"	v
temp	lib/TrialData/DataProcessing/parseFileByTrial.m	/^                temp = cds_bin.markers.(fn{entry});$/;"	v
temp	lib/TrialData/DataProcessing/parseFileByTrial.m	/^                temp = cds_bin.opensim.(fn{entry});$/;"	v
temp	lib/TrialData/DataProcessing/parseFileByTrial.m	/^            temp = cds_bin.trials.(event_list{e});$/;"	v
temp	lib/TrialData/DataProcessing/parseFileByTrial.m	/^            temp = temp(iTrial,:);$/;"	v
temp	lib/TrialData/DataProcessing/parseFileByTrial.m	/^        temp = find(histcounts(all_events(:,i),t_bin));$/;"	v
temp	lib/TrialData/DataProcessing/processNEV.m	/^            temp = temp(int16(temp) > 0);$/;"	v
temp	lib/TrialData/DataProcessing/processNEV.m	/^            temp = temp_text(iText,:);$/;"	v
temp	lib/TrialData/DataProcessing/processNSx.m	/^    temp = uint16(labels{i});$/;"	v
temp	lib/TrialData/Tools/binTD.m	/^                temp = t(temp);$/;"	v
temp	lib/TrialData/Tools/binTD.m	/^                temp = trial_data(trial).(fn_time{iSig});$/;"	v
temp	lib/TrialData/Tools/binTD.m	/^            temp = cat(1,trial_data.(fn_time{iSig}));$/;"	v
temp	lib/TrialData/Tools/binTD.m	/^            temp = events(trial);$/;"	v
temp	lib/TrialData/Tools/binTD.m	/^            temp = trial_data(trial).(fn_idx{iIdx});$/;"	v
temp	lib/TrialData/Tools/binTD.m	/^            temp = trial_data(trial).(fn_spikes{iArray});$/;"	v
temp	lib/TrialData/Tools/binTD.m	/^        temp = cat(1,trial_data.(fn_spikes{iArray}));$/;"	v
temp	lib/TrialData/Tools/convBasisFunc.m	/^            temp = trial_data(iTrial).(which_vars{iVar});$/;"	v
temp	lib/TrialData/Tools/dupeAndShift.m	/^                temp = trial_data(trial).(which_fields{j});$/;"	v
temp	lib/TrialData/Tools/dupeAndShift.m	/^            temp = cat(1,trial_data.(which_fields{j}));$/;"	v
temp	lib/TrialData/Tools/dupeAndShift.m	/^            temp = trial_data(trial).(fn_time{j});$/;"	v
temp	lib/TrialData/Tools/dupeAndShift.m	/^        temp = trial_data(1).(fn_time{j});$/;"	v
temp	lib/TrialData/Tools/getCommonUnits.m	/^        temp = trial_data(i).([array '_spikes']);$/;"	v
temp	lib/TrialData/Tools/getCommonUnits.m	/^        temp = trial_data(i).([array '_unit_guide']);$/;"	v
temp	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^        temp = s; temp(~move_inds) = 0;$/;"	v
temp	lib/TrialData/Tools/getRWMovements.m	/^                temp = td.(fn_time{i});$/;"	v
temp	lib/TrialData/Tools/getSpeed.m	/^    temp = trial_data(trial).(velocity_variable);$/;"	v
temp	lib/TrialData/Tools/getTDidx.m	/^        temp = randi(n,[1,n]);$/;"	v
temp	lib/TrialData/Tools/getTDidx.m	/^        temp = randperm(length(return_idx));$/;"	v
temp	lib/TrialData/Tools/removeBadNeurons.m	/^            temp = trial_data(trial).([array '_spikes']);$/;"	v
temp	lib/TrialData/Tools/removeBadNeurons.m	/^            temp = trial_data(trial).([array '_unit_guide']);$/;"	v
temp	lib/TrialData/Tools/reorderTDfields.m	/^    temp = trial_data(1).(fn{idx_idx(i)});$/;"	v
temp	lib/TrialData/Tools/splitTD.m	/^                        temp = td.(linked_fields{i});$/;"	v
temp	lib/TrialData/Tools/splitTD.m	/^                        temp = temp(idx);$/;"	v
temp	lib/TrialData/Tools/splitTD.m	/^                temp = td.(fn_idx{i});$/;"	v
temp	lib/TrialData/Tools/splitTD.m	/^                temp = td.(fn_time{i});$/;"	v
temp	lib/TrialData/Tools/stretchSignals.m	/^        temp = trial_data(trial).(time_vars{iVar});$/;"	v
temp	lib/TrialData/Tools/stripSpikeSorting.m	/^            temp = trial_data(trial).([fn_array{iArray} '_spikes']);$/;"	v
temp	lib/TrialData/Tools/trimTD.m	/^                temp = temp_padded;$/;"	v
temp	lib/TrialData/Tools/trimTD.m	/^        temp = trial_data(trial).(fn_idx{iIdx});$/;"	v
temp	lib/TrialData/Tools/trimTD.m	/^        temp = trial_data(trial).(fn_time{iSig});$/;"	v
temp	lib/TrialData/subspace_demo.m	/^    temp = td_td_move(i).([[arrays{:}] '_pca']);$/;"	v
temp	lib/TrialData/subspace_demo.m	/^    temp = td_td_prep(i).([[arrays{:}] '_pca']);$/;"	v
temp	lib/TrialData/util/openNEV_td.m	/^                temp = str2num(temp);$/;"	v
temp	lib/TrialData/util/openNEV_td.m	/^            temp = varargin{i};$/;"	v
temp	lib/TrialData/util/openNSx_td.m	/^        temp = inputArgument;$/;"	v
temp	lib/TrialData/util/subfcn/get_vars.m	/^    temp = cat(1,trial_data.(signals{i,1}));$/;"	v
temp1	lib/TrialData/Analysis/pairwiseCorr.m	/^    temp1 = temp1.\/repmat(max(rho),size(rho,1),1);$/;"	v
temp1	lib/TrialData/util/checkUnitGuides.m	/^    temp1 = varargin{i-1};$/;"	v
temp2	lib/TrialData/Analysis/pairwiseCorr.m	/^    temp2 = -temp2.\/repmat(min(rho),size(rho,1),1);$/;"	v
temp2	lib/TrialData/util/checkUnitGuides.m	/^    temp2 = varargin{i}; $/;"	v
tempClassOrReason	lib/TrialData/util/openNEV_td.m	/^    tempClassOrReason = uint8(tRawData(7,Trackers.readPackets(1):Trackers.readPackets(2)));$/;"	v
tempClassOrReason	lib/TrialData/util/openNEV_td.m	/^tempClassOrReason = [];$/;"	v
tempDigiVals	lib/TrialData/util/openNEV_td.m	/^        tempDigiVals      = tRawData(9:10,Trackers.readPackets(1):Trackers.readPackets(2));$/;"	v
tempDigiVals	lib/TrialData/util/openNEV_td.m	/^        tempDigiVals      = typecast(tempDigiVals(:), 'uint16');$/;"	v
tempDigiVals	lib/TrialData/util/openNEV_td.m	/^        tempDigiVals      = uint16(tRawData(9,Trackers.readPackets(1):Trackers.readPackets(2)));$/;"	v
tempDigiVals	lib/TrialData/util/openNEV_td.m	/^tempDigiVals = [];$/;"	v
tempTuningTable	lib/analyzeTRT.m	/^    tempTuningTable = cell(2,1);$/;"	v
temp_adjust	lib/TrialData/Tools/binTD.m	/^                temp_adjust = zeros(size(temp));$/;"	v
temp_adjust	lib/TrialData/Tools/trimTD.m	/^            temp_adjust = zeros(size(temp));$/;"	v
temp_conv	lib/TrialData/Tools/convBasisFunc.m	/^            temp_conv = zeros(size(temp,1),size(temp,2)*size(b,2));$/;"	v
temp_data	lib/TrialData/Tools/dimReduce.m	/^            temp_data = cat(1,trial_data(trial).(signals{i,1}));$/;"	v
temp_data	lib/TrialData/Tools/dimReduce.m	/^        temp_data = cat(1,td.(signals{i,1}));$/;"	v
temp_err	lib/TrialData/Analysis/getLearningMetrics.m	/^                    temp_err = zeros(length(bl_idx),1);$/;"	v
temp_err	lib/TrialData/Analysis/getLearningMetrics.m	/^                temp_err = zeros(length(bl_idx),1);$/;"	v
temp_err	lib/TrialData/Analysis/getLearningMetrics.m	/^            temp_err = angleDiff(minusPi2Pi(trial_data(iTrial).target_direction), ...$/;"	v
temp_err	lib/TrialData/Analysis/getLearningMetrics.m	/^            temp_err = median(curvature(temp(t1:t2,:)));$/;"	v
temp_fr	lib/TrialData/Analysis/getDPCA.m	/^            temp_fr = cat(3,trial_data(all_trials).(signals{n,1}));$/;"	v
temp_fr	lib/TrialData/Analysis/getDPCA.m	/^            temp_fr = temp_fr(:,signals{n,2},:);$/;"	v
temp_idx	lib/TrialData/DataProcessing/parseFileByTrial.m	/^                temp_idx = ismember(array_alias(:,1),arrays{array});$/;"	v
temp_idx	lib/TrialData/Tools/reorderTDfields.m	/^        temp_idx = strcmpi(fn_cont,fn_cont_new{i});$/;"	v
temp_idx	lib/TrialData/util/remove_spike_artifacts.m	/^                    temp_idx = intersect(artifacts,find(unit_index == iUnit));$/;"	v
temp_idx	lib/TrialData/util/remove_spike_artifacts.m	/^            temp_idx = intersect(actual_spikes,find(unit_index == iUnit));$/;"	v
temp_label	lib/TrialData/DataProcessing/convertDataToTD.m	/^                temp_label = which_label{1};$/;"	v
temp_name	lib/TrialData/DataProcessing/parseFileByTrial.m	/^                    temp_name = event_alias{alias_idx,2};$/;"	v
temp_name	lib/TrialData/DataProcessing/parseFileByTrial.m	/^            temp_name = event_list{e};$/;"	v
temp_padded	lib/TrialData/Tools/trimTD.m	/^                temp_padded = zeros(t_end,size(temp,2));$/;"	v
temp_params	lib/TrialData/DataProcessing/convertDataToTD.m	/^                temp_params = params;$/;"	v
temp_pdTable	lib/analyzeTRT.m	/^            temp_pdTable = getTDClassicalPDs(td_test{spacenum},pdParams);$/;"	v
temp_proj	lib/TrialData/Tools/dimReduce.m	/^            temp_proj = temp_proj'; % that code uses dimensions as rows$/;"	v
temp_proj	lib/TrialData/Tools/dimReduce.m	/^        temp_proj = (data - repmat(mu,size(data,1),1)) * w;$/;"	v
temp_shift	lib/TrialData/Tools/dupeAndShift.m	/^                temp_shift = NaN(size(temp,1)+max_shift,size(temp,2)*(-the_shifts(j)));$/;"	v
temp_shift	lib/TrialData/Tools/dupeAndShift.m	/^                temp_shift = NaN(size(temp,1)+max_shift,size(temp,2)*(1+the_shifts(j)));$/;"	v
temp_shift	lib/TrialData/Tools/dupeAndShift.m	/^                temp_shift = temp_shift(max_shift+1:end-max_shift,:);$/;"	v
temp_shift	lib/TrialData/Tools/dupeAndShift.m	/^            temp_shift = NaN(size(temp,1)+max_shift,size(temp,2)*(1+the_shifts(j)));$/;"	v
temp_table	lib/analyzeTRT.m	/^            temp_table = join(temp_pdTable,temp_tuning_table);$/;"	v
temp_text	lib/TrialData/DataProcessing/processNEV.m	/^        temp_text = reshape( ...$/;"	v
temp_tuning_table	lib/analyzeTRT.m	/^            temp_tuning_table = getTuningCurves(td_test{spacenum},tuningParams);$/;"	v
template_x	makePlotsTRT.m	/^    template_x = linspace(-0.5,0.5,length(models_to_plot))\/10;$/;"	v
template_x	makePlotsTRT.m	/^    template_x = linspace(-1,1,length(models_to_plot))\/10;$/;"	v
test	lib/TrialData/Tools/Tests/coord_test.m	/^        test = getSig(td_test,'cyl_hand_pos');$/;"	v
test	lib/TrialData/Tools/Tests/coord_test.m	/^        test = getSig(td_test,'sph_hand_pos');$/;"	v
testMask	lib/TrialData/util/gpfa/neuralTraj_td.m	/^    testMask = false(1, N);$/;"	v
testTrialIdx	lib/TrialData/util/gpfa/neuralTraj_td.m	/^    testTrialIdx  = tr(testMask);$/;"	v
test_dirs	lib/NeuronTable/getTDClassicalPDs.m	/^    test_dirs = linspace(-pi,pi,1000)';$/;"	v
test_idx	lib/analyzeTRT.m	/^            test_idx = (indices==foldctr);$/;"	v
test_idx	lib/coordCorr.m	/^            test_idx = (indices==foldnum);$/;"	v
test_idx	lib/mwEncoders.m	/^        test_idx = (indices==foldctr);$/;"	v
tgt_idx	lib/TrialData/Analysis/estimateDimensionality.m	/^tgt_idx = cellfun(@(x) getTDidx(trial_data,condition,x),num2cell(unique([trial_data.(condition)]/;"	v
tgt_pos	lib/TrialData/Tools/getRWTargetDirection.m	/^    tgt_pos = trial_data(i).(target_pos_name);$/;"	v
tgt_pos	lib/TrialData/Tools/getTargetDirection.m	/^    tgt_pos = repmat([reach_distance*cos(trial_data(i).target_direction), reach_distance*sin(tri/;"	v
th_fill	lib/NeuronTable/plotFlatTuning.m	/^    th_fill = [pdData.([move_cor, 'PDCI'])(1) pdData.([move_cor, 'PDCI'])(1) pdData.([move_cor, /;"	v
th_fill	lib/NeuronTable/plotFlatTuning.m	/^    th_fill = [th_wrap fliplr(th_wrap)];$/;"	v
th_fill	lib/NeuronTable/plotFlatTuning.m	/^    th_fill = th_fill(~isnan(r_fill));$/;"	v
th_fill	lib/NeuronTable/plotTuning.m	/^    th_fill = [0 pdData.([move_cor, 'PDCI'])(2) pdData.([move_cor 'PD']) pdData.([move_cor, 'PDC/;"	v
th_fill	lib/NeuronTable/plotTuning.m	/^    th_fill = [fliplr(bins) bins(end) bins(end) bins];$/;"	v
th_wrap	lib/NeuronTable/plotFlatTuning.m	/^    th_wrap = [bins-2*pi bins bins+2*pi];$/;"	v
th_wrap	lib/NeuronTable/plotFlatTuning.m	/^    th_wrap = th_wrap(~isnan(curve_wrap));$/;"	v
the_shifts	lib/TrialData/Tools/dupeAndShift.m	/^the_shifts = [varargin{2:2:end}];$/;"	v
the_val	lib/TrialData/Tools/reorderTDfields.m	/^        the_val = shift_idx;$/;"	v
theta	lib/TrialData/Analysis/getLearningMetrics.m	/^                theta = [bl_trials.target_direction];$/;"	v
theta	lib/TrialData/util/bin_angles.m	/^theta = minusPi2Pi(theta);$/;"	v
theta	lib/TrialData/util/bin_angles.m	/^theta = round(theta.\/angle_bin_size).*angle_bin_size;$/;"	v
theta	lib/TrialData/util/compute_pseudo_R2.m	/^    theta = var(Y).\/mean(Y);$/;"	v
theta	lib/circ-toolbox/CircStat/circ_kurtosis.m	/^theta = circ_mean(alpha,w,dim);$/;"	v
theta	lib/circ-toolbox/CircStat/circ_moment.m	/^  theta = circ_mean(alpha,w,dim);$/;"	v
theta	lib/circ-toolbox/CircStat/circ_skewness.m	/^theta = circ_mean(alpha,w,dim);$/;"	v
theta	lib/circ-toolbox/CircStat/circ_vmrnd.m	/^    theta = 0;$/;"	v
theta2	lib/circ-toolbox/CircStat/circ_kurtosis.m	/^theta2 = repmat(theta, size(alpha).\/size(theta));$/;"	v
theta2	lib/circ-toolbox/CircStat/circ_skewness.m	/^theta2 = repmat(theta, size(alpha).\/size(theta));$/;"	v
thetahat	lib/circ-toolbox/CircStat/circ_vmpar.m	/^thetahat = circ_mean(alpha,w);$/;"	v
thetahat	lib/circ-toolbox/CircStat/circ_vmpdf.m	/^    thetahat = 0;$/;"	v
thetas	lib/circ-toolbox/CircStat/circ_samplecdf.m	/^thetas = sort(thetas); $/;"	v
thisColor	lib/matlab-linspecer/linspecer.m	/^    thisColor = varargin{2};$/;"	v
thisColor	lib/matlab-linspecer/linspecer.m	/^thisColor = 'blue';$/;"	v
thisLambda	lib/TrialData/util/dpca/dpca.m	/^        thisLambda = 1e-10;$/;"	v
thisLambda	lib/TrialData/util/dpca/dpca.m	/^        thisLambda = options.lambda(margNums(i));$/;"	v
thisLambda	lib/TrialData/util/dpca/dpca.m	/^        thisLambda = options.lambda;$/;"	v
thisMarg	lib/TrialData/util/dpca/dpca_plot.m	/^        thisMarg = [];$/;"	v
thisMarg	lib/TrialData/util/dpca/dpca_plot.m	/^        thisMarg = options.whichMarg(cc);$/;"	v
thisVar	lib/TrialData/util/dpca/dpca_plot.m	/^        thisVar = [];$/;"	v
thisVar	lib/TrialData/util/dpca/dpca_plot.m	/^        thisVar = options.explainedVar.componentVar(cc);$/;"	v
thisYlim	lib/TrialData/util/dpca/dpca_plot.m	/^        thisYlim = options.ylims(options.whichMarg(cc));$/;"	v
thisYlim	lib/TrialData/util/dpca/dpca_plot.m	/^        thisYlim = options.ylims;$/;"	v
thresh	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^            thresh = ds(mvt_peak)\/2; % Threshold is half max of acceleration peak$/;"	v
ti	lib/circ-toolbox/CircKSDensity/circ_ksdensity.m	/^ti = 1:length(Tp);$/;"	v
ti	lib/circ-toolbox/CircStat/circ_raotest.m	/^    ti = alpha(j+1) - alpha(j);$/;"	v
time	lib/TrialData/Analysis/getDPCA.m	/^time            = (1:T)*trial_data(1).bin_size;$/;"	v
time	lib/TrialData/util/dpca/dpca_plot_td.m	/^    time = 1:size(data, ndims(data));$/;"	v
timeSplitsBeg	lib/TrialData/util/dpca/dpca_marginalize.m	/^    timeSplitsBeg = [1 options.timeSplits];$/;"	v
timeSplitsEnd	lib/TrialData/util/dpca/dpca_marginalize.m	/^    timeSplitsEnd = [options.timeSplits-1 size(X, length(size(X)))];$/;"	v
time_cols	lib/TrialData/Plotting/visData.m	/^time_cols          =   3;        % how many columns for time-variable plots$/;"	v
time_event_exc_idx	lib/TrialData/DataProcessing/parseFileByTrial.m	/^    time_event_exc_idx = time_event_exc_idx | contains(fn,time_event_exceptions{exc});$/;"	v
time_event_exc_idx	lib/TrialData/DataProcessing/parseFileByTrial.m	/^time_event_exc_idx = false(size(fn));$/;"	v
time_event_exceptions	lib/TrialData/DataProcessing/parseFileByTrial.m	/^time_event_exceptions = {'ctrHold'};$/;"	v
time_events	lib/TrialData/Analysis/getDPCA.m	/^time_events     = 1;$/;"	v
time_events	lib/TrialData/DataProcessing/parseFileByTrial.m	/^time_events = union({'startTime','endTime'},extra_time_events);$/;"	v
time_start	lib/TrialData/Plotting/visData.m	/^        time_start = 0;$/;"	v
time_start	lib/TrialData/Plotting/visData.m	/^        time_start = pos_cols;$/;"	v
time_vars	lib/TrialData/Tools/stretchSignals.m	/^time_vars = getTDfields(trial_data,'time');$/;"	v
time_vars	lib/TrialData/Tools/trialAverage.m	/^time_vars = getTDfields(trial_data,'time');$/;"	v
time_window	lib/TrialData/Analysis/getLearningMetrics.m	/^time_window = {'idx_movement_on',0; 'idx_peak_speed',0};$/;"	v
timestamps	lib/TrialData/util/remove_spike_artifacts.m	/^    timestamps = double(unit_structure.Data.Spikes.TimeStamp)';$/;"	v
timevec	data_testing/hand_elbow_xcorr.m	/^    timevec = linspace(-td(1).bin_size*maxlag,td(1).bin_size*maxlag,2*maxlag+1);$/;"	v
timevec	makePlotsTRT.m	/^        timevec = binvec*decoderResults.td_test(1).bin_size;$/;"	v
tmp	lib/TrialData/util/dpca/dpca_explainedVariance.m	/^        tmp = randperm(neuronsConditions(i), 2);$/;"	v
tn	lib/circ-toolbox/CircKSDensity/circ_ksdensity.m	/^tn = length(ti);$/;"	v
tn	lib/circ-toolbox/CircStat/circ_raotest.m	/^tn = (360 - alpha(n) + alpha(1));$/;"	v
toDisplayMargNames	lib/TrialData/util/dpca/dpca_plot.m	/^        toDisplayMargNames = 1;$/;"	v
toDisplayMargNames	lib/TrialData/util/dpca/dpca_plot.m	/^toDisplayMargNames = 0;$/;"	v
toFlip	lib/TrialData/util/dpca/dpca.m	/^toFlip = find(sum(sign(V))<0);$/;"	v
toKeep	lib/TrialData/util/dpca/dpca.m	/^        toKeep = [toKeep components(order(1:nc))];$/;"	v
toKeep	lib/TrialData/util/dpca/dpca.m	/^    toKeep = [];$/;"	v
toSkip	lib/TrialData/util/dpca/dpca_marginalize.m	/^                        toSkip = 1;$/;"	v
toSkip	lib/TrialData/util/dpca/dpca_marginalize.m	/^            toSkip = 0;$/;"	v
tol	lib/TrialData/DataProcessing/parseFileByTrial.m	/^        tol = 1e-6;$/;"	v
tol	lib/TrialData/util/gpfa/fastfa.m	/^  tol        = 1e-8; $/;"	v
top	lib/TrialData/util/dpca/dpca_plot.m	/^    top = pos(2)+pos(4);$/;"	v
totalVar	lib/TrialData/util/dpca/dpca.m	/^totalVar = sum(X(:).^2);$/;"	v
tr	lib/TrialData/util/gpfa/neuralTraj_td.m	/^    tr            = randperm(N);$/;"	v
tr	lib/circ-toolbox/CircStat/circ_hktest.m	/^tr = n * circ_r(alpha);$/;"	v
trackingPacketID	lib/TrialData/util/openNEV_td.m	/^trackingPacketID = 65533;$/;"	v
trackingPacketIDIndices	lib/TrialData/util/openNEV_td.m	/^trackingPacketIDIndices    = find(PacketIDs == trackingPacketID);$/;"	v
trainMask	lib/TrialData/util/gpfa/neuralTraj_td.m	/^    trainMask = ~testMask;$/;"	v
trainTrialIdx	lib/TrialData/util/gpfa/neuralTraj_td.m	/^    trainTrialIdx = tr(trainMask);$/;"	v
train_func	lib/TrialData/Analysis/getModel.m	/^train_func = 'trainlm';$/;"	v
train_idx	lib/TrialData/Analysis/getModel.m	/^    train_idx = getTDidx(trial_data,train_idx{:});$/;"	v
train_idx	lib/TrialData/Analysis/getModel.m	/^train_idx     =  1:length(trial_data);$/;"	v
train_idx	lib/analyzeTRT.m	/^            train_idx = ~test_idx;$/;"	v
train_idx	lib/coordCorr.m	/^            train_idx = ~test_idx;$/;"	v
train_idx	lib/mwEncoders.m	/^        train_idx = ~test_idx;$/;"	v
traj_rows	lib/TrialData/Plotting/visData.m	/^traj_rows          =   3;        % how many rows for time-varying trajectory plots$/;"	v
trial	lib/TrialData/Plotting/visData.m	/^    trial = trials_to_plot(tr_idx); % Use tr_num from here down$/;"	v
trialAverage	lib/TrialData/Tools/trialAverage.m	/^function [avg_data,cond_idx] = trialAverage(trial_data, conditions, params)$/;"	f
trial_data	lib/NeuronTable/getTuningCurves.m	/^trial_data = trial_data(use_trials);$/;"	v
trial_data	lib/TrialData/Analysis/estimateDimensionality.m	/^    trial_data = trimTD(trial_data,trim_idx(1,:),trim_idx(2,:));$/;"	v
trial_data	lib/TrialData/Analysis/estimateDimensionality.m	/^trial_data = trial_data(use_trials);$/;"	v
trial_data	lib/TrialData/Analysis/pairwiseCorr.m	/^trial_data = trial_data(trial_idx);$/;"	v
trial_data	lib/TrialData/BBDemoScript.m	/^trial_data = binTD(trial_data,5);$/;"	v
trial_data	lib/TrialData/BBDemoScript.m	/^trial_data = getMoveOnsetAndPeak(trial_data, params);$/;"	v
trial_data	lib/TrialData/BBDemoScript.m	/^trial_data = getSpeed(trial_data);$/;"	v
trial_data	lib/TrialData/BBDemoScript.m	/^trial_data = removeBadNeurons(trial_data);$/;"	v
trial_data	lib/TrialData/BBDemoScript.m	/^trial_data = trialAverage(trial_data_pca, 'target_direction');$/;"	v
trial_data	lib/TrialData/BBDemoScript.m	/^trial_data = trial_data(~isnan([trial_data.target_direction]));$/;"	v
trial_data	lib/TrialData/DataProcessing/convertDataToTD.m	/^            trial_data = [];$/;"	v
trial_data	lib/TrialData/DataProcessing/convertDataToTD.m	/^        trial_data = [];$/;"	v
trial_data	lib/TrialData/DataProcessing/convertDataToTD.m	/^trial_data = reorderTDfields(trial_data);$/;"	v
trial_data	lib/TrialData/DataProcessing/convertDataToTD.m	/^trial_data = rmfield(trial_data,t_fn);$/;"	v
trial_data	lib/TrialData/DataProcessing/convertDataToTD.m	/^trial_data = trim_time(trial_data);$/;"	v
trial_data	lib/TrialData/DataProcessing/loadTDfiles.m	/^                trial_data = f(trial_data,funcCall{2:end});$/;"	v
trial_data	lib/TrialData/DataProcessing/loadTDfiles.m	/^        trial_data = f(trial_data);$/;"	v
trial_data	lib/TrialData/DataProcessing/parseFileByTrial.m	/^trial_data = reorderTDfields(trial_data);$/;"	v
trial_data	lib/TrialData/DataProcessing/parseFileByTrial.m	/^trial_data = repmat(struct(),1,length(idx_trials));$/;"	v
trial_data	lib/TrialData/DataProcessing/parseFileByTrial.m	/^trial_data = trial_data(~cellfun(@isempty,{trial_data.(fn{1})}));$/;"	v
trial_data	lib/TrialData/Tools/addCoordPoint2TD.m	/^        trial_data = getDifferential(trial_data,struct('signals','marker_vel','alias','marker_ac/;"	v
trial_data	lib/TrialData/Tools/addCoordPoint2TD.m	/^        trial_data = getDifferential(trial_data,struct('signals','markers','alias','marker_vel')/;"	v
trial_data	lib/TrialData/Tools/addCoordPoint2TD.m	/^        trial_data = smoothSignals(trial_data,struct('signals','marker_vel'));$/;"	v
trial_data	lib/TrialData/Tools/addCoordPoint2TD.m	/^        trial_data = smoothSignals(trial_data,struct('signals','markers'));$/;"	v
trial_data	lib/TrialData/Tools/addCoordPoint2TD.m	/^    trial_data = addProcessedSignal(trial_data,struct('in_signals',{{cart_names{postfix_ctr},poi/;"	v
trial_data	lib/TrialData/Tools/addCoordPoint2TD.m	/^trial_data = reorderTDfields(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/addProcessedSignal.m	/^trial_data = reorderTDfields(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/convBasisFunc.m	/^trial_data = reorderTDfields(trial_data);/;"	v
trial_data	lib/TrialData/Tools/dupeAndShift.m	/^trial_data = reorderTDfields(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/getDifferential.m	/^trial_data = reorderTDfields(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^trial_data = reorderTDfields(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/getNoiseCovar.m	/^trial_data = trial_data(use_trials);$/;"	v
trial_data	lib/TrialData/Tools/getRWTargetDirection.m	/^trial_data = reorderTDfields(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/getSpeed.m	/^trial_data = reorderTDfields(trial_data);/;"	v
trial_data	lib/TrialData/Tools/getTDidx.m	/^        trial_data = trial_data';$/;"	v
trial_data	lib/TrialData/Tools/getTDidx.m	/^trial_data = trial_data(return_idx);$/;"	v
trial_data	lib/TrialData/Tools/getTargetDirection.m	/^trial_data = reorderTDfields(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/removeBadTrials.m	/^trial_data = trial_data(~bad_idx);/;"	v
trial_data	lib/TrialData/Tools/reorderTDfields.m	/^trial_data = orderfields(trial_data,master_idx);$/;"	v
trial_data	lib/TrialData/Tools/stripSpikeSorting.m	/^    trial_data = rmfield(trial_data,'temp_spikes');$/;"	v
trial_data	lib/TrialData/Tools/trialAverage.m	/^    trial_data = stretchSignals(trial_data,struct('num_samp',num_samp));$/;"	v
trial_data	lib/TrialData/Tools/trimTD.m	/^    trial_data = rmfield(trial_data,'is_continuous');$/;"	v
trial_data	lib/TrialData/subspace_demo.m	/^trial_data = smoothSignals(trial_data,struct( ...$/;"	v
trial_data_butter	lib/TrialData/BBDemoScript.m	/^trial_data_butter= parseFileByTrial(cds);$/;"	v
trial_data_events	lib/TrialData/BBDemoScript.m	/^trial_data_events = getTDfields(trial_data, 'idx');$/;"	v
trial_data_movement	lib/TrialData/BBDemoScript.m	/^trial_data_movement = trimTD(trial_data, {'idx_movement_on', 0}, {'idx_movement_on', 6});$/;"	v
trial_data_noBumps	lib/TrialData/BBDemoScript.m	/^trial_data_noBumps = removeBadTrials(trial_data);$/;"	v
trial_data_pca	lib/TrialData/BBDemoScript.m	/^trial_data_pca = getPCA(trial_data_movement, paramPCA); $/;"	v
trial_data_pca	lib/TrialData/BBDemoScript.m	/^trial_data_pca = removeBadNeurons(trial_data_pca);$/;"	v
trial_data_pca	lib/TrialData/BBDemoScript.m	/^trial_data_pca = smoothSignals(trial_data_pca, struct('signals', 'S1_pca'));$/;"	v
trial_data_premovement	lib/TrialData/BBDemoScript.m	/^trial_data_premovement = trimTD(trial_data, {'idx_movement_on', -5}, {'idx_movement_on', -2});$/;"	v
trial_data_ts	lib/TrialData/BBDemoScript.m	/^trial_data_ts = parseFileByTrial(cds, paramsCDS);$/;"	v
trial_ends	makePlotsTRT.m	/^    trial_ends = cumsum(cat(1,decoderResults.td_test.idx_endTime))';$/;"	v
trial_ends_time	makePlotsTRT.m	/^    trial_ends_time = trial_ends*decoderResults.td_test(1).bin_size;$/;"	v
trial_event_colors	lib/TrialData/Plotting/visData.m	/^trial_event_colors =   parula(size(event_db,1)); % use default matlab colors$/;"	v
trial_idx	lib/NeuronTable/getTDPDs.m	/^trial_idx        =  1:length(trial_data);$/;"	v
trial_idx	lib/TrialData/Analysis/evalModel.m	/^trial_idx        =  [1,length(trial_data)];$/;"	v
trial_idx	lib/TrialData/Analysis/pairwiseCorr.m	/^trial_idx        =  1:length(trial_data);$/;"	v
trial_nbrs	lib/TrialData/Analysis/estimateDimensionality.m	/^    trial_nbrs    	= randperm(min(nbr_trials),2);$/;"	v
trial_results	lib/TrialData/DataProcessing/parseFileByTrial.m	/^trial_results  =  {'R'};$/;"	v
trial_starts	lib/TrialData/Tools/binTD.m	/^    trial_starts = cumsum([1,cellfun(@(x) size(x,1),{trial_data.(fn_time{1})})]);$/;"	v
trial_starts	lib/TrialData/Tools/dupeAndShift.m	/^            trial_starts = cumsum([1,cellfun(@(x) size(x,1),{trial_data.(fn_time{1})})]);$/;"	v
trial_starts_bin	lib/TrialData/Tools/binTD.m	/^    trial_starts_bin = zeros(size(trial_starts));$/;"	v
trials	lib/TrialData/Analysis/evalModel.m	/^        trials = trial_idx(i):trial_idx(i+1)-1;$/;"	v
trials	lib/TrialData/DataProcessing/parseFileByTrial.m	/^trials = cds.trials;$/;"	v
trialsToKeep	lib/TrialData/util/gpfa/getSeq_td.m	/^    trialsToKeep = ([seq.T] > 0);$/;"	v
trials_to_plot	lib/TrialData/Plotting/visData.m	/^trials_to_plot    =   1;$/;"	v
trig_ts	lib/TrialData/DataProcessing/convertDataToTD.m	/^                trig_ts = find([0; diff(data > trigger_thresh) > 0])\/sig_data(count).samprate;$/;"	v
trigger_thresh	lib/TrialData/DataProcessing/convertDataToTD.m	/^trigger_thresh  =  1;     % to identify time$/;"	v
trimTD	lib/TrialData/Tools/trimTD.m	/^function trial_data = trimTD(trial_data,varargin)$/;"	f
trim_idx	lib/TrialData/Analysis/estimateDimensionality.m	/^trim_idx      =  {};   % can trim data in here {'idx',val;'idx',val}$/;"	v
trim_idx	lib/TrialData/Analysis/getPotentSpace.m	/^trim_idx           =  {};     % can trim in Machens method ONLY$/;"	v
trim_time	lib/TrialData/DataProcessing/convertDataToTD.m	/^function trial_data = trim_time(trial_data)$/;"	f
true_pos	makePlotsTRT.m	/^        true_pos = 100*getSig(decoderResults.td_test(trialnum),{'markers',elbow_idx});$/;"	v
true_tuning_idx	makePlotsTRT.m	/^            true_tuning_idx = contains(encoderResults.params.model_names,'S1');$/;"	v
true_tuning_idx	makePlotsTRT.m	/^        true_tuning_idx = contains(encoderResults.params.model_names,'S1');$/;"	v
true_vel	makePlotsTRT.m	/^        true_vel = 100*getSig(decoderResults.td_test(trialnum),{'marker_vel',elbow_idx});$/;"	v
truth	lib/TrialData/Tools/Tests/coord_test.m	/^        truth = getSig(td_true,'cyl_hand_pos');$/;"	v
truth	lib/TrialData/Tools/Tests/coord_test.m	/^        truth = getSig(td_true,'sphere_hand_pos');$/;"	v
ts	lib/TrialData/DataProcessing/convertDataToTD.m	/^    ts = units{unit_idx(unit)};$/;"	v
ts	lib/TrialData/DataProcessing/parseFileByTrial.m	/^    ts = units(unit_idx(unit)).spikes.ts;$/;"	v
ts	lib/circ-toolbox/CircStat/circ_corrcc.m	/^ts = sqrt((n * l20 * l02)\/l22) * rho;$/;"	v
tscore	lib/NeuronTable/getTuningCurves.m	/^        tscore = tinv(0.975,size(response_var_in_bin,2)-1); % t-score for 95% CI$/;"	v
tuningHull_unit	lib/plotMWTuningCloud.m	/^        tuningHull_unit = tuningHull(unit_idx & space_idx,:);$/;"	v
tuningHulls	lib/NeuronTable/getTuningHull.m	/^tuningHulls = [unitIDs hullTab];$/;"	v
tuningParams	lib/analyzeTRT.m	/^            tuningParams = struct('out_signals',model_names(modelnum),'prefix',model_names{model/;"	v
tuningTable_unit	lib/NeuronTable/getTuningHull.m	/^    tuningTable_unit = tuningTable(unit_idx,weight_header_idx);$/;"	v
tuningTable_unit	lib/NeuronTable/plotWeightClouds.m	/^    tuningTable_unit = tuningTable(unit_idx,:);$/;"	v
tuning_corr	makePlotsTRT.m	/^            tuning_corr = zeros(height(encoderResults.tuning_curves{1,1}),length(models_to_plot)/;"	v
tuning_corr	makePlotsTRT.m	/^        tuning_corr = zeros(height(encoderResults.tuning_curves{1,1}),length(models_to_plot));$/;"	v
tuning_curve_mat	makePlotsTRT.m	/^                tuning_curve_mat = zeros(num_bins*2,length(models_to_plot)+1);$/;"	v
tuning_curve_mat	makePlotsTRT.m	/^            tuning_curve_mat = zeros(num_bins*2,length(models_to_plot)+1);$/;"	v
tuning_curves	lib/mwEncoders.m	/^    tuning_curves = cell(2,num_models);$/;"	v
tuning_idx	makePlotsTRT.m	/^                        tuning_idx = strcmp(encoderResults.params.model_aliases,models_to_plot{m/;"	v
tuning_idx	makePlotsTRT.m	/^                    tuning_idx = strcmp(encoderResults.params.model_aliases,models_to_plot{model/;"	v
tuning_params	lib/mwEncoders.m	/^            tuning_params = struct('out_signals',model_names{modelnum},'out_signal_names',unit_g/;"	v
twoStageEngine_td	lib/TrialData/util/gpfa/twoStageEngine_td.m	/^function result = twoStageEngine_td(seqTrain, seqTest, fname, varargin)$/;"	f
tx	lib/TrialData/DataProcessing/parseFileByTrial.m	/^            tx = tx(tx<end_time);$/;"	v
tx	lib/TrialData/DataProcessing/parseFileByTrial.m	/^            tx = tx(tx>start_time);$/;"	v
tx	lib/TrialData/DataProcessing/parseFileByTrial.m	/^        tx = [start_time; tx];$/;"	v
tx	lib/TrialData/DataProcessing/parseFileByTrial.m	/^        tx = [tx;end_time];$/;"	v
tx	lib/TrialData/DataProcessing/parseFileByTrial.m	/^        tx = data.t;$/;"	v
typ	lib/TrialData/util/gpfa/fastfa.m	/^  typ        = 'fa';$/;"	v
typ	lib/TrialData/util/gpfa/twoStageEngine_td.m	/^typ           = 'fa';$/;"	v
u	lib/TrialData/Analysis/getDPCA.m	/^            u = num2cell(unique([trial_data.(varargin{i})]));$/;"	v
u	lib/TrialData/Analysis/getDPCA.m	/^            u = unique({trial_data.(varargin{i})});$/;"	v
u	lib/TrialData/Analysis/pairwiseCorr.m	/^u = unique(c);$/;"	v
u	lib/TrialData/Tools/trialAverage.m	/^                u = unique([trial_data(cond_idx{i}).(fn_meta{f})]);$/;"	v
u	lib/TrialData/Tools/trialAverage.m	/^                u = unique(cat(1,trial_data(cond_idx{i}).(fn_meta{f})),'rows');$/;"	v
u	lib/TrialData/Tools/trialAverage.m	/^            u = unique({trial_data(cond_idx{i}).(fn_meta{f})});$/;"	v
u	lib/circ-toolbox/CircStat/circ_cmtest.m	/^u = unique(idx);$/;"	v
u	lib/circ-toolbox/CircStat/circ_vmrnd.m	/^      u = rand(3,1);$/;"	v
u	lib/circ-toolbox/CircStat/circ_vtest.m	/^u = v * sqrt(2\/n);$/;"	v
u	lib/circ-toolbox/CircStat/circ_wwtest.m	/^u = unique(idx);$/;"	v
uc	lib/TrialData/Tools/trialAverage.m	/^            uc = num2cell(unique([trial_data.(conditions{iCond})]));$/;"	v
uc	lib/TrialData/Tools/trialAverage.m	/^            uc = unique({trial_data.(conditions{iCond})});$/;"	v
ul	lib/TrialData/util/circular_mean.m	/^  ul = mu + t;$/;"	v
ul	lib/circ-toolbox/CircStat/circ_mean.m	/^  ul = mu + t;$/;"	v
ul	lib/circ-toolbox/CircStat/circ_mtest.m	/^ul = mu + t;$/;"	v
uni	lib/TrialData/util/dpca/dpca_plot.m	/^        uni = unique(options.whichMarg);$/;"	v
uniform	lib/circ-toolbox/CircStat/examples/example2.m	/^uniform = zeros(3,2);$/;"	v
uniquecids	lib/circ-toolbox/CircStat/circ_clust.m	/^uniquecids = unique(cid);$/;"	v
unitIDs	lib/NeuronTable/getTuningHull.m	/^unitIDs = unique(tuningTable(:,meta_header_idx));$/;"	v
unit_guide	lib/analyzeTRT.m	/^    unit_guide = [];$/;"	v
unit_guide	lib/mwEncoders.m	/^    unit_guide = td(1).([arrayname '_unit_guide']);$/;"	v
unit_idx	lib/NeuronTable/comparePDClouds.m	/^    unit_idx = ismember(ID,keys(i,:));$/;"	v
unit_idx	lib/NeuronTable/getTuningHull.m	/^    unit_idx = ismember(ID,unitIDs(i,:));$/;"	v
unit_idx	lib/NeuronTable/plotWeightClouds.m	/^    unit_idx = ismember(ID,modelIDs(i,:));$/;"	v
unit_idx	lib/TrialData/DataProcessing/parseFileByTrial.m	/^    unit_idx = cell(1,length(arrays));$/;"	v
unit_idx	lib/TrialData/DataProcessing/processNEV.m	/^                    unit_idx = chan_idx & NEV.Data.Spikes.Unit == found_units(iUnit);$/;"	v
unit_idx	lib/TrialData/DataProcessing/processNEV.m	/^                    unit_idx = chan_idx;$/;"	v
unit_idx	lib/plotMWTuningCloud.m	/^        unit_idx = ismember(ID,signalIDs(neuron_idx,:));$/;"	v
unit_idx	makePlotsTRT.m	/^    unit_idx = 1;$/;"	v
unit_structure	lib/TrialData/util/remove_spike_artifacts.m	/^    unit_structure = varargin{1};$/;"	v
unit_tic	lib/NeuronTable/getTDPDs.m	/^unit_tic = tic;$/;"	v
upp	lib/plotEncoderPR2.m	/^        upp = tinv(alphaup,encoderResults.params.num_folds*encoderResults.params.num_repeats-1);$/;"	v
useColor	lib/TrialData/util/gpfa/plot3D_td.m	/^    useColor = [ linspace(1,0,floor(min(length(seq),nPlotMax)\/2))', linspace(0,1,floor(min(leng/;"	v
useColor	lib/TrialData/util/gpfa/plot3D_td.m	/^useColor = 0.2 * [1 1 1]; % gray$/;"	v
useRad	lib/TrialData/util/angleDiff.m	/^        useRad = true;$/;"	v
useSqrt	lib/TrialData/util/gpfa/getSeq_td.m	/^  useSqrt = true;$/;"	v
use_array_name	lib/TrialData/DataProcessing/parseFileByTrial.m	/^                    use_array_name = array_alias{temp_idx,2};$/;"	v
use_array_name	lib/TrialData/DataProcessing/parseFileByTrial.m	/^            use_array_name = arrays{array};$/;"	v
use_bl_ref	lib/TrialData/Analysis/getLearningMetrics.m	/^use_bl_ref = true;$/;"	v
use_trials	lib/NeuronTable/getTuningCurves.m	/^use_trials        =  1:length(trial_data);$/;"	v
use_trials	lib/TrialData/Analysis/estimateDimensionality.m	/^    use_trials = getTDidx(trial_data,use_trials{:});$/;"	v
use_trials	lib/TrialData/Analysis/estimateDimensionality.m	/^use_trials    =  1:length(trial_data);$/;"	v
use_trials	lib/TrialData/Analysis/getPotentSpace.m	/^    use_trials = getTDidx(trial_data,use_trials{:});$/;"	v
use_trials	lib/TrialData/Analysis/getPotentSpace.m	/^use_trials   =  1:length(trial_data);$/;"	v
use_trials	lib/TrialData/Tools/addCorrelatedNoise.m	/^use_trials      =  1:length(trial_data);$/;"	v
use_trials	lib/TrialData/Tools/dimReduce.m	/^    use_trials = getTDidx(trial_data,use_trials{:});$/;"	v
use_trials	lib/TrialData/Tools/dimReduce.m	/^use_trials      =  1:length(trial_data);$/;"	v
use_trials	lib/TrialData/Tools/getNoiseCovar.m	/^use_trials      =  1:length(trial_data);$/;"	v
use_trials	lib/TrialData/Tools/removeBadNeurons.m	/^    use_trials = getTDidx(trial_data,use_trials{:});$/;"	v
use_trials	lib/TrialData/Tools/removeBadNeurons.m	/^use_trials      =  1:length(trial_data);$/;"	v
userRequestedChanRow	lib/TrialData/util/openNSx_td.m	/^            userRequestedChanRow = inputArgument;$/;"	v
userRequestedChanRow	lib/TrialData/util/openNSx_td.m	/^            userRequestedChanRow = str2num(inputArgument(3:end)); %#ok<ST2NM>$/;"	v
userRequestedChannels	lib/TrialData/util/openNSx_td.m	/^            userRequestedChannels = NSx.MetaTags.ChannelID(userRequestedChanRow);$/;"	v
userRequestedChannels	lib/TrialData/util/openNSx_td.m	/^        userRequestedChannels = NSx.MetaTags.ChannelID;$/;"	v
usincos	lib/TrialData/Analysis/getLearningMetrics.m	/^                usincos = [sin(utheta'*(1:num_freqs)) cos(utheta'*(1:num_freqs))];$/;"	v
utheta	lib/TrialData/Analysis/getLearningMetrics.m	/^utheta = unique([trial_data.target_direction]);$/;"	v
utheta	lib/TrialData/util/bin_angles.m	/^    utheta = unique(theta);$/;"	v
v	lib/TrialData/Tools/reorderTDfields.m	/^v = zeros(1,length(idx_idx));$/;"	v
v	lib/circ-toolbox/CircStat/circ_moment.m	/^  v = size(alpha).\/size(theta);$/;"	v
v	lib/circ-toolbox/CircStat/circ_vtest.m	/^v = R * cos(mu-dir);$/;"	v
vOut	lib/matlab-linspecer/linspecer.m	/^vOut = cell(size(vIn,1),1);$/;"	v
val	lib/TrialData/Analysis/getDPCA.m	/^                val = [val,length(intersect(varargin{i:i+1}))];$/;"	v
val	lib/TrialData/Analysis/getDPCA.m	/^            val = [val,length(varargin{1})];$/;"	v
val	lib/TrialData/Analysis/getDPCA.m	/^            val = cat(3,val{:});$/;"	v
val	lib/TrialData/Analysis/getDPCA.m	/^            val = loop_me_twice(length(size(val{1})),[],val,valIdx,0,idx_vals{:});$/;"	v
val	lib/TrialData/Analysis/getDPCA.m	/^            val = loops_all_the_way_down(val,temp{:});$/;"	v
val	lib/TrialData/Analysis/getDPCA.m	/^        val = [val {fr'}];$/;"	v
valCat	lib/TrialData/Analysis/getDPCA.m	/^            valCat = cat(dim+1,temp,valCat);$/;"	v
valCat	lib/TrialData/Analysis/getDPCA.m	/^            valCat = loop_me_twice(dim+1,valCat,val(p),valIdx(:,p),depthCount,varargin{2:end});$/;"	v
valIdx	lib/TrialData/Analysis/getDPCA.m	/^        valIdx = [valIdx, depthCount];$/;"	v
varFloor	lib/TrialData/util/gpfa/fastfa.m	/^  varFloor = minVarFrac * diag(cX);  $/;"	v
var_err	makePlotsTRT.m	/^            var_err = var(err{monkeynum}.(models_to_plot{modelnum}));$/;"	v
var_names	lib/NeuronTable/getTuningCurves.m	/^    var_names = [{'bins'} strcat(prefix,move_corr{:,1},{'Curve','CurveCIlow','CurveCIhigh'})];$/;"	v
var_names	lib/NeuronTable/getTuningCurves.m	/^    var_names = [{'bins'} strcat(prefix,move_corr{:,1},{'Curve'})];$/;"	v
varargin	lib/NeuronTable/getNTidx.m	/^    varargin = varargin{1};$/;"	v
varargin	lib/TrialData/DataProcessing/initSignalStruct.m	/^    varargin = varargin{1};$/;"	v
varargin	lib/TrialData/Tools/appendTDs.m	/^varargin = varargin(~idx_empty);$/;"	v
varargin	lib/TrialData/Tools/catTDs.m	/^varargin = varargin(~idx_empty);$/;"	v
varargin	lib/TrialData/Tools/dupeAndShift.m	/^    varargin = varargin{1};$/;"	v
varargin	lib/TrialData/Tools/getTDidx.m	/^    varargin = varargin{1};$/;"	v
varargin	lib/TrialData/util/checkUnitGuides.m	/^    varargin = varargin{1};$/;"	v
vardiff	lib/plotEncoderPR2.m	/^        vardiff = var(diffstat(idx));$/;"	v
vars	lib/TrialData/util/assignParams.m	/^vars = fieldnames(params);$/;"	v
vars	lib/TrialData/util/gpfa/gpfaEngine_td.m	/^vars  = who;$/;"	v
vars	lib/TrialData/util/gpfa/twoStageEngine_td.m	/^vars  = who;$/;"	v
velModel_params	lib/coordCorr.m	/^    velModel_params = cell(num_models,1);$/;"	v
velPredVAF	lib/coordCorr.m	/^    velPredVAF = zeros(num_repeats,num_folds,num_models);$/;"	v
vel_or_pos	lib/TrialData/Analysis/getLearningMetrics.m	/^vel_or_pos = 'vel';$/;"	v
velocity	lib/TrialData/BBDemoScript.m	/^velocity = get_vars(trial_data_movement, {'vel',1:2});$/;"	v
velocity2	lib/TrialData/BBDemoScript.m	/^velocity2 = cat(1, trial_data_movement.vel);$/;"	v
velocity_variable	lib/TrialData/Tools/getSpeed.m	/^velocity_variable = 'vel';$/;"	v
vels	lib/plotMWTuningSurfaces.m	/^            vels = cat(1,td.vel);$/;"	v
verbose	lib/NeuronTable/getTDClassicalPDs.m	/^verbose = true;$/;"	v
verbose	lib/NeuronTable/getTDPDs.m	/^verbose = true;$/;"	v
verbose	lib/TrialData/util/gpfa/fastfa.m	/^  verbose    = false;$/;"	v
verbose	lib/analyzeTRT.m	/^    verbose = true;$/;"	v
videoSyncPacketID	lib/TrialData/util/openNEV_td.m	/^videoSyncPacketID = 65534;$/;"	v
videoSyncPacketIDIndices	lib/TrialData/util/openNEV_td.m	/^videoSyncPacketIDIndices   = find(PacketIDs == videoSyncPacketID);$/;"	v
visData	lib/TrialData/Plotting/visData.m	/^function [ ] = visData( trial_data, params )$/;"	f
vis_on	lib/circ-toolbox/CircStat/circ_kuipertest.m	/^    vis_on = 0;$/;"	v
w	lib/TrialData/Tools/dimReduce.m	/^w                 = [];    % w is used to know if params was info_out (e.g. whether to recompute/;"	v
w	lib/TrialData/util/circular_mean.m	/^	w = ones(size(alpha));$/;"	v
w	lib/TrialData/util/dpca/dpca_plot.m	/^w = [.95 .95 .95];       %# middle$/;"	v
w	lib/circ-toolbox/CircStat/circ_confmean.m	/^	w = ones(size(alpha));$/;"	v
w	lib/circ-toolbox/CircStat/circ_kappa.m	/^	w = ones(size(alpha));$/;"	v
w	lib/circ-toolbox/CircStat/circ_kappa.m	/^    w = w';$/;"	v
w	lib/circ-toolbox/CircStat/circ_kurtosis.m	/^	w = ones(size(alpha));$/;"	v
w	lib/circ-toolbox/CircStat/circ_mean.m	/^	w = ones(size(alpha));$/;"	v
w	lib/circ-toolbox/CircStat/circ_moment.m	/^	w = ones(size(alpha));$/;"	v
w	lib/circ-toolbox/CircStat/circ_mtest.m	/^	w = ones(size(alpha));$/;"	v
w	lib/circ-toolbox/CircStat/circ_mtest.m	/^    w = w';$/;"	v
w	lib/circ-toolbox/CircStat/circ_otest.m	/^  w = ones(size(alpha));$/;"	v
w	lib/circ-toolbox/CircStat/circ_r.m	/^	w = ones(size(alpha));$/;"	v
w	lib/circ-toolbox/CircStat/circ_skewness.m	/^	w = ones(size(alpha));$/;"	v
w	lib/circ-toolbox/CircStat/circ_stats.m	/^  w = ones(size(alpha));$/;"	v
w	lib/circ-toolbox/CircStat/circ_std.m	/^	w = ones(size(alpha));$/;"	v
w	lib/circ-toolbox/CircStat/circ_var.m	/^	w = ones(size(alpha));$/;"	v
w	lib/circ-toolbox/CircStat/circ_vmpar.m	/^  w = ones(size(alpha));$/;"	v
w	lib/circ-toolbox/CircStat/circ_vtest.m	/^	w = ones(size(alpha));$/;"	v
w	lib/circ-toolbox/CircStat/circ_vtest.m	/^    w = w';$/;"	v
w	lib/circ-toolbox/CircStat/circ_wwtest.m	/^    w = [w1; w2];$/;"	v
w	lib/circ-toolbox/CircStat/circ_wwtest.m	/^    w = ones(size(alpha));  $/;"	v
w	lib/circ-toolbox/CircStat/circ_wwtest.m	/^    w = ones(size(alpha));$/;"	v
w	lib/circ-toolbox/CircStat/circ_wwtest.m	/^    w = varargin{3}(:);$/;"	v
w1	lib/circ-toolbox/CircStat/circ_wwtest.m	/^    w1 = varargin{3}(:);$/;"	v
w2	lib/circ-toolbox/CircStat/circ_wwtest.m	/^    w2 = varargin{4}(:);$/;"	v
w_in	lib/TrialData/Analysis/getPotentSpace.m	/^w_in = pca_info_in.w;$/;"	v
w_out	lib/TrialData/Analysis/getPotentSpace.m	/^w_out = pca_info_out.w;$/;"	v
weightArr	lib/NeuronTable/getTDModelWeights.m	/^    weightArr = zeros(num_out_signals,size(in_signals{in_signal_idx,2},2));$/;"	v
weightTable	lib/NeuronTable/getTDModelWeights.m	/^    weightTable = [weightTable model_eval_table];$/;"	v
weightTable	lib/NeuronTable/getTDModelWeights.m	/^    weightTable = [weightTable tab_append];$/;"	v
weightTable	lib/NeuronTable/getTDModelWeights.m	/^weightTable = [tableStarter weightTable];$/;"	v
weightTable	lib/NeuronTable/getTDModelWeights.m	/^weightTable = table(zeros(num_out_signals,1),'VariableNames',{[prefix 'baselineWeight']});$/;"	v
weightTable_select	lib/NeuronTable/getPDsFromWeights.m	/^        weightTable_select = weightTable(ismember(weightTable(:,key_cols),key),:);$/;"	v
weight_cols	lib/NeuronTable/getPDsFromWeights.m	/^weight_cols = endsWith(weightTable.Properties.VariableNames,'Weight') & ~baseline_cols;$/;"	v
weight_cols_idx	lib/NeuronTable/getPDsFromWeights.m	/^weight_cols_idx = find(weight_cols);$/;"	v
weight_header_idx	lib/NeuronTable/getTuningHull.m	/^weight_header_idx = endsWith(tuningTable.Properties.VariableNames,'Weight');$/;"	v
weights	lib/NeuronTable/getPDsFromWeights.m	/^        weights = weightTable_select.(col_title);$/;"	v
weights	lib/NeuronTable/getTDModelWeights.m	/^weights = temp_info.b';$/;"	v
whichMarg	lib/TrialData/util/dpca/dpca.m	/^    whichMarg = [whichMarg i*ones(1, nc)];$/;"	v
whichMarg	lib/TrialData/util/dpca/dpca.m	/^    whichMarg = margNums(whichMarg);$/;"	v
whichMarg	lib/TrialData/util/dpca/dpca.m	/^    whichMarg = whichMarg(order(1:L));$/;"	v
whichMarg	lib/TrialData/util/dpca/dpca.m	/^    whichMarg = whichMarg(toKeep);$/;"	v
whichMarg	lib/TrialData/util/dpca/dpca.m	/^whichMarg = [];$/;"	v
which_field	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^which_field = 'speed';$/;"	v
which_fields	lib/TrialData/Tools/dupeAndShift.m	/^which_fields = which_fields(sort_idx);$/;"	v
which_fields	lib/TrialData/Tools/dupeAndShift.m	/^which_fields = {varargin{1:2:end}};$/;"	v
which_file	lib/TrialData/DataProcessing/convertDataToTD.m	/^    which_file    = signal_info{iFile}.filename;$/;"	v
which_label	lib/TrialData/DataProcessing/convertDataToTD.m	/^        which_label = signal_info{iFile}.label{iSig};$/;"	v
which_marg	lib/TrialData/Analysis/getDPCA.m	/^which_marg = [];$/;"	v
which_method	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^which_method  =  'peak';$/;"	v
which_method	lib/TrialData/util/compute_r2.m	/^    which_method = 'corr';$/;"	v
which_metric	lib/TrialData/Analysis/getLearningMetrics.m	/^which_metric = 'angle';$/;"	v
which_name	lib/TrialData/DataProcessing/convertDataToTD.m	/^        which_name = signal_info{iFile}.name{iSig};$/;"	v
which_operation	lib/TrialData/DataProcessing/convertDataToTD.m	/^        which_operation = signal_info{iFile}.operation{iSig};$/;"	v
which_routine	lib/TrialData/DataProcessing/convertDataToTD.m	/^    which_routine = signal_info{iFile}.routine;$/;"	v
which_type	lib/TrialData/DataProcessing/convertDataToTD.m	/^        which_type = signal_info{iFile}.type{iSig};$/;"	v
which_units	lib/NeuronTable/compareTuning.m	/^which_units = 1:height(curves{1});$/;"	v
which_vars	lib/TrialData/Tools/convBasisFunc.m	/^which_vars = getTDfields(trial_data,'time'); % default to all time signals$/;"	v
whiteFade	lib/matlab-linspecer/linspecer.m	/^function cmap = whiteFade(varargin)$/;"	f
win	lib/TrialData/Analysis/getNeuronTuning.m	/^win        =  params.window;$/;"	v
wrap_func	lib/TrialData/Tools/addCoordPoint2TD.m	/^    wrap_func = @cart2pol_wrap;$/;"	v
wrap_func	lib/TrialData/Tools/addCoordPoint2TD.m	/^    wrap_func = @cart2sph_wrap;$/;"	v
x	lib/TrialData/Analysis/getModel.m	/^        x  = get_vars(trial_data(trial),in_signals);$/;"	v
x	lib/TrialData/Analysis/getModel.m	/^    x = get_vars(trial_data(train_idx),in_signals);$/;"	v
x	lib/TrialData/Analysis/getPotentSpace.m	/^    x = score_in(:,1:in_dims);$/;"	v
x	lib/TrialData/DataProcessing/parseFileByTrial.m	/^        x = data.(var_list{var});$/;"	v
x	lib/TrialData/util/subfcn/get_vars.m	/^x = zeros(size(cat(1,trial_data.(fn{1})),1),sum(cellfun(@(x) length(x),idx)));$/;"	v
x	lib/circ-toolbox/CircStat/circ_corrcl.m	/^	x = x';$/;"	v
x	lib/circ-toolbox/CircStat/circ_dist2.m	/^  x = x';$/;"	v
x	lib/circ-toolbox/CircStat/circ_plot.m	/^      x = 20;$/;"	v
x	lib/circ-toolbox/CircStat/circ_plot.m	/^      x = varargin{1};$/;"	v
x	lib/circ-toolbox/CircStat/circ_samplecdf.m	/^x = thetas(thetas<0);$/;"	v
x	lib/matlab-linspecer/linspecer.m	/^    x = linspace(1,n,size(cmapp,1));$/;"	v
x	lib/matlab-linspecer/linspecer.m	/^x = linspace(1,n,size(cmapp,1));$/;"	v
xDim	lib/TrialData/Analysis/runGPFA.m	/^xDim        =  8;$/;"	v
xDim	lib/TrialData/util/gpfa/gpfaEngine_td.m	/^xDim          = 3;$/;"	v
xDim	lib/TrialData/util/gpfa/neuralTraj_td.m	/^xDim          = 8;$/;"	v
xDim	lib/TrialData/util/gpfa/twoStageEngine_td.m	/^xDim          = 3;$/;"	v
xDim	lib/TrialData/util/orthogonalize.m	/^  xDim = size(L, 2);$/;"	v
x_center	lib/TrialData/Plotting/visData.m	/^    x_center = target_distance*cos(trial_data(trial).target_direction);$/;"	v
x_model_alias	lib/plotEncoderPR2.m	/^        x_model_alias = 'Cylindrical Hand';$/;"	v
x_model_alias	lib/plotEncoderPR2.m	/^        x_model_alias = 'Egocentric';$/;"	v
x_model_alias	lib/plotEncoderPR2.m	/^        x_model_alias = 'Extrinsic';$/;"	v
x_model_alias	lib/plotEncoderPR2.m	/^        x_model_alias = 'Hand\/Elbow';$/;"	v
x_model_alias	lib/plotEncoderPR2.m	/^        x_model_alias = 'Joint';$/;"	v
x_model_alias	lib/plotEncoderPR2.m	/^        x_model_alias = 'Muscle';$/;"	v
x_model_alias	lib/plotEncoderPR2.m	/^        x_model_alias = 'OpenSim Egocentric';$/;"	v
x_model_alias	lib/plotEncoderPR2.m	/^        x_model_alias = 'OpenSim Extrinsic';$/;"	v
x_model_alias	lib/plotEncoderPR2.m	/^        x_model_alias = 'OpenSim Hand\/Elbow';$/;"	v
x_neurons	lib/plotEncoderPR2.m	/^    x_neurons = dpR2CI(:,2)<0;$/;"	v
x_offset	makePlotsTRT.m	/^        x_offset = monkeynum-1;$/;"	v
xdetrend	lib/TrialData/DataProcessing/parseFileByTrial.m	/^            xdetrend = xdetrend(tx<end_time);$/;"	v
xdetrend	lib/TrialData/DataProcessing/parseFileByTrial.m	/^            xdetrend = xdetrend(tx>start_time);$/;"	v
xdetrend	lib/TrialData/DataProcessing/parseFileByTrial.m	/^        xdetrend = [xdetrend(1,:); xdetrend];$/;"	v
xdetrend	lib/TrialData/DataProcessing/parseFileByTrial.m	/^        xdetrend = [xdetrend; xdetrend(end,:)];$/;"	v
xdetrend	lib/TrialData/DataProcessing/parseFileByTrial.m	/^        xdetrend = x - polyval(a,tx);$/;"	v
xi	lib/circ-toolbox/CircStat/circ_confmean.m	/^  xi = 0.05;$/;"	v
xi	lib/circ-toolbox/CircStat/circ_mtest.m	/^  xi = 0.05;$/;"	v
xi	lib/matlab-linspecer/linspecer.m	/^    xi = 1:n;$/;"	v
xi	lib/matlab-linspecer/linspecer.m	/^xi = 1:n;$/;"	v
xtick	makePlotsTRT.m	/^    xtick = [(1:4)*0.20 1+(1:4)*0.20];$/;"	v
xticklabel	makePlotsTRT.m	/^    xticklabel = repmat({'Hand-only pos','Hand+Neuron pos','Hand vel','Hand+Neuron vel'},1,2);$/;"	v
xval	makePlotsTRT.m	/^            xval = monk_x(monkeynum) + template_x(modelnum);$/;"	v
xval	makePlotsTRT.m	/^        xval = repmat(monk_x(monkeynum)+template_x,length(avg_pR2),1);$/;"	v
xval	makePlotsTRT.m	/^        xval = repmat(monk_x(monkeynum)+template_x,length(tuning_corr),1);$/;"	v
xx	lib/TrialData/util/dpca/dpca_plot.m	/^        xx = xlim;$/;"	v
y	lib/TrialData/Analysis/evalModel.m	/^        y = get_vars(trial_data(trials),out_signals);$/;"	v
y	lib/TrialData/Analysis/evalModel.m	/^    y = get_vars(trial_data(trial_idx),out_signals);$/;"	v
y	lib/TrialData/Analysis/getModel.m	/^    y = get_vars(trial_data(train_idx),out_signals);$/;"	v
y	lib/TrialData/Analysis/getPotentSpace.m	/^    y = score_out(:,1:out_dims);$/;"	v
y	lib/circ-toolbox/CircStat/circ_dist2.m	/^  y = x;$/;"	v
y	lib/circ-toolbox/CircStat/circ_dist2.m	/^  y = y';$/;"	v
yAll	lib/TrialData/util/gpfa/gpfaEngine_td.m	/^yAll             = [seqTrainCut.y];$/;"	v
yAll	lib/TrialData/util/gpfa/neuralTraj_td.m	/^    yAll = [seqTrain.y];$/;"	v
yDim	lib/TrialData/util/gpfa/getSeq_td.m	/^    yDim = size(dat(n).spikes, 1);$/;"	v
yDim	lib/TrialData/util/gpfa/neuralTraj_td.m	/^    yDim  = size(yAll, 1);$/;"	v
yPred	lib/TrialData/Analysis/getModel.m	/^            yPred = net(x');$/;"	v
y_center	lib/TrialData/Plotting/visData.m	/^    y_center = target_distance*sin(trial_data(trial).target_direction);$/;"	v
y_fit	lib/TrialData/Analysis/evalModel.m	/^y_fit = varargin{2};$/;"	v
y_fit2	lib/TrialData/Analysis/evalModel.m	/^    y_fit2 = varargin{3};$/;"	v
y_model_alias	lib/plotEncoderPR2.m	/^        y_model_alias = 'Cylindrical Hand';$/;"	v
y_model_alias	lib/plotEncoderPR2.m	/^        y_model_alias = 'Egocentric';$/;"	v
y_model_alias	lib/plotEncoderPR2.m	/^        y_model_alias = 'Extrinsic';$/;"	v
y_model_alias	lib/plotEncoderPR2.m	/^        y_model_alias = 'Hand\/Elbow';$/;"	v
y_model_alias	lib/plotEncoderPR2.m	/^        y_model_alias = 'Joint';$/;"	v
y_model_alias	lib/plotEncoderPR2.m	/^        y_model_alias = 'Muscle';$/;"	v
y_model_alias	lib/plotEncoderPR2.m	/^        y_model_alias = 'OpenSim Egocentric';$/;"	v
y_model_alias	lib/plotEncoderPR2.m	/^        y_model_alias = 'OpenSim Extrinsic';$/;"	v
y_model_alias	lib/plotEncoderPR2.m	/^        y_model_alias = 'OpenSim Hand\/Elbow';$/;"	v
y_neurons	lib/plotEncoderPR2.m	/^    y_neurons = dpR2CI(:,1)>0;$/;"	v
y_test	lib/TrialData/Analysis/evalModel.m	/^y_test         = varargin{1};$/;"	v
ydetrend	lib/TrialData/DataProcessing/parseFileByTrial.m	/^                    ydetrend = ydetrend(1:end-1);$/;"	v
ydetrend	lib/TrialData/DataProcessing/parseFileByTrial.m	/^                    ydetrend = ydetrend(2:end);$/;"	v
yfit	lib/TrialData/Analysis/getModel.m	/^                yfit = b(x')';$/;"	v
yfit	lib/TrialData/Analysis/getModel.m	/^        yfit = zeros(size(x,1),size(b,2));$/;"	v
yhat1	lib/TrialData/Analysis/evalModel.m	/^        yhat1 = cat(1,trial_data(trials).([td_fn_prefix '_' model_name{1}]));$/;"	v
yhat1	lib/TrialData/Analysis/evalModel.m	/^    yhat1 = cat(1,trial_data(trial_idx).([td_fn_prefix '_' model_name{1}]));$/;"	v
yhat2	lib/TrialData/Analysis/evalModel.m	/^            yhat2 = cat(1,trial_data(trials).([td_fn_prefix '_' model_name{2}]));$/;"	v
yhat2	lib/TrialData/Analysis/evalModel.m	/^        yhat2 = cat(1,trial_data(trial_idx).([td_fn_prefix '_' model_name{2}]));$/;"	v
ylim	data_testing/hand_elbow_xcorr.m	/^    ylim = get(gca,'ylim');$/;"	v
ylims	makePlotsTRT.m	/^        ylims = get(gca,'ylim')';$/;"	v
yposs	lib/TrialData/util/dpca/dpca_plot.m	/^    yposs = [0.9 0.65 0.45 0.25];$/;"	v
yrnge	lib/TrialData/util/makeBasis_PostSpike.m	/^yrnge = nlin(hpeaks+b);        % nonlinearly transformed first & last bumps$/;"	v
yy	lib/TrialData/util/dpca/dpca_plot.m	/^        yy = ylim;$/;"	v
z	lib/circ-toolbox/CircStat/circ_plot.m	/^    z = exp(1i*alpha);$/;"	v
z	lib/circ-toolbox/CircStat/circ_rtest.m	/^z = R^2 \/ n;$/;"	v
z	lib/circ-toolbox/CircStat/circ_vmrnd.m	/^      z = cos(pi*u(1));$/;"	v
z2	lib/circ-toolbox/CircStat/circ_clust.m	/^    z2 = exp(1i*alpha);$/;"	v
zbarm	lib/circ-toolbox/CircStat/circ_axialmean.m	/^zbarm = mean(exp(1i*alphas*m),dim);$/;"	v
zero_pad	lib/TrialData/Tools/trimTD.m	/^zero_pad = false;$/;"	v
zm	lib/circ-toolbox/CircStat/circ_plot.m	/^      zm = r*exp(1i*phi);$/;"	v
zm	lib/circ-toolbox/CircStat/examples/example2.m	/^  zm = r*exp(i*phi');$/;"	v
zmu	lib/circ-toolbox/CircStat/circ_clust.m	/^    zmu = r.*exp(1i*mu);$/;"	v
zscoreSignals	lib/TrialData/Tools/zscoreSignals.m	/^function trial_data = zscoreSignals(trial_data,params)$/;"	f
zz	lib/circ-toolbox/CircStat/circ_plot.m	/^    zz = exp(1i*linspace(0, 2*pi, 101));$/;"	v
zz	lib/circ-toolbox/CircStat/examples/example2.m	/^  zz = exp(i*linspace(0, 2*pi, 101)) * mw;$/;"	v
